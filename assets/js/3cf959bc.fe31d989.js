"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[52997],{3905:(e,a,t)=>{t.d(a,{Zo:()=>g,kt:()=>c});var s=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);a&&(s=s.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,s)}return t}function r(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,s,n=function(e,a){if(null==e)return{};var t,s,n={},i=Object.keys(e);for(s=0;s<i.length;s++)t=i[s],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(s=0;s<i.length;s++)t=i[s],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var m=s.createContext({}),p=function(e){var a=s.useContext(m),t=a;return e&&(t="function"==typeof e?e(a):r(r({},a),e)),t},g=function(e){var a=p(e.components);return s.createElement(m.Provider,{value:a},e.children)},o="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return s.createElement(s.Fragment,{},a)}},u=s.forwardRef((function(e,a){var t=e.components,n=e.mdxType,i=e.originalType,m=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),o=p(t),u=n,c=o["".concat(m,".").concat(u)]||o[u]||d[u]||i;return t?s.createElement(c,r(r({ref:a},g),{},{components:t})):s.createElement(c,r({ref:a},g))}));function c(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=t.length,r=new Array(i);r[0]=u;var l={};for(var m in a)hasOwnProperty.call(a,m)&&(l[m]=a[m]);l.originalType=e,l[o]="string"==typeof e?e:n,r[1]=l;for(var p=2;p<i;p++)r[p]=t[p];return s.createElement.apply(null,r)}return s.createElement.apply(null,t)}u.displayName="MDXCreateElement"},30205:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>m,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var s=t(87462),n=(t(67294),t(3905));const i={},r="Messaging",l={unversionedId:"api/capi/messaging/index",id:"api/capi/messaging/index",title:"Messaging",description:"Overview",source:"@site/docs/api/2_capi/messaging/index.md",sourceDirName:"api/2_capi/messaging",slug:"/api/capi/messaging/",permalink:"/braincloud-apiref/api/capi/messaging/",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/messaging/index.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"TurnShieldOnFor",permalink:"/braincloud-apiref/api/capi/matchmaking/turnshieldonfor"},next:{title:"DeleteMessages",permalink:"/braincloud-apiref/api/capi/messaging/deletemessages"}},m={},p=[{value:"Overview",id:"overview",level:2},{value:"Message fields",id:"message-fields",level:3},{value:"API Summary",id:"api-summary",level:3},{value:"Retrieving messages",id:"retrieving-messages",level:3},{value:"Sending messages",id:"sending-messages",level:3},{value:"Updating messages",id:"updating-messages",level:3},{value:"Sys API Calls",id:"sys-api-calls",level:3},{value:"Retrieving messages",id:"retrieving-messages-1",level:3},{value:"Sending messages",id:"sending-messages-1",level:3},{value:"Updating messages",id:"updating-messages-1",level:3}],g=(o="DocCardList",function(e){return console.warn("Component "+o+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",e)});var o;const d={toc:p};function u(e){let{components:a,...t}=e;return(0,n.kt)("wrapper",(0,s.Z)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"messaging"},"Messaging"),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Messaging")," is a new service that enables rich communications between end-users. It is available to all ",(0,n.kt)("em",{parentName:"p"},"Plus")," plan subscriptions - and can optionally utilise ",(0,n.kt)("strong",{parentName:"p"},"brainCloud RTT")," to send messages in real-time."),(0,n.kt)("p",null,"Key concepts:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"used for ",(0,n.kt)("em",{parentName:"li"},"directly")," addressed messages (via profileIds) - as opposed to ",(0,n.kt)("a",{parentName:"li",href:"/api/capi/chat"},"Chat")," messages, which are sent to ",(0,n.kt)("em",{parentName:"li"},"channels")),(0,n.kt)("li",{parentName:"ul"},"is not email (though it is modelled similarly)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"messages are sent ",(0,n.kt)("em",{parentName:"li"},"within")," brainCloud only"),(0,n.kt)("li",{parentName:"ul"},"and only within a single app"))),(0,n.kt)("li",{parentName:"ul"},"three types of messages - ",(0,n.kt)("em",{parentName:"li"},"regular"),", ",(0,n.kt)("em",{parentName:"li"},"system")," and ",(0,n.kt)("em",{parentName:"li"},"bulk"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"regular messages")," - sent by end-users."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"system messages")," - sent from the system (i.e. the app) - so the ",(0,n.kt)("em",{parentName:"li"},"from")," field is ",(0,n.kt)("inlineCode",{parentName:"li"},"null")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"bulk messages")," - system messages sent to all users (",(0,n.kt)("strong",{parentName:"li"},"NOT YET SUPPORTED - COMING SOON!"),")"))),(0,n.kt)("li",{parentName:"ul"},"sends real-time events to online users when messages are received (if ",(0,n.kt)("strong",{parentName:"li"},"brainCloud RTT")," is enabled)")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},(0,n.kt)("strong",{parentName:"p"},"Message content format"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'{\n    "msgbox": "inbox",\n    "msgId": "<guidA>",\n    "mbCr": 1530070436834,\n    "mbUp": 1530070436834,\n    "mbVer": 1,\n    "message": {\n        "from": {\n            "id": "<profileIdA>",\n            "name": "Holly Leung",\n            "pic": "<optionalPicUrl>"\n        },\n        "to": [\n            "<profIleIdB>"\n        ],\n        "sentAt": 1530070436834,\n        "content": {\n            "subject": "optional",\n            "text": "This is a test message"\n        }\n    }\n}\n')),(0,n.kt)("h3",{id:"message-fields"},"Message fields"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Field"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"msgbox"),(0,n.kt)("td",{parentName:"tr",align:null},"The box (inbox, sent) that the message is stored in")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"msgId"),(0,n.kt)("td",{parentName:"tr",align:null},"The chat message id (used for editing / deleting posted messages)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"mbCr"),(0,n.kt)("td",{parentName:"tr",align:null},"Created at date+time in millis")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"mbUp"),(0,n.kt)("td",{parentName:"tr",align:null},"Last updated date+time in millis")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"mbVer"),(0,n.kt)("td",{parentName:"tr",align:null},"The version of the message")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"from"),(0,n.kt)("td",{parentName:"tr",align:null},"Information about the originating user")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"to"),(0,n.kt)("td",{parentName:"tr",align:null},"Array of message recipients")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"sentAt"),(0,n.kt)("td",{parentName:"tr",align:null},"Time+date in millis at which the message was sent")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"content"),(0,n.kt)("td",{parentName:"tr",align:null},"The message content. If plaintext, should contain a text field")))),(0,n.kt)("h3",{id:"api-summary"},"API Summary"),(0,n.kt)("h3",{id:"retrieving-messages"},"Retrieving messages"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/capi/messaging/getmessageboxes"},"GetMessageBoxes")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/capi/messaging/getmessagecounts"},"GetMessageCounts")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/capi/messaging/getmessages"},"GetMessages")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/capi/messaging/getmessagespage"},"GetMessagesPage")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/capi/messaging/getmessagespageoffset"},"GetMessagesPageOffset"))),(0,n.kt)("h3",{id:"sending-messages"},"Sending messages"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/capi/messaging/sendmessage"},"SendMessage")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/capi/messaging/sendmessagesimple"},"SendMessageSimple"))),(0,n.kt)("h3",{id:"updating-messages"},"Updating messages"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/capi/messaging/deletemessages"},"DeleteMessages")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/capi/messaging/markmessagesread"},"MarkMessagesRead"))),(0,n.kt)("h3",{id:"sys-api-calls"},"Sys API Calls"),(0,n.kt)("p",null,"These APIs target the shared content portion of a message, and not the per-user messagebox metadata (which controls whether a message has been read, etc.). Can be used on user or system messages."),(0,n.kt)("p",null,"Available via cleint session cloud code, as well as S2S."),(0,n.kt)("h3",{id:"retrieving-messages-1"},"Retrieving messages"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/capi/messaging/sysgetmessages"},"SysGetMessages")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/capi/messaging/sysgetmessagespage"},"SysGetMessagesPage")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/capi/messaging/sysgetmessagespageoffset"},"SysGetMessagesPageOffset"))),(0,n.kt)("h3",{id:"sending-messages-1"},"Sending messages"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/capi/messaging/syssendmessage"},"SysSendMessage")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/capi/messaging/syssendmessagesimple"},"SysSendMessageSimple"))),(0,n.kt)("h3",{id:"updating-messages-1"},"Updating messages"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/capi/messaging/sysdeletemessage"},"SysDeleteMessage")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/capi/messaging/sysupdatemessage"},"SysUpdateMessage"))),(0,n.kt)(g,{mdxType:"DocCardList"}))}u.isMDXComponent=!0}}]);