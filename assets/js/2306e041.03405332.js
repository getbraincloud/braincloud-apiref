"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[15126],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>m});var r=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,l=function(e,t){if(null==e)return{};var a,r,l={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=r.createContext({}),d=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=d(e.components);return r.createElement(o.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var a=e.components,l=e.mdxType,n=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=d(a),f=l,m=u["".concat(o,".").concat(f)]||u[f]||c[f]||n;return a?r.createElement(m,i(i({ref:t},s),{},{components:a})):r.createElement(m,i({ref:t},s))}));function m(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var n=a.length,i=new Array(n);i[0]=f;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[u]="string"==typeof e?e:l,i[1]=p;for(var d=2;d<n;d++)i[d]=a[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}f.displayName="MDXCreateElement"},66127:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>v,frontMatter:()=>n,metadata:()=>p,toc:()=>d});var r=a(87462),l=(a(67294),a(3905));const n={},i="UploadFile - JavaScript",p={unversionedId:"api/capi/file/uploadfile,javascript",id:"api/capi/file/uploadfile,javascript",title:"UploadFile - JavaScript",description:"Overview",source:"@site/docs/api/2_capi/file/uploadfile,javascript.md",sourceDirName:"api/2_capi/file",slug:"/api/capi/file/uploadfile,javascript",permalink:"/braincloud-apiref/api/capi/file/uploadfile,javascript",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/file/uploadfile,javascript.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1673042992,formattedLastUpdatedAt:"Jan 6, 2023",frontMatter:{},sidebar:"apiSidebar",previous:{title:"PrepareUserUpload - CloudCode and JavaScript",permalink:"/braincloud-apiref/api/capi/file/prepareuserupload"},next:{title:"UploadFile",permalink:"/braincloud-apiref/api/capi/file/uploadfile"}},o={},d=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Status Codes",id:"status-codes",level:3},{value:"Method Parameters",id:"method-parameters",level:2}],s=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",t)},u=s("PartialServop"),c=s("BrowserWindow"),f=s("Tabs"),m=s("TabItem"),b={toc:d};function v(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,r.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"uploadfile---javascript"},"UploadFile - JavaScript"),(0,l.kt)("h2",{id:"overview"},"Overview"),(0,l.kt)("p",null,"Method uploads the supplied file to the brainCloud server. Note that you must call prepareUserUpload to retrieve the uploadId before calling this method. It is assumed that any methods required to monitor the file upload including progress, and completion are attached to the XMLHttpRequest xhr object's events such as:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'xhr.upload.addEventListener("progress", uploadProgress);'),(0,l.kt)("li",{parentName:"ul"},'xhr.addEventListener("load", transferComplete);'),(0,l.kt)("li",{parentName:"ul"},'xhr.addEventListener("error", transferFailed);'),(0,l.kt)("li",{parentName:"ul"},'xhr.addEventListener("abort", transferCanceled);')),(0,l.kt)("p",null,"On a 200 http status, the JSON return is available from XMLHttpRequest.responseText"),(0,l.kt)(u,{service_name:"file",operation_name:"UPLOAD_FILE",mdxType:"PartialServop"}),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)(c,{mdxType:"BrowserWindow"},(0,l.kt)(f,{mdxType:"Tabs"},(0,l.kt)(m,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp"},"// N/A\n"))),(0,l.kt)(m,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"// N/A\n"))),(0,l.kt)(m,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-objectivec"},"// N/A\n"))),(0,l.kt)(m,{value:"java",label:"Java",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"// N/A\n"))),(0,l.kt)(m,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-javascript"},'var shareable = true;\nvar replaceIfExists = true;\nvar file = document.getElementById(\'fileToUpload\').files[0];\nvar fileSize = file.size;\n\n_bc.file.prepareFileUpload(\n            "cloudPath", "cloudFilename", shareable, replaceIfExists, fileSize,\n            function(result) {\n                if (result.status == 200) {\n                    var uploadId = result.data.fileDetails.uploadId;\n                    _bc.file.uploadFile(xhr, file, uploadId);\n                }\n            }\n        );\n'))),(0,l.kt)(m,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cfscript"},"// N/A\n"))),(0,l.kt)(m,{value:"r",label:"Raw",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cfscript"},"// N/A\n"))))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"JSON Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status":200,\n    "data":{\n        "fileDetails":{\n            "updatedAt":1452616408147,\n            "fileSize":100,\n            "fileType":"User",\n            "expiresAt":1452702808146,\n            "shareable":true,\n            "uploadId":"cf9a075c-587e-4bd1-af0b-eab1a79b958f",\n            "createdAt":1452616408147,\n            "profileId":"bf8a1433-62d2-448e-b396-f3dbffff44",\n            "gameId":"99999",\n            "path":"dir1/dir2",\n            "filename":"filename",\n            "replaceIfExists":true,\n            "cloudPath":"bc/g/99999/u/bf8a1433-62d2-448e-b396-f3dbffff44/f/dir1/dir2/filename"\n        }\n    }\n}\n'))),(0,l.kt)("details",null,(0,l.kt)("summary",null,"Common Error Code"),(0,l.kt)("h3",{id:"status-codes"},"Status Codes"),(0,l.kt)("p",null,"The XMLHttpRequest object will return a 200 http status if the upload is successful.")),(0,l.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"xhr"),(0,l.kt)("td",{parentName:"tr",align:null},"The XMLHttpRequest object that the brainCloud client will use to upload the file")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"file"),(0,l.kt)("td",{parentName:"tr",align:null},"The file object")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"uploadId"),(0,l.kt)("td",{parentName:"tr",align:null},"The upload id obtained via prepareFileUpload()")))))}v.isMDXComponent=!0}}]);