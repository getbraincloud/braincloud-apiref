"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[5e3],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>u});var i=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,i)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,i,r=function(e,t){if(null==e)return{};var a,i,r={},n=Object.keys(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)a=n[i],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=i.createContext({}),c=function(e){var t=i.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},m=function(e){var t=c(e.components);return i.createElement(o.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,o=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),s=c(a),h=r,u=s["".concat(o,".").concat(h)]||s[h]||d[h]||n;return a?i.createElement(u,l(l({ref:t},m),{},{components:a})):i.createElement(u,l({ref:t},m))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,l=new Array(n);l[0]=h;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[s]="string"==typeof e?e:r,l[1]=p;for(var c=2;c<n;c++)l[c]=a[c];return i.createElement.apply(null,l)}return i.createElement.apply(null,a)}h.displayName="MDXCreateElement"},77444:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>n,metadata:()=>p,toc:()=>c});var i=a(87462),r=(a(67294),a(3905));const n={},l="MatchMaking",p={unversionedId:"api/capi/matchmaking/index",id:"api/capi/matchmaking/index",title:"MatchMaking",description:"Overview",source:"@site/docs/api/2_capi/matchmaking/index.md",sourceDirName:"api/2_capi/matchmaking",slug:"/api/capi/matchmaking/",permalink:"/braincloud-apiref/api/capi/matchmaking/",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/matchmaking/index.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1672193365,formattedLastUpdatedAt:"Dec 28, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"SendBasicEmail",permalink:"/braincloud-apiref/api/capi/mail/sendbasicemail"},next:{title:"DecrementPlayerRating",permalink:"/braincloud-apiref/api/capi/matchmaking/decrementplayerrating"}},o={},c=[{value:"Overview",id:"overview",level:2},{value:"API Summary",id:"api-summary",level:3},{value:"MatchMaking",id:"matchmaking-1",level:3},{value:"Finding Matches",id:"finding-matches",level:3},{value:"MatchMaking Filters",id:"matchmaking-filters",level:2},{value:"Writing and Configuring the Filter",id:"writing-and-configuring-the-filter",level:3},{value:"Method Parameters",id:"method-parameters",level:3},{value:"Filter vs. Attributes",id:"filter-vs-attributes",level:3},{value:"Player Rating",id:"player-rating",level:3},{value:"Multiplayer Protection",id:"multiplayer-protection",level:3}],m=(s="DocCardList",function(e){return console.warn("Component "+s+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var s;const d={toc:c};function h(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,i.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"matchmaking"},"MatchMaking"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"The MatchMaking Service is used for locating players to play against when using our Async or One-Way multiplayer features."),(0,r.kt)("admonition",{title:'"',type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"A player must be enabled via the ",(0,r.kt)("a",{href:"#capi-matchmaking-enablematchmaking"},"EnableMatchMaking")," method call in order to participate in a match. This is so that you may exclude players from matchmaking while they are in an introductory tutorial for your game.")),(0,r.kt)("p",null,"To use the matchMaking service matchMaking must be enabled from your app on the\n",(0,r.kt)("a",{parentName:"p",href:"https://portal.braincloudservers.com/admin/dashboard#/development/matchmaking"},"Multiplayer - MatchMaking page")," of the brainCloud portal."),(0,r.kt)("p",null,"The starting Player Rating is also set on this page."),(0,r.kt)("h3",{id:"api-summary"},"API Summary"),(0,r.kt)("h3",{id:"matchmaking-1"},"MatchMaking"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/capi/matchmaking/enablematchmaking"},"EnableMatchMaking")," - Enables match making for player."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/capi/matchmaking/disablematchmaking"},"DisableMatchMaking")," - Disables match making for player."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/capi/matchmaking/read"},"Read")," - Read player match making data.")),(0,r.kt)("h3",{id:"finding-matches"},"Finding Matches"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/capi/matchmaking/findplayers"},"FindPlayers")," - Finds one or more match candidates."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/capi/matchmaking/findplayerswithattributes"},"FindPlayersWithAttributes")," - Finds one or more match candidates."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/capi/matchmaking/findplayersusingfilter"},"FindPlayersUsingFilter")," - Finds one or more match candidates with script filter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/capi/matchmaking/findplayersusingscript"},"FindPlayersUsingScript")," - Finds one or more match candidates with provided script filter and player rating override."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/capi/matchmaking/findplayerswithattributesusingfilter"},"FindPlayersWithAttributesUsingFilter")," - Finds one or more match candidates with script filter."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/capi/matchmaking/findplayerswithattributesusingscript"},"FindPlayersWithAttributesUsingScript")," - Finds one or more match candidates with provided script filter and player rating override.")),(0,r.kt)("h2",{id:"matchmaking-filters"},"MatchMaking Filters"),(0,r.kt)("p",null,"Players found via matching can be filtered, to ensure players only get matched with certain other players."),(0,r.kt)("h3",{id:"writing-and-configuring-the-filter"},"Writing and Configuring the Filter"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cfscript"},"public exampleMatchMakingFilter( data )\n{\n    // This method examines the proposed player, and\n    // returns true if the match is acceptable.\n    // For purposes of this demo, we will only accept players\n    // whose name matches the name provided.\n\n    var result = false;\n\n    var matchName = data.extraParms.matchPlayerName;\n    var candidateName = data.matchCandidate.playerName;\n\n    if (matchName == candidateName) {\n        result = true;\n    }\n\n    result;\n}\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Example filter script parameters")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json-doc"},'{\n    "extraParms": {\n        "matchPlayerName": "Romundo"\n    },\n    "matchCandidate": {\n        "pictureUrl": null,\n        "playerName": "Romundo",\n        "playerId": "<profile id>",\n        "playerRating": 100,\n        "summaryFriendData": null\n    }\n}\n')),(0,r.kt)("p",null,"The filter logic must be written in a Cloud Code script, and configured for usage via the ",(0,r.kt)("strong",{parentName:"p"},"Design | Multiplayer | MatchMaking")," portal page."),(0,r.kt)("p",null,"The filter script will be invoked individually for each potential candidate. The script will be passed two parameters:"),(0,r.kt)("h3",{id:"method-parameters"},"Method Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"matchCandidate"),(0,r.kt)("td",{parentName:"tr",align:null},"Information about the candidate being considered")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"extraParms"),(0,r.kt)("td",{parentName:"tr",align:null},"Additional parameters that were passed into the original matchMaking request")))),(0,r.kt)("p",null,"The matchCandidate parameter contains all the same data that is ultimately returned in the ",(0,r.kt)("inlineCode",{parentName:"p"},"FindPlayersUsingFilter()")," call for each match candidate."),(0,r.kt)("p",null,"The script should return ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," to allow the candidate to match, or ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," to reject it."),(0,r.kt)("h3",{id:"filter-vs-attributes"},"Filter vs. Attributes"),(0,r.kt)("p",null,"A new parameter, ",(0,r.kt)("inlineCode",{parentName:"p"},"attributes"),",  can be added to these calls - that can be optionally used to pre-filter candidates ",(0,r.kt)("em",{parentName:"p"},"before")," they are passed to the cloud code filter for evaluation."),(0,r.kt)("p",null,"As you'd expect, this causes the matchMaking service to examine the ",(0,r.kt)("inlineCode",{parentName:"p"},"attributes")," associated with a candidate, and only consider candidates that match the specified attribute values for further consideration."),(0,r.kt)("p",null,"This facility should be used with caution, as attributes are not indexed for this purpose, and ",(0,r.kt)("em",{parentName:"p"},"can")," slow down matchMaking performance. This feature is therefore mean only for cases where the conditions being sought are so rare, that we might need to evaluate ",(0,r.kt)("em",{parentName:"p"},"thousands of candidates")," without finding one that satisfies the prescribed conditions (which would be very inefficient to do one-by-one via a filter)."),(0,r.kt)("p",null,"A typical usage of this capability is when looking for ",(0,r.kt)("em",{parentName:"p"},"cheaters"),". If you system attempts to match cheaters with cheaters, it would be wise to add this attribute ",(0,r.kt)("strong",{parentName:"p"},"only")," for those cases when the current player is a ",(0,r.kt)("em",{parentName:"p"},"cheater"),", and thus filter the results to only other cheaters.  ",(0,r.kt)("em",{parentName:"p"},"(Since hopefully only a very small portion of your user population will be cheaters.)")),(0,r.kt)("p",null,"Player attributes can optionally be viewed on the dashboard on the ",(0,r.kt)("a",{parentName:"p",href:"https://portal.braincloudservers.com/admin/dashboard#/monitoring/player-attributes"},(0,r.kt)("strong",{parentName:"a"},"Monitoring | User Monitoring | Attributes"))," page."),(0,r.kt)("h3",{id:"player-rating"},"Player Rating"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/capi/matchmaking/setplayerrating"},"SetPlayerRating")," - Sets player match rating."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/capi/matchmaking/incrementplayerrating"},"IncrementPlayerRating")," - Increments player match rating."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/capi/matchmaking/decrementplayerrating"},"DecrementPlayerRating")," - Decrements player match rating."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/capi/matchmaking/resetplayerrating"},"ResetPlayerRating")," - Resets player match rating.")),(0,r.kt)("h3",{id:"multiplayer-protection"},"Multiplayer Protection"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/capi/matchmaking/turnshieldoff"},"TurnShieldOff")," - Turns player shield off."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/capi/matchmaking/turnshieldon"},"TurnShieldOn")," - Turns player shield on."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/capi/matchmaking/turnshieldonfor"},"TurnShieldOnFor")," - Turns player shield on for specified minutes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/capi/matchmaking/getshieldexpiry"},"GetShieldExpiry")," - Retrieves shield expiry time."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/api/capi/matchmaking/incrementshieldonfor"},"IncrementShieldOnFor")," - Increment shield on for 'X' minutes.")),(0,r.kt)(m,{mdxType:"DocCardList"}))}h.isMDXComponent=!0}}]);