"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[29917],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),h=r,g=p["".concat(l,".").concat(h)]||p[h]||d[h]||i;return n?a.createElement(g,o(o({ref:t},u),{},{components:n})):a.createElement(g,o({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},40873:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={title:"Getting Started With C#",date:"2016-05-30"},o=void 0,s={unversionedId:"learn/sdk-tutorials/c-sharp-tutorials/getting-started-with-c-sharp/index",id:"learn/sdk-tutorials/c-sharp-tutorials/getting-started-with-c-sharp/index",title:"Getting Started With C#",description:"This tutorial goes over the basics of using brainCloud in C#. \xa0This applies to .NET applications, Xamarin, and even Unity.",source:"@site/docs/learn/6_sdk-tutorials/c-sharp-tutorials/getting-started-with-c-sharp/index.md",sourceDirName:"learn/6_sdk-tutorials/c-sharp-tutorials/getting-started-with-c-sharp",slug:"/learn/sdk-tutorials/c-sharp-tutorials/getting-started-with-c-sharp/",permalink:"/braincloud-apiref/learn/sdk-tutorials/c-sharp-tutorials/getting-started-with-c-sharp/",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/learn/6_sdk-tutorials/c-sharp-tutorials/getting-started-with-c-sharp/index.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1672633699,formattedLastUpdatedAt:"Jan 2, 2023",frontMatter:{title:"Getting Started With C#",date:"2016-05-30"},sidebar:"learnSidebar",previous:{title:"C# Tutorials",permalink:"/braincloud-apiref/learn/sdk-tutorials/c-sharp-tutorials/"},next:{title:"Xamarin Project Setup",permalink:"/braincloud-apiref/learn/sdk-tutorials/c-sharp-tutorials/xamarin-project-setup/"}},l={},c=[{value:"Accessing brainCloud",id:"accessing-braincloud",level:3},{value:"Initializing",id:"initializing",level:3},{value:"Updating the Client",id:"updating-the-client",level:3},{value:"Authenticating",id:"authenticating",level:3}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This tutorial goes over the basics of using brainCloud in C#. \xa0This applies to .NET applications, Xamarin, and even Unity."),(0,r.kt)("h3",{id:"accessing-braincloud"},"Accessing brainCloud"),(0,r.kt)("p",null,"All of brainCloud's features are accessible through the BrainCloudClient class. Typically you will only ever need one instance of the BrainCloudClient in your application. \xa0For this reason, the BrainCloudClient can function as a singleton, and can be accessed through the\xa0",(0,r.kt)("strong",{parentName:"p"},"BrainCloudClient.Instance")," property."),(0,r.kt)("h3",{id:"initializing"},"Initializing"),(0,r.kt)("p",null,"Before you can do anything with brainCloud the BrainCloudClient must be initialized. \xa0This is accomplished by providing your App\u2019s details to the Client via the Initialize function."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'BrainCloudClient.Instance.Initialize(\n    "https://sharedprod.braincloudservers.com/dispatcherv2",\n    "49e1d5ad-12345-4144-ac59-6e02c64f1b12",\n    "123456",\n    "1.0.0");\n')),(0,r.kt)("h3",{id:"updating-the-client"},"Updating the Client"),(0,r.kt)("p",null,"To ensure callbacks are executed on the main thread you must call the Update method of the BrainCloudClient. \xa0Typically you will want to set up some version of an Update loop in your app that will constantly update the client every so often (ex. every 100ms)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"void MyUpdateMethod()\n{\n    BrainCloudClient.Instance.Update();\n}\n")),(0,r.kt)("h3",{id:"authenticating"},"Authenticating"),(0,r.kt)("p",null,"Once a method is in place to run the callbacks via the Update() method you can start making API calls. \xa0The first call you'll likely need to make is one of the authentication methods to get an active session."),(0,r.kt)("p",null,"All API methods in brainCloud that contact the brainCloud server take callbacks as parameters, one for success and one for failure. \xa0These will get called when a response is received from the server, or the request times out. \xa0Here is a simple example of the authentication process in a console application:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'private void Authenticate()\n{\n    // Get username\n    Console.WriteLine("Enter your username: ");\n    string username = Console.ReadLine();\n\n    // Get password\n    Console.WriteLine("Enter your password: ");\n    string password = Console.ReadLine();\n\n    //Authenticate\n    BrainCloudClient.Instance.AuthenticationService.AuthenticateUniversal(\n        username,\n        password,\n        true,\n        ApiSuccess,\n        ApiError);\n}\n\nprivate void ApiSuccess(string jsonResponse, object cb)\n{\n    Console.WriteLine("Authenticate Success!");\n}\n\nprivate void ApiError(int statusCode, int reasonCode, string statusMessage, object cb)\n{\n    Console.WriteLine("Authenticate Failed!");\n}\n')))}p.isMDXComponent=!0}}]);