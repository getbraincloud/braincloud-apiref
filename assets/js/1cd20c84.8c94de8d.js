"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[48657],{3905:(e,t,r)=>{r.d(t,{Zo:()=>g,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},g=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),c=p(r),u=o,m=c["".concat(s,".").concat(u)]||c[u]||d[u]||a;return r?n.createElement(m,i(i({ref:t},g),{},{components:r})):n.createElement(m,i({ref:t},g))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},77586:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var n=r(87462),o=(r(67294),r(3905));const a={},i="Logging",l={unversionedId:"api/s2s/log/index",id:"api/s2s/log/index",title:"Logging",description:"Overview",source:"@site/docs/api/4_s2s/log/index.md",sourceDirName:"api/4_s2s/log",slug:"/api/s2s/log/",permalink:"/braincloud-apiref/api/s2s/log/",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/4_s2s/log/index.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1672193337,formattedLastUpdatedAt:"Dec 28, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"SysSendSignal",permalink:"/braincloud-apiref/api/s2s/lobby/syssendsignal"},next:{title:"LogError",permalink:"/braincloud-apiref/api/s2s/log/logerror"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"API Summary",id:"api-summary",level:3},{value:"Log",id:"log",level:3},{value:"Debugging",id:"debugging",level:3}],g=(c="DocCardList",function(e){return console.warn("Component "+c+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)});var c;const d={toc:p};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"logging"},"Logging"),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"The logging service is only available in Cloud Code.  It allows you to log messages to your app's Exception Logs which can be found\non the ",(0,o.kt)("a",{parentName:"p",href:"https://portal.braincloudservers.com/admin/dashboard#/monitoring/globallogs"},"Global Monitoring - Recent Errors page")," of the brainCloud portal."),(0,o.kt)("h3",{id:"api-summary"},"API Summary"),(0,o.kt)("h3",{id:"log"},"Log"),(0,o.kt)("p",null,"Standard info, warning, and error logging APIs:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/api/s2s/log/loginfo"},"LogInfo")," - Logs an info message with string-based context."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/api/s2s/log/loginfojson"},"LogInfoJson")," - Logs an info message with string-based context."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/api/s2s/log/logwarning"},"LogWarning")," - Logs an warning with string-based context."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/api/s2s/log/logwarningjson"},"LogWarningJson")," - Logs an warning with json context."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/api/s2s/log/logerror"},"LogError")," - Logs an error with string-based context."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/api/s2s/log/logerrorjson"},"LogErrorJson")," - Logs an error with json context.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"As of Release 3.11 these methods have been added to the bridge for convenience.")),(0,o.kt)("h3",{id:"debugging"},"Debugging"),(0,o.kt)("p",null,"brainCloud now supports debug-level log messages, which display only in the ",(0,o.kt)("em",{parentName:"p"},"activity pane")," of the ",(0,o.kt)("strong",{parentName:"p"},"Cloud Code Editor")," and ",(0,o.kt)("strong",{parentName:"p"},"API Explorers"),". They are not written to the logging database."),(0,o.kt)("p",null,"The debug-level log APIs are only available from the ",(0,o.kt)("a",{parentName:"p",href:"/api/cc/bridge"},"bridge"),"."),(0,o.kt)(g,{mdxType:"DocCardList"}))}u.isMDXComponent=!0}}]);