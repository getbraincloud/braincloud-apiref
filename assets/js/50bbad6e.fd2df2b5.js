"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[52001],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(n),u=r,g=p["".concat(c,".").concat(u)]||p[u]||m[u]||o;return n?a.createElement(g,i(i({ref:t},d),{},{components:n})):a.createElement(g,i({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},98522:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>k,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={},i="GenerateCodesInline",l={unversionedId:"api/capi/redemptioncode/generatecodesinline",id:"api/capi/redemptioncode/generatecodesinline",title:"GenerateCodesInline",description:"Overview",source:"@site/docs/api/2_capi/redemptioncode/generatecodesinline.md",sourceDirName:"api/2_capi/redemptioncode",slug:"/api/capi/redemptioncode/generatecodesinline",permalink:"/braincloud-apiref/api/capi/redemptioncode/generatecodesinline",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/redemptioncode/generatecodesinline.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1673042992,formattedLastUpdatedAt:"Jan 6, 2023",frontMatter:{},sidebar:"apiSidebar",previous:{title:"GenerateCodes",permalink:"/braincloud-apiref/api/capi/redemptioncode/generatecodes"},next:{title:"GetRedeemedCodes",permalink:"/braincloud-apiref/api/capi/redemptioncode/getredeemedcodes"}},c={},s=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Status Codes",id:"status-codes",level:3},{value:"Method Parameters",id:"method-parameters",level:2}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},p=d("PartialServop"),m=d("BrowserWindow"),u=d("Tabs"),g=d("TabItem"),v={toc:s};function k(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"generatecodesinline"},"GenerateCodesInline"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Generates specified quantity of redemption codes inline."),(0,r.kt)(p,{service_name:"redemptionCode",operation_name:"GENERATE_CODES_INLINE",mdxType:"PartialServop"}),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)(m,{mdxType:"BrowserWindow"},(0,r.kt)(u,{mdxType:"Tabs"},(0,r.kt)(g,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'string codeType = "the-code-type";\nstring codeState = "Available";\nint quantity = 10;\nstring customCodeInfo = "{}";\nstring prefix = "";\nstring algorithmName = "FiveByFive";\nstring algorithmDetailsJson = "{ \\"includeCheck\\": false }";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n  Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n  Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.RedemptionCodeService.GenerateCodesInline(codeType, codeState, quantity, customCodeInfo, prefix, algorithmName, algorithmDetailsJson, successCallback, failureCallback);\n'))),(0,r.kt)(g,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *codeType = "the-code-type";\nconst char *codeState = "Available";\nint quantity = 10;\nconst char *customCodeInfo = "{}";\nconst char *prefix = "";\nconst char *algorithmName = "FiveByFive";\nconst char *algorithmDetailsJson = "{ \\"includeCheck\\": false }";\n\n_bc->getRedemptionCodeService()->generateCodesInline(codeType, codeState, quantity, customCodeInfo, prefix, algorithmName, algorithmDetailsJson, this);\n'))),(0,r.kt)(g,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *codeType = @"the-code-type";\nNSString *codeState = @"Available";\nint quantity = 10;\nNSString *customCodeInfo = "{}";\nNSString *prefix = @"";\nNSString *algorithmName = @"FiveByFive";\nNSString *algorithmDetailsJson = "{ \\"includeCheck\\": false }";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc redemptionCodeService] generateCodesInline:codeType\n                     codeState:codeState\n                      quantity:quantity\n                customCodeInfo:customCodeInfo\n                        prefix:prefix\n                 algorithmName:algorithmName\n          algorithmDetailsJson:algorithmDetailsJson\n               completionBlock:successBlock\n          errorCompletionBlock:failureBlock\n                      cbObject:nil];\n'))),(0,r.kt)(g,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'String codeType = "the-code-type";\nString codeState = "Available";\nint quantity = 10;\nString customCodeInfo = "{}";\nString prefix = "";\nString algorithmName = "FiveByFive";\nString algorithmDetailsJson = "{ \\"includeCheck\\": false }";\nthis; // implements IServerCallback\n\n_bc.getRedemptionCodeService().generateCodesInline(codeType, codeState, quantity, customCodeInfo, prefix, algorithmName, algorithmDetailsJson, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n  System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n  System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,r.kt)(g,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var codeType = "the-code-type";\nvar codeState = "Available";\nvar quantity = 10;\nvar customCodeInfo = {};\nvar prefix = "";\nvar algorithmName = "FiveByFive";\nvar algorithmDetailsJson = {\n  "includeCheck": false\n};\n\n_bc.redemptionCode.generateCodesInline(codeType, codeState, quantity, customCodeInfo, prefix, algorithmName, algorithmDetailsJson, result =>\n{\n  var status = result.status;\n  console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,r.kt)(g,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cfscript"},'var codeType = "the-code-type";\nvar codeState = "Available";\nvar quantity = 10;\nvar customCodeInfo = {};\nvar prefix = "";\nvar algorithmName = "FiveByFive";\nvar algorithmDetailsJson = {\n  "includeCheck": false\n};\nvar redemptionCodeProxy = bridge.getRedemptionCodeServiceProxy();\n\nvar postResult = redemptionCodeProxy.generateCodesInline(codeType, codeState, quantity, customCodeInfo, prefix, algorithmName, algorithmDetailsJson);\nif (postResult.status == 200) {\n  // Success!\n}\n'))),(0,r.kt)(g,{value:"r",label:"Raw",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'{\n  "service": "redemptionCode",\n  "operation": "GENERATE_CODES_INLINE",\n  "data":\n  {\n    "codeType": "the-code-type",\n    "codeState": "Available",\n    "quantity": 10,\n    "customCodeInfo": {},\n    "prefix": "",\n    "algorithmName": "FiveByFive",\n    "algorithmDetailsJson": {\n      "includeCheck": false\n    }\n  }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"JSON Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "generatedScanCodes": [\n      "vfaok-yu7gy-y4ida-jhibz-rtikc",\n      "umy5u-ok0hj-afsc9-cz0tc-1jkvw",\n      "poclc-f5bo1-f1jfr-bh2tm-cvuuf",\n      "ckqzl-ogn2x-isdyr-utgr4-azx7f",\n      "iivv8-2fjbo-mnvl4-hwvwc-axurj",\n      "zdgsq-tsywh-hbhnf-bt90z-bwzqs",\n      "qji29-hjk0a-lrk4v-yvll7-gd3or",\n      "yi0uu-fsxkv-tdz3o-ebds7-qbyhk",\n      "sbozv-tcp5x-4nzlg-hykok-zmk66",\n      "zuzis-l1qva-qixmz-e3n5f-5qax6"\n    ],\n    "message": "Generating 10 redemption codes using FiveByFive algorithm and options (includeCheck=false)"\n  },\n  "status": 200\n}\n'))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Common Error Code"),(0,r.kt)("h3",{id:"status-codes"},"Status Codes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Code"),(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"40399"),(0,r.kt)("td",{parentName:"tr",align:null},"REDEMPTION_CODE_TYPE_NOT_FOUND"),(0,r.kt)("td",{parentName:"tr",align:null},"The specified code type was not found")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"40660"),(0,r.kt)("td",{parentName:"tr",align:null},"INVALID_PARAMETER_VALUE"),(0,r.kt)("td",{parentName:"tr",align:null},"Invalid quantity, cannot:exceed: 100")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"40753"),(0,r.kt)("td",{parentName:"tr",align:null},"REDEMPTION_CODE_TYPE_DISABLED"),(0,r.kt)("td",{parentName:"tr",align:null},"Invalid code. Redemption code type has been disabled"))))),(0,r.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"codeType"),(0,r.kt)("td",{parentName:"tr",align:null},"The code type.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"codeState"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. Initial state of the redemption code: 'Inactive' or 'Available'. Defaults to 'Inactive'.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"quantity"),(0,r.kt)("td",{parentName:"tr",align:null},"The quantity of scan codes to be generated.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"customCodeInfo"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional custom information, as JSON object.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"prefix"),(0,r.kt)("td",{parentName:"tr",align:null},"Prefix for all scan codes generate. Optional.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"algorithmName"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the algorithm to be used to generate the codes. Currently supporting 'StructuredGuid' and 'FiveByFive'.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"algorithmDetailsJson"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional algorithm details, as JSON object.")))))}k.isMDXComponent=!0}}]);