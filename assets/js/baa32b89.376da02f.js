"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[20453],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var a=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=a.createContext({}),o=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=o(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=o(r),m=i,f=u["".concat(l,".").concat(m)]||u[m]||d[m]||n;return r?a.createElement(f,s(s({ref:t},c),{},{components:r})):a.createElement(f,s({ref:t},c))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,s=new Array(n);s[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:i,s[1]=p;for(var o=2;o<n;o++)s[o]=r[o];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},99457:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>n,metadata:()=>p,toc:()=>o});var a=r(87462),i=(r(67294),r(3905));const n={},s="Player Statistics",p={unversionedId:"api/capi/playerstats/index",id:"api/capi/playerstats/index",title:"Player Statistics",description:"Overview",source:"@site/docs/api/2_capi/playerstats/index.md",sourceDirName:"api/2_capi/playerstats",slug:"/api/capi/playerstats/",permalink:"/braincloud-apiref/api/capi/playerstats/",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/playerstats/index.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"UpdateUserPictureUrl",permalink:"/braincloud-apiref/api/capi/playerstate/updateuserpictureurl"},next:{title:"GetNextExperienceLevel",permalink:"/braincloud-apiref/api/capi/playerstats/getnextexperiencelevel"}},l={},o=[{value:"Overview",id:"overview",level:2},{value:"API Summary",id:"api-summary",level:3}],c=(u="DocCardList",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)});var u;const d={toc:o};function m(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"player-statistics"},"Player Statistics"),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"The BrainCloudPlayerStatistics service is used for all user-scoped statistics operations, including Player Experience (XP)."),(0,i.kt)("p",null,"User Stats must be pre-defined from the ",(0,i.kt)("a",{parentName:"p",href:"https://portal.braincloudservers.com/admin/dashboard#/development/stats-player"},"Statistics Rules - User Statistics page"),"\nof the brainCloud portal.  If instead you need to create them dynamically at runtime, you can enable the Generate User Statistic Rule Enabled setting on the\n",(0,i.kt)("a",{parentName:"p",href:"https://portal.braincloudservers.com/admin/dashboard#/development/core-settings-advanced-settings"},"Advanced Settings page")," of your app in the brainCloud portal."),(0,i.kt)("h3",{id:"api-summary"},"API Summary"),(0,i.kt)("p",null,"The following operations are for user statistics:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/playerstats/readalluserstats"},"ReadAllUserStats")," - returns the complete list of user stats"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/playerstats/readuserstatssubset"},"ReadUserStatsSubset")," - returns a specified stats to the client"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/playerstats/readuserstatsforcategory"},"ReadUserStatsForCategory")," - returns the specified category of stats to the client"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/playerstats/incrementuserstats"},"IncrementUserStats")," - perform increment/decrement operations on the statistics"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/playerstats/processstatistics"},"ProcessStatistics")," - perform operations on the statistics according to the ",(0,i.kt)("a",{parentName:"li",href:"/api/appendix/statisticsgrammar"},"stats grammar"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/playerstats/resetalluserstats"},"ResetAllUserStats")," - resets all user statistics to their initial values (as defined by their rules).  Useful for debugging.")),(0,i.kt)("p",null,"The following operations are specific to the XP system:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/playerstats/incrementexperiencepoints"},"IncrementExperiencePoints")," \u2013 award XP to the user"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/playerstats/getnextexperiencelevel"},"GetNextExperienceLevel")," \u2013 returns information about the next experience level, including associated rewards"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/playerstats/setexperiencepoints"},"SetExperiencePoints")," - used to specifically set XP (useful for debugging).  Does not generate any associated rewards for levelling-up")),(0,i.kt)(c,{mdxType:"DocCardList"}))}m.isMDXComponent=!0}}]);