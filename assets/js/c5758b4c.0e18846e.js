"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[42578],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),c=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(a),g=r,m=d["".concat(i,".").concat(g)]||d[g]||u[g]||s;return a?n.createElement(m,o(o({ref:t},p),{},{components:a})):n.createElement(m,o({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,o=new Array(s);o[0]=g;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<s;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},8426:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>b,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const s={},o="SendMessage",l={unversionedId:"api/capi/messaging/sendmessage",id:"api/capi/messaging/sendmessage",title:"SendMessage",description:"Overview",source:"@site/docs/api/2_capi/messaging/sendmessage.md",sourceDirName:"api/2_capi/messaging",slug:"/api/capi/messaging/sendmessage",permalink:"/braincloud-apiref/api/capi/messaging/sendmessage",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/messaging/sendmessage.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"MarkMessagesRead",permalink:"/braincloud-apiref/api/capi/messaging/markmessagesread"},next:{title:"SendMessageSimple",permalink:"/braincloud-apiref/api/capi/messaging/sendmessagesimple"}},i={},c=[{value:"Overview",id:"overview",level:2},{value:"Status Codes",id:"status-codes",level:3},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},d=p("PartialServop"),u=p("BrowserWindow"),g=p("Tabs"),m=p("TabItem"),f={toc:c};function b(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sendmessage"},"SendMessage"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Sends a message on behalf of the user. The content of the message can be anything - though be convention it ",(0,r.kt)("em",{parentName:"p"},"should")," contain a ",(0,r.kt)("inlineCode",{parentName:"p"},"text")," field for plaintext content."),(0,r.kt)("h3",{id:"status-codes"},"Status Codes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Code"),(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"40601"),(0,r.kt)("td",{parentName:"tr",align:null},"FEATURE_NOT_ENABLED"),(0,r.kt)("td",{parentName:"tr",align:null},"Messaging feature is not enabled for app.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"40621"),(0,r.kt)("td",{parentName:"tr",align:null},"MESSAGING_MAX_RECIPIENTS_EXCEEDED"),(0,r.kt)("td",{parentName:"tr",align:null},"Message recipients count cannot exceed 5 (defaults to 5)")))),(0,r.kt)(d,{service_name:"messaging",operation_name:"SEND_MESSAGE",mdxType:"PartialServop"}),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)(u,{mdxType:"BrowserWindow"},(0,r.kt)(g,{mdxType:"Tabs"},(0,r.kt)(m,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'string[] toProfileIds = { "profileId1", "profileId2" };\nstring contentJson = "{\\"subject\\":\\"Chat and messaging features are here!\\",\\"text\\":\\"Check out the new chat and messaging features!\\"}";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.MessagingService.SendMessage(toProfileIds, contentJson, successCallback, failureCallback);\n'))),(0,r.kt)(m,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'std::vector<std::string> toProfileIds;\ntoProfileIds.push_back("profileId1");\ntoProfileIds.push_back("profileId2");\nconst char *contentJson = "{\\"subject\\":\\"Chat and messaging features are here!\\",\\"text\\":\\"Check out the new chat and messaging features!\\"}";\n_bc->getMessagingService()->sendMessage(toProfileIds, contentJson, this);\n'))),(0,r.kt)(m,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSArray *toProfileIds = @[ @"profileId1", @"profileId2" ];\nNSString *contentJson = @"{\\"subject\\":\\"Chat and messaging features are here!\\",\\"text\\":\\"Check out the new chat and messaging features!\\"}";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc messagingService] sendMessage:toProfileIds\n                contentJson:contentJson\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,r.kt)(m,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'String[] toProfileIds = { "profileId1", "profileId2" };\nString contentJson = "{\\"subject\\":\\"Chat and messaging features are here!\\",\\"text\\":\\"Check out the new chat and messaging features!\\"}";\nthis; // implements IServerCallback\n\n_bc.getMessagingService().sendMessage(toProfileIds, contentJson, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,r.kt)(m,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var toProfileIds = [ "profileId1", "profileId2" ];\nvar contentJson = {\n    "subject": "Chat and messaging features are here!",\n    "text": "Check out the new chat and messaging features!"\n};\n\n_bc.messaging.sendMessage(toProfileIds, contentJson, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,r.kt)(m,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cfscript"},'var toProfileIds = [ "profileId1", "profileId2" ];\nvar contentJson = {\n    "subject": "Chat and messaging features are here!",\n    "text": "Check out the new chat and messaging features!"\n};\nvar messagingProxy = bridge.getMessagingServiceProxy();\n\nvar postResult = messagingProxy.sendMessage(toProfileIds, contentJson);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,r.kt)(m,{value:"r",label:"Raw",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "messaging",\n    "operation": "SEND_MESSAGE",\n    "data": {\n        "toProfileIds": [\n            "profileId1",\n            "profileId2"\n        ],\n        "contentJson": {\n            "subject": "Chat and messaging features are here!",\n            "text": "Check out the new chat and messaging features!"\n        }\n    }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"JSON Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 200,\n    "data": {\n        "actual": 1,\n        "requested": 1,\n        "msgId": "e541737c-3bfe-4680-a5c1-13c3b196e73a"\n    }\n}\n'))),(0,r.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"toProfileIds"),(0,r.kt)("td",{parentName:"tr",align:null},"An array of recipients of the message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"contentJson"),(0,r.kt)("td",{parentName:"tr",align:null},"The message content.")))))}b.isMDXComponent=!0}}]);