"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[85532],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),p=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(r),m=n,f=s["".concat(c,".").concat(m)]||s[m]||d[m]||o;return r?a.createElement(f,i(i({ref:t},u),{},{components:r})):a.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},90526:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=r(87462),n=(r(67294),r(3905));const o={},i="Product",l={unversionedId:"api/capi/product/index",id:"api/capi/product/index",title:"Product",description:"Overview",source:"@site/docs/api/2_capi/product/index.md",sourceDirName:"api/2_capi/product",slug:"/api/capi/product/",permalink:"/braincloud-apiref/api/capi/product/",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/product/index.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"UpdateActivity",permalink:"/braincloud-apiref/api/capi/presence/updateactivity"},next:{title:"AwardCurrency",permalink:"/braincloud-apiref/api/capi/product/awardcurrency"}},c={},p=[{value:"Overview",id:"overview",level:2},{value:"Virtual Currencies",id:"virtual-currencies",level:3},{value:"In-app Purchases",id:"in-app-purchases",level:3},{value:"Promotions",id:"promotions",level:3}],u=(s="DocCardList",function(e){return console.warn("Component "+s+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",e)});var s;const d={toc:p};function m(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"product"},"Product"),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"The Product Service manages virtual currencies and handles receipt processing for the various app stores. "),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"WARNING: As of brainCloud 3.9, the ",(0,n.kt)("code",null,"Product")," service is being deprecated in favor of two replacement services: ",(0,n.kt)("code",null,"AppStore")," for in-app purchases and product/promotions/pricing requests and ",(0,n.kt)("code",null,"VirtualCurrency")," for currency operations. The APIs in the replacement services are similar, but improved; more generic method names and cleaner, more standardized response formats. The ",(0,n.kt)("code",null,"Product")," service and APIs will continue to be available until the end of 2019. ",(0,n.kt)("strong",null,"We strongly recommend that all new apps use the AppStore and VirtualCurrency services instead.")," ")),(0,n.kt)("p",null,"The Product service includes APIs for:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Managing Virtual Currencies"),(0,n.kt)("li",{parentName:"ul"},"Handling In-app Purchases (IAP)"),(0,n.kt)("li",{parentName:"ul"},"Querying Promotions")),(0,n.kt)("h3",{id:"virtual-currencies"},"Virtual Currencies"),(0,n.kt)("p",null,"The following API calls are used to manage a user's currency balances:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("code",null,"[GetCurrency](/api/capi/product/getcurrency)")," - get current currency balances"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("code",null,"[AwardCurrency](/api/capi/product/awardcurrency)")," - call when currency is awarded. Note that"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("code",null,"[ConsumeCurrency](/api/capi/product/consumecurrency)")," - call when currency is consumed"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("code",null,"[ResetCurrency](/api/capi/product/resetcurrency)")," - resets the users currency to zero")),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"Note that there are Parent and Peer versions of these APIs available as well.")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"For security reasons, the above calls are normally only available via cloud code. You can make them client callable by enabling the ",(0,n.kt)("em",null,"[x]"," Allow Currency Calls from Client")," compatibility flag on the ",(0,n.kt)("strong",null,"Design | Core App Info | Advanced Settings")," page of the ",(0,n.kt)("em",null,"Design Portal"),".")),(0,n.kt)("h3",{id:"in-app-purchases"},"In-app Purchases"),(0,n.kt)("p",null,"The specifics of processing in-app purchases from platform to platform vary slightly, but the overall flow is as follows:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Client app requests a list of products from brainCloud"),(0,n.kt)("li",{parentName:"ul"},"Client app requests the localized pricing details for the products from the AppStore"),(0,n.kt)("li",{parentName:"ul"},"Client app displays the products with prices to the user"),(0,n.kt)("li",{parentName:"ul"},"User chooses to purchase a product"),(0,n.kt)("li",{parentName:"ul"},"Client app invokes the purchase API from the AppStore.  AppStore performs the purchase, and sends back a receipt to the client"),(0,n.kt)("li",{parentName:"ul"},"Client sends the receipt to brainCloud for validation.  brainCloud performs a back-channel verification of the receipt with the AppStore \u2013 and if all is good, makes any required changes to virtual currency balances")),(0,n.kt)("p",null,"The follow call requests the list of products for sale:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("code",null,"[GetSalesInventory](/api/capi/product/getsalesinventory)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("code",null,"[GetSalesInventoryByCategory](/api/capi/product/getsalesinventorybycategory)"))),(0,n.kt)("p",null,"These methods are used to confirm store receipts:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Facebook - ",(0,n.kt)("code",null,(0,n.kt)("a",{parentName:"p",href:"/api/capi/product/confirmfacebookpurchase"},"ConfirmFacebookPurchase")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Google Play - ",(0,n.kt)("code",null,(0,n.kt)("a",{parentName:"p",href:"/api/capi/product/confirmgoogleplaypurchase"},"ConfirmGooglePlayPurchase")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"iOS - ",(0,n.kt)("code",null,(0,n.kt)("a",{parentName:"p",href:"/api/capi/product/verifyitunesreceipt"},"VerifyItunesReceipt")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Windows - ",(0,n.kt)("code",null,(0,n.kt)("a",{parentName:"p",href:"/api/capi/product/verifymicrosoftreceipt"},"VerifyMicrosoftReceipt"))))),(0,n.kt)("p",null,"These methods are for performing Steam purchases:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("code",null,"[StartSteamTransaction](/api/capi/product/startsteamtransaction)")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("code",null,"[FinalizeSteamTransaction](/api/capi/product/finalizesteamtransaction)"))),(0,n.kt)("h3",{id:"promotions"},"Promotions"),(0,n.kt)("p",null,"In addition to the above purchase flow, the app can also query to see if any promotions are currently active (for display in banners, etc.), using the ",(0,n.kt)("code",null,(0,n.kt)("a",{parentName:"p",href:"/api/capi/product/geteligiblepromotions"},"GetEligiblePromotions"))," call \u2013 and can make manual adjustments to virtual currency balances."),(0,n.kt)("p",null,"The promotions APIs are:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("code",null,"[GetEligiblePromotions](/api/capi/product/geteligiblepromotions)"))),(0,n.kt)(u,{mdxType:"DocCardList"}))}m.isMDXComponent=!0}}]);