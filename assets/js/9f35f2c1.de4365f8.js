"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[20508],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>f});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),c=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),s=c(a),m=n,f=s["".concat(p,".").concat(m)]||s[m]||u[m]||l;return a?r.createElement(f,o(o({ref:t},d),{},{components:a})):r.createElement(f,o({ref:t},d))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[s]="string"==typeof e?e:n,o[1]=i;for(var c=2;c<l;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},25998:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>y,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=a(87462),n=(a(67294),a(3905));const l={},o="UploadFileFromMemory",i={unversionedId:"api/capi/file/uploadfilefrommemory",id:"api/capi/file/uploadfilefrommemory",title:"UploadFileFromMemory",description:"Overview",source:"@site/docs/api/2_capi/file/uploadfilefrommemory.md",sourceDirName:"api/2_capi/file",slug:"/api/capi/file/uploadfilefrommemory",permalink:"/braincloud-apiref/api/capi/file/uploadfilefrommemory",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/file/uploadfilefrommemory.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"UploadFile",permalink:"/braincloud-apiref/api/capi/file/uploadfile"},next:{title:"Friend",permalink:"/braincloud-apiref/api/capi/friend/"}},p={},c=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",t)},s=d("PartialServop"),u=d("BrowserWindow"),m=d("Tabs"),f=d("TabItem"),b={toc:c};function y(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"uploadfilefrommemory"},"UploadFileFromMemory"),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"Upload screenshots from memory instead of local file storage. On success the file will begin uploading to the brainCloud server."),(0,n.kt)("p",null,"This method allows uploads to happen in situations where local file access is not possible or convenient. For example, screenshots from Unity-based WebGL apps."),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"UploadFileFromMemory currently only works in Unity WebGL and javaScript HTML interface.")),(0,n.kt)(s,{service_name:"file",operation_name:"PREPARE_USER_UPLOAD",mdxType:"PartialServop"}),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)(u,{mdxType:"BrowserWindow"},(0,n.kt)(m,{mdxType:"Tabs"},(0,n.kt)(f,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'// N/A\n_bc.RegisterFileUploadCallbacks(FileCallbackSuccess, FileCallbackFail);\n\nstring cloudPath = "";\nstring cloudName = "image.png";\nbool share = true;\nbool overwrite = true;\n\nint width = Screen.width;\nint height = Screen.height;\nvar texture = new Texture2D(width, height, TextureFormat.RGB24, false);\ntexture.ReadPixels(new Rect(0, 0, width, height), 0, 0);\ntexture.Apply();\nbyte[] bytes = texture.EncodeToPNG();\n\nstring encodedText = System.Convert.ToBase64String(bytes);\n\n_bc.FileService.UploadFileFromMemory(\n    cloudPath,\n    cloudName,\n    share,\n    overwrite,\n    encodedText,\n    ApiSuccess, ApiError);\n'))),(0,n.kt)(f,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"// N/A\n"))),(0,n.kt)(f,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-objectivec"},"// N/A\n"))),(0,n.kt)(f,{value:"java",label:"Java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"// N/A\n"))),(0,n.kt)(f,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'var cloudPath = "";\nvar cloudName = "image.png";\nvar share = true;\nvar overwrite = true;\nvar encodedText = new Blob(["hello, world!"], {type: \'text/plain\'});\n\n_bc.file.UploadFileFromMemory(cloudPath, cloudName, share, overwrite, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,n.kt)(f,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cfscript"},"// N/A\n"))),(0,n.kt)(f,{value:"r",label:"Raw",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cfscript"},"// N/A\n"))))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"JSON Response"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 200,\n    "data": {\n        "fileDetails": {\n            "gameId": "12186",\n            "shareable": true,\n            "uploadId": "a11e0e65-8843-47a6-a1b7-c4e7a82baa88",\n            "replaceIfExists": true,\n            "cloudPath": "",\n            "expiresAt": 1605641010658,\n            "createdAt": 1605036210658,\n            "fileSize": 72636,\n            "profileId": "bc33dae0-9334-4798-9f4d-a5e99842e8c6",\n            "cloudLocation": "bc/g/12186/u/bc33dae0-9334-4798-9f4d-a5e99842e8c6/f/image.png",\n            "localPath": "iVBORw0KGgoAAAANSUhEUgAAAQ8AAAEFCAIAAABy...AElFTkSuQmCC",\n            "cloudFilename": "image.png",\n            "fileType": "User",\n            "updatedAt": 1605036210658\n        }\n    }\n}\n'))),(0,n.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"cloudPath"),(0,n.kt)("td",{parentName:"tr",align:null},"The desired cloud path of the file")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"cloudFilename"),(0,n.kt)("td",{parentName:"tr",align:null},"The desired cloud fileName of the file")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"shareable"),(0,n.kt)("td",{parentName:"tr",align:null},"True if the file is shareable")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"replaceIfExists"),(0,n.kt)("td",{parentName:"tr",align:null},"Whether to replace file if it exists")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"encodedText"),(0,n.kt)("td",{parentName:"tr",align:null},"The converted file data from memory in string format")))))}y.isMDXComponent=!0}}]);