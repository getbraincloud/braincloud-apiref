"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[86593],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=i.createContext({}),l=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return n?i.createElement(f,r(r({ref:t},u),{},{components:n})):i.createElement(f,r({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:a,r[1]=s;for(var l=2;l<o;l++)r[l]=n[l];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},17231:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>b,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var i=n(87462),a=(n(67294),n(3905));const o={},r="ScheduleRichPushNotificationMinutes",s={unversionedId:"api/capi/pushnotification/schedulerichpushnotificationminutes",id:"api/capi/pushnotification/schedulerichpushnotificationminutes",title:"ScheduleRichPushNotificationMinutes",description:"Overview",source:"@site/docs/api/2_capi/pushnotification/schedulerichpushnotificationminutes.md",sourceDirName:"api/2_capi/pushnotification",slug:"/api/capi/pushnotification/schedulerichpushnotificationminutes",permalink:"/braincloud-apiref/api/capi/pushnotification/schedulerichpushnotificationminutes",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/pushnotification/schedulerichpushnotificationminutes.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1672193365,formattedLastUpdatedAt:"Dec 28, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"ScheduleRawPushNotificationUTC",permalink:"/braincloud-apiref/api/capi/pushnotification/schedulerawpushnotificationutc"},next:{title:"ScheduleRichPushNotificationUTC",permalink:"/braincloud-apiref/api/capi/pushnotification/schedulerichpushnotificationutc"}},c={},l=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},p=u("PartialServop"),d=u("BrowserWindow"),m=u("Tabs"),f=u("TabItem"),h={toc:l};function b(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"schedulerichpushnotificationminutes"},"ScheduleRichPushNotificationMinutes"),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Schedules a rich push notification to a user at a future relative time."),(0,a.kt)(p,{service_name:"pushNotification",operation_name:"SCHEDULE_RICH_NOTIFICATION",mdxType:"PartialServop"}),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)(d,{mdxType:"BrowserWindow"},(0,a.kt)(m,{mdxType:"Tabs"},(0,a.kt)(f,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'string profileId = "kjhkjhgfkjshgkjh";\nint notificationTemplateId = 1;\nstring substitutionJson = "{\\"0\\":\\"value0\\",\\"1\\":\\"value1\\"}";\nint minutesFromNow = 1;\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.PushNotification.ScheduleRichPushNotificationMinutes(profileId, notificationTemplateId, substitutionJson, minutesFromNow, successCallback, failureCallback);\n'))),(0,a.kt)(f,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *profileId = "kjhkjhgfkjshgkjh";\nint notificationTemplateId = 1;\nconst char *substitutionJson = "{\\"0\\":\\"value0\\",\\"1\\":\\"value1\\"}";\nint minutesFromNow = 1;\n\n_bc->getPushNotification()->scheduleRichPushNotificationMinutes(profileId, notificationTemplateId, substitutionJson, minutesFromNow, this);\n'))),(0,a.kt)(f,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *profileId = @"kjhkjhgfkjshgkjh";\nint notificationTemplateId = 1;\nNSString *substitutionJson = @"{\\"0\\":\\"value0\\",\\"1\\":\\"value1\\"}";\nint minutesFromNow = 1;\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc pushNotificationService] scheduleRichPushNotificationMinutes:profileId\n     notificationTemplateId:notificationTemplateId\n           substitutionJson:substitutionJson\n             minutesFromNow:minutesFromNow\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,a.kt)(f,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'String profileId = "kjhkjhgfkjshgkjh";\nint notificationTemplateId = 1;\nString substitutionJson = "{\\"0\\":\\"value0\\",\\"1\\":\\"value1\\"}";\nint minutesFromNow = 1;\nthis; // implements IServerCallback\n\n_bc.getPushNotification().scheduleRichPushNotificationMinutes(profileId, notificationTemplateId, substitutionJson, minutesFromNow, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,a.kt)(f,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'var profileId = "kjhkjhgfkjshgkjh";\nvar notificationTemplateId = 1;\nvar substitutionJson = {\n    "0": "value0",\n    "1": "value1"\n};\nvar minutesFromNow = 1;\n\n_bc.pushNotification.scheduleRichPushNotificationMinutes(profileId, notificationTemplateId, substitutionJson, minutesFromNow, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,a.kt)(f,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cfscript"},'var profileId = "kjhkjhgfkjshgkjh";\nvar notificationTemplateId = 1;\nvar substitutionJson = {\n    "0": "value0",\n    "1": "value1"\n};\nvar minutesFromNow = 1;\nvar pushNotificationProxy = bridge.getPushNotificationServiceProxy();\n\nvar postResult = pushNotificationProxy.scheduleRichPushNotificationMinutes(profileId, notificationTemplateId, substitutionJson, minutesFromNow);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,a.kt)(f,{value:"r",label:"Raw",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "pushNotification",\n    "operation": "SCHEDULE_RICH_NOTIFICATION",\n    "data": {\n        "profileId": "kjhkjhgfkjshgkjh",\n        "notificationTemplateId": 1,\n        "substitutions": {\n            "0": "value0",\n            "1": "value1"\n        },\n        "startDateUTC": "[[#ts+60000]]"\n    }\n}\n'))))),(0,a.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"profileId"),(0,a.kt)("td",{parentName:"tr",align:null},"Identifies the user to send to")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"notificationTemplateId"),(0,a.kt)("td",{parentName:"tr",align:null},"Id of the notification template")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"substitutions"),(0,a.kt)("td",{parentName:"tr",align:null},"JSON defining the substitution params to use with the template")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"minutesFromNow"),(0,a.kt)("td",{parentName:"tr",align:null},"Minutes in the future to send notification")))))}b.isMDXComponent=!0}}]);