"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[26489],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>h});var r=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function c(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?c(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=r.createContext({}),s=function(e){var a=r.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},d=function(e){var a=s(e.components);return r.createElement(i.Provider,{value:a},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},u=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,c=e.originalType,i=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=s(t),u=n,h=p["".concat(i,".").concat(u)]||p[u]||m[u]||c;return t?r.createElement(h,l(l({ref:a},d),{},{components:t})):r.createElement(h,l({ref:a},d))}));function h(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var c=t.length,l=new Array(c);l[0]=u;var o={};for(var i in a)hasOwnProperty.call(a,i)&&(o[i]=a[i]);o.originalType=e,o[p]="string"==typeof e?e:n,l[1]=o;for(var s=2;s<c;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},55534:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>i,contentTitle:()=>l,default:()=>y,frontMatter:()=>c,metadata:()=>o,toc:()=>s});var r=t(87462),n=(t(67294),t(3905));const c={},l="ReadMatch",o={unversionedId:"api/capi/asyncmatch/readmatch",id:"api/capi/asyncmatch/readmatch",title:"ReadMatch",description:"Overview",source:"@site/docs/api/2_capi/asyncmatch/readmatch.md",sourceDirName:"api/2_capi/asyncmatch",slug:"/api/capi/asyncmatch/readmatch",permalink:"/braincloud-apiref/api/capi/asyncmatch/readmatch",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/asyncmatch/readmatch.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"FindMatches",permalink:"/braincloud-apiref/api/capi/asyncmatch/findmatches"},next:{title:"ReadMatchHistory",permalink:"/braincloud-apiref/api/capi/asyncmatch/readmatchhistory"}},i={},s=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],d=e=>function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",a)},p=d("PartialServop"),m=d("BrowserWindow"),u=d("Tabs"),h=d("TabItem"),b={toc:s};function y(e){let{components:a,...t}=e;return(0,n.kt)("wrapper",(0,r.Z)({},b,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"readmatch"},"ReadMatch"),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"Returns the current state of the given match."),(0,n.kt)(p,{service_name:"asyncMatch",operation_name:"READ_MATCH",mdxType:"PartialServop"}),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)(m,{mdxType:"BrowserWindow"},(0,n.kt)(u,{mdxType:"Tabs"},(0,n.kt)(h,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'string ownerId = "internalPlayerId";\nstring matchId = "matchId";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.AsyncMatchService.ReadMatch(ownerId, matchId, successCallback, failureCallback);\n'))),(0,n.kt)(h,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *ownerId = "internalPlayerId";\nconst char *matchId = "matchId";\n_bc->getAsyncMatchService()->readMatch(ownerId, matchId, this);\n'))),(0,n.kt)(h,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *ownerId = @"internalPlayerId";\nNSString *matchId = @"matchId";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc asyncMatchService] readMatch:ownerId\n                    matchId:matchId\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,n.kt)(h,{value:"java",label:"Java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'String ownerId = "internalPlayerId";\nString matchId = "matchId";\nthis; // implements IServerCallback\n\n_bc.getAsyncMatchService().readMatch(ownerId, matchId, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,n.kt)(h,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'var ownerId = "internalPlayerId";\nvar matchId = "matchId";\n\n_bc.asyncMatch.readMatch(ownerId, matchId, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,n.kt)(h,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cfscript"},'var ownerId = "internalPlayerId";\nvar matchId = "matchId";\nvar asyncMatchProxy = bridge.getAsyncMatchServiceProxy();\n\nvar postResult = asyncMatchProxy.readMatch(ownerId, matchId);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,n.kt)(h,{value:"r",label:"Raw",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "asyncMatch",\n    "operation": "READ_MATCH",\n    "data": {\n        "ownerId": "the-owner-id",\n        "matchId": "the-match-id"\n    }\n}\n'))))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"JSON Response"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 200,\n    "data": {\n        "gameId": "11004",\n        "ownerId": "35e8698f-b14d-48ae-a37c-4b2962308b8d",\n        "matchId": "cfa752d6-d408-4671-9603-b22bf55d5379",\n        "version": 1,\n        "players": [{\n            "playerId": "35e8698f-b14d-48ae-a37c-4b2962308b8d",\n            "playerName": "",\n            "pictureUrl": null,\n            "summaryFriendData": null\n        }, {\n            "playerId": "e84c16ea-bd62-4307-83f9-d32f8ac18bca",\n            "playerName": "",\n            "pictureUrl": null,\n            "summaryFriendData": null\n        }],\n        "status": {\n            "status": "PENDING",\n            "currentPlayer": "e84c16ea-bd62-4307-83f9-d32f8ac18bca"\n        },\n        "summary": null,\n        "statistics": {},\n        "matchState": {\n            "testKey": "testValue"\n        },\n        "createdAt": 1472293357985,\n        "updatedAt": 1472293357996\n    }\n}\n'))),(0,n.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ownerId"),(0,n.kt)("td",{parentName:"tr",align:null},"Match owner identifier")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"matchId"),(0,n.kt)("td",{parentName:"tr",align:null},"Match identifier")))))}y.isMDXComponent=!0}}]);