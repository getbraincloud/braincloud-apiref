"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[94971],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),b=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=b(e.components);return r.createElement(i.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=b(a),u=n,m=d["".concat(i,".").concat(u)]||d[u]||p[u]||o;return a?r.createElement(m,l(l({ref:t},c),{},{components:a})):r.createElement(m,l({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=u;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[d]="string"==typeof e?e:n,l[1]=s;for(var b=2;b<o;b++)l[b]=a[b];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},90466:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>v,frontMatter:()=>o,metadata:()=>s,toc:()=>b});var r=a(87462),n=(a(67294),a(3905));const o={},l="JoinLobby",s={unversionedId:"api/capi/lobby/joinlobby",id:"api/capi/lobby/joinlobby",title:"JoinLobby",description:"Overview",source:"@site/docs/api/2_capi/lobby/joinlobby.md",sourceDirName:"api/2_capi/lobby",slug:"/api/capi/lobby/joinlobby",permalink:"/braincloud-apiref/api/capi/lobby/joinlobby",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/lobby/joinlobby.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1672193365,formattedLastUpdatedAt:"Dec 28, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"GetRegionsForLobbies",permalink:"/braincloud-apiref/api/capi/lobby/getregionsforlobbies"},next:{title:"JoinLobbyWithPingData",permalink:"/braincloud-apiref/api/capi/lobby/joinlobbywithpingdata"}},i={},b=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",t)},d=c("PartialServop"),p=c("BrowserWindow"),u=c("Tabs"),m=c("TabItem"),y={toc:b};function v(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"joinlobby"},"JoinLobby"),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"Adds the caller to the given lobby instance."),(0,n.kt)(d,{service_name:"lobby",operation_name:"JOIN_LOBBY",mdxType:"PartialServop"}),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)(p,{mdxType:"BrowserWindow"},(0,n.kt)(u,{mdxType:"Tabs"},(0,n.kt)(m,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'string lobbyId = "55555:4v4:3";\nstring[] otherUserCxIds = { "55555:aaa-bbb-ccc-ddd:asdfjkl" };\nbool isReady = false;\nstring extraJson = "{}";\nstring teamCode = "blue";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.LobbyService.JoinLobby(lobbyId, otherUserCxIds, isReady, extraJson, teamCode, successCallback, failureCallback);\n'))),(0,n.kt)(m,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *lobbyId = "55555:4v4:3";\nstd::vector<std::string> otherUserCxIds;\notherUserCxIds.push_back("55555:aaa-bbb-ccc-ddd:asdfjkl");\nbool isReady = false;\nconst char *extraJson = "{}";\nconst char *teamCode = "blue";\n_bc->getLobbyService()->joinLobby(lobbyId, otherUserCxIds, isReady, extraJson, teamCode, this);\n'))),(0,n.kt)(m,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *lobbyId = @"123456:4v4:3";\nNSArray *otherUserCxIds = @[ @"123456:aaa-bbb-ccc-ddd:asdfjkl" ];\nbool isReady = false;\nNSString *extraJson = @"{}";\nNSString *teamCode = @"blue";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc lobbyService] joinLobby:lobbyId\n             otherUserCxIds:otherUserCxIds\n                    isReady:isReady\n                  extraJson:extraJson\n                   teamCode:teamCode\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,n.kt)(m,{value:"java",label:"Java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'String lobbyId = "55555:4v4:3";\nString[] otherUserCxIds = { "55555:aaa-bbb-ccc-ddd:asdfjkl" };\nboolean isReady = false;\nString extraJson = "{}";\nString teamCode = "blue";\nthis; // implements IServerCallback\n\n_bc.getLobbyService().joinLobby(lobbyId, otherUserCxIds, isReady, extraJson, teamCode, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,n.kt)(m,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'var lobbyId = "55555:4v4:3";\nvar otherUserCxIds = [ "55555:aaa-bbb-ccc-ddd:asdfjkl" ];\nvar isReady = false;\nvar extraJson = {};\nvar teamCode = "blue";\n\n_bc.lobby.joinLobby(lobbyId, otherUserCxIds, isReady, extraJson, teamCode, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,n.kt)(m,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cfscript"},'var lobbyId = "55555:4v4:3";\nvar otherUserCxIds = [ "55555:aaa-bbb-ccc-ddd:asdfjkl" ];\nvar isReady = false;\nvar extraJson = {};\nvar teamCode = "blue";\nvar lobbyProxy = bridge.getLobbyServiceProxy();\n\nvar postResult = lobbyProxy.joinLobby(lobbyId, otherUserCxIds, isReady, extraJson, teamCode);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,n.kt)(m,{value:"r",label:"Raw",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "lobby",\n    "operation": "JOIN_LOBBY",\n    "data": {\n        "lobbyId": "55555:4v4:3",\n        "otherUserCxIds": [\n            "55555:aaa-bbb-ccc-ddd:asdfjkl"\n        ],\n        "isReady": false,\n        "extraJson": {},\n        "teamCode": "blue"\n    }\n}\n'))))),(0,n.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"lobbyId"),(0,n.kt)("td",{parentName:"tr",align:null},"The lobby instance to join.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"otherUserCxIds"),(0,n.kt)("td",{parentName:"tr",align:null},"Array of other users (i.e. party members) to add to the lobby as well. The call will fail if all users can't be added.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"isReady"),(0,n.kt)("td",{parentName:"tr",align:null},"Initial ready-status of this user.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"extraJson"),(0,n.kt)("td",{parentName:"tr",align:null},"Initial extra-data about this user.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"teamCode"),(0,n.kt)("td",{parentName:"tr",align:null},"Preferred team for this user, if applicable. Send ",(0,n.kt)("inlineCode",{parentName:"td"},'""')," or ",(0,n.kt)("inlineCode",{parentName:"td"},"null")," for automatic assignment.")))))}v.isMDXComponent=!0}}]);