"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[40171],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>v});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),m=a,v=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return t?r.createElement(v,o(o({ref:n},p),{},{components:t})):r.createElement(v,o({ref:n},p))}));function v(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},56513:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>f,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=t(87462),a=(t(67294),t(3905));const i={},o="GetDivisionInfo",s={unversionedId:"api/capi/tournament/getdivisioninfo",id:"api/capi/tournament/getdivisioninfo",title:"GetDivisionInfo",description:"Overview",source:"@site/docs/api/2_capi/tournament/getdivisioninfo.md",sourceDirName:"api/2_capi/tournament",slug:"/api/capi/tournament/getdivisioninfo",permalink:"/braincloud-apiref/api/capi/tournament/getdivisioninfo",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/tournament/getdivisioninfo.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"ClaimTournamentReward",permalink:"/braincloud-apiref/api/capi/tournament/claimtournamentreward"},next:{title:"GetMyDivisions",permalink:"/braincloud-apiref/api/capi/tournament/getmydivisions"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],p=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",n)},u=p("PartialServop"),d=p("BrowserWindow"),m=p("Tabs"),v=p("TabItem"),b={toc:c};function f(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},b,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getdivisioninfo"},"GetDivisionInfo"),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Essentially the same as ",(0,a.kt)("code",null,(0,a.kt)("a",{parentName:"p",href:"/api/capi/tournament/gettournamentstatus"},"GetTournamentStatus")),", but takes a division set id instead of a leaderboardId as its parameter. "),(0,a.kt)("p",null,"Provides information about the division - schedule, entry fees, prizes - as well as the player's enrollment status."),(0,a.kt)(u,{service_name:"tournament",operation_name:"GET_DIVISION_INFO",mdxType:"PartialServop"}),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)(d,{mdxType:"BrowserWindow"},(0,a.kt)(m,{mdxType:"Tabs"},(0,a.kt)(v,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'string divSetId = "exampleDivSetId";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.TournamentService.GetDivisionInfo(divSetId, successCallback, failureCallback);\n'))),(0,a.kt)(v,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *divSetId = "exampleDivSetId";\n_bc->getTournamentService()->getDivisionInfo(divSetId, this);\n'))),(0,a.kt)(v,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *divSetId = @"exampleDivSetId";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc tournamentService] getDivisionInfo:divSetId\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,a.kt)(v,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'String divSetId = "exampleDivSetId";\nthis; // implements IServerCallback\n\n_bc.getTournamentService().getDivisionInfo(divSetId, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,a.kt)(v,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'var divSetId = "exampleDivSetId";\n\n_bc.tournament.getDivisionInfo(divSetId, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,a.kt)(v,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cfscript"},'var divSetId = "exampleDivSetId";\nvar tournamentProxy = bridge.getTournamentServiceProxy();\n\nvar postResult = tournamentProxy.getDivisionInfo(divSetId);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,a.kt)(v,{value:"r",label:"Raw",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "tournament",\n    "operation": "GET_DIVISION_INFO",\n    "data": {\n        "divSetId": "exampleDivSetId"\n    }\n}\n'))))),(0,a.kt)("details",null,(0,a.kt)("summary",null,"JSON Response"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "data": {\n        "server_time": 1537496450261,\n        "versionId": 1,\n        "tournamentTimetable": {\n            "tRegistrationStart": 1537496450261,\n            "tState": "ACTIVE",\n            "tPlayEnd": 1538072460000,\n            "tRegistrationEnd": 1538072460000,\n            "tPlayStart": 1537496450261\n        },\n        "tournamentConfigs": [\n            {\n                "tournamentCode": "free",\n                "description": {\n                    "name": {\n                        "en": "Free Tournament"\n                    },\n                    "desc": {\n                        "en": "Basic free-to-enter tournament"\n                    }\n                },\n                "customJson": {},\n                "payoutRules": [\n                    {\n                        "reward": {\n                            "experiencePoints": 100,\n                            "currency": {\n                                "coin": 1000\n                            }\n                        },\n                        "rank": {\n                            "rankAbs": 1\n                        }\n                    },\n                    {\n                        "reward": {\n                            "experiencePoints": 50,\n                            "currency": {\n                                "coin": 500\n                            }\n                        },\n                        "rank": {\n                            "rankAbs": 2\n                        }\n                    },\n                    {\n                        "reward": {\n                            "experiencePoints": 25,\n                            "currency": {\n                                "coin": 250\n                            }\n                        },\n                        "rank": {\n                            "rankAbs": 3\n                        }\n                    },\n                    {\n                        "reward": {\n                            "experiencePoints": 5,\n                            "currency": {\n                                "coin": 50\n                            }\n                        },\n                        "rank": {\n                            "rankToPercent": 50\n                        }\n                    }\n                ],\n                "entryFee": {}\n            }\n        ],\n        "enrolled": false\n    },\n    "status": 200\n}\n'))),(0,a.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"divSetId"),(0,a.kt)("td",{parentName:"tr",align:null},"Division set id")))))}f.isMDXComponent=!0}}]);