"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[34187],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,g=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return n?i.createElement(g,r(r({ref:t},u),{},{components:n})):i.createElement(g,r({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,r[1]=l;for(var c=2;c<o;c++)r[c]=n[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},62326:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var i=n(87462),a=(n(67294),n(3905));const o={title:"Push Notification Setup - Firebase",date:"2017-07-31"},r=void 0,l={unversionedId:"learn/portal-tutorials/push-notification-setup-firebase/index",id:"learn/portal-tutorials/push-notification-setup-firebase/index",title:"Push Notification Setup - Firebase",description:"This tutorial will walk you through the steps to configure Firebase Cloud Messaging (FCM) with brainCloud.",source:"@site/docs/learn/5_portal-tutorials/push-notification-setup-firebase/index.md",sourceDirName:"learn/5_portal-tutorials/push-notification-setup-firebase",slug:"/learn/portal-tutorials/push-notification-setup-firebase/",permalink:"/braincloud-apiref/learn/portal-tutorials/push-notification-setup-firebase/",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/learn/5_portal-tutorials/push-notification-setup-firebase/index.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1672679892,formattedLastUpdatedAt:"Jan 2, 2023",frontMatter:{title:"Push Notification Setup - Firebase",date:"2017-07-31"},sidebar:"learnSidebar",previous:{title:"Push notification configuration - iOS",permalink:"/braincloud-apiref/learn/portal-tutorials/push-notification-configuration-ios/"},next:{title:"Store Integration \u2013 Amazon",permalink:"/braincloud-apiref/learn/portal-tutorials/store-integration-amazon/"}},s={},c=[{value:"Prerequisites",id:"prerequisites",level:3},{value:"Step1: Configure FCM cloud messaging server-key to brainCloud",id:"step1-configure-fcm-cloud-messaging-server-key-to-braincloud",level:3},{value:"Step2: Register a notification token to your device via your app",id:"step2-register-a-notification-token-to-your-device-via-your-app",level:3},{value:"Step3: Test",id:"step3-test",level:3}],u={toc:c};function p(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,i.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This tutorial will walk you through the steps to configure Firebase Cloud Messaging (FCM) with brainCloud."),(0,a.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Must have created an app on the\xa0",(0,a.kt)("a",{parentName:"li",href:"https://console.firebase.google.com/"},"Firebase console"))),(0,a.kt)("h3",{id:"step1-configure-fcm-cloud-messaging-server-key-to-braincloud"},"Step1: Configure FCM cloud messaging server-key to brainCloud"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Navigate your browser to the ",(0,a.kt)("a",{parentName:"li",href:"https://console.firebase.google.com/"},"Firebase console")," and select your project. Click the Settings Icon -> \u201cProject settings\u201d in the top left nav bar.")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://downloads.intercomcdn.com/i/o/363163268/df61c0644eed17b7c7720fdd/image.png",alt:null})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://downloads.intercomcdn.com/i/o/363163268/df61c0644eed17b7c7720fdd/image.png"}),"Select \u201cCloud Messaging\u201d and copy the Server Key.")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://downloads.intercomcdn.com/i/o/363163674/9784d263d41547231f100d3f/image.png",alt:null})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://downloads.intercomcdn.com/i/o/363163674/9784d263d41547231f100d3f/image.png"}),"Navigate to the brainCloud development console Design | Notification | Settings page, click Edit Settings.")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://downloads.intercomcdn.com/i/o/363164687/0b9686fb11a02b479228e124/image.png",alt:null})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://downloads.intercomcdn.com/i/o/363164687/0b9686fb11a02b479228e124/image.png"}),"Paste this key into Google Play API key field, and set expiration days for this key.")),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(78861).Z,width:"814",height:"296"})),(0,a.kt)("h3",{id:"step2-register-a-notification-token-to-your-device-via-your-app"},"Step2: Register a notification token to your device via your app"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Use the Keystore file of your Android app to create a fingerprint SHA1 and add it to your Firebase project.")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://downloads.intercomcdn.com/i/o/363170155/8a1b3fd682b55062c117f921/image.png",alt:null})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://downloads.intercomcdn.com/i/o/363170155/8a1b3fd682b55062c117f921/image.png"}),"Download ",(0,a.kt)("inlineCode",{parentName:"li"},"google-services.json")," file and add it to your app ",(0,a.kt)("inlineCode",{parentName:"li"},"root")," folder (for Unity will under ",(0,a.kt)("inlineCode",{parentName:"li"},"Assets")," folder). This file contains most of the credentials you\u2019ll need to connect your app to Firebase.")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://downloads.intercomcdn.com/i/o/363171394/676a6832ba89d7e8c5d15600/image.png",alt:null})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://downloads.intercomcdn.com/i/o/363171394/676a6832ba89d7e8c5d15600/image.png"}),"Follow the ",(0,a.kt)("inlineCode",{parentName:"li"},"SDK Instruction")," to finish settings for your app. (If you are using the Unity Firebase Messaging package, after importing, your ",(0,a.kt)("inlineCode",{parentName:"li"},"Assets")," folder should similar to the structure below)")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://downloads.intercomcdn.com/i/o/363172566/c331289185689feda4332a47/image.png",alt:null})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://downloads.intercomcdn.com/i/o/363172566/c331289185689feda4332a47/image.png"}),"In your app, after authenticating a user with brainCloud, you will need to register the ",(0,a.kt)("inlineCode",{parentName:"li"},"Firebase Registration token")," with brainCloud. Specifically, you\u2019ll want to call the ",(0,a.kt)("a",{parentName:"li",href:"/api/capi/pushnotification/registerpushnotificationdevicetoken"},"RegisterPushNotificationDeviceToken()")," method to pass in the token."),(0,a.kt)("li",{parentName:"ul"},"If you are using Unity SDK, your code should be similar to the following.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'    void InitializeFirebase()\n    {\n        Firebase.Messaging.FirebaseMessaging.MessageReceived += OnMessageReceived;\n        Firebase.Messaging.FirebaseMessaging.TokenReceived += OnTokenReceived;\n        Firebase.Messaging.FirebaseMessaging.SubscribeAsync(topic).ContinueWithOnMainThread(task => {\n            LogTaskCompletion(task, "SubscribeAsync");\n        });\n        DebugLog("Firebase Messaging Initialized");\n        Firebase.Messaging.FirebaseMessaging.RequestPermissionAsync().ContinueWithOnMainThread(\n            task => {\n                LogTaskCompletion(task, "RequestPermissionAsync");\n            }\n        );\n        isFirebaseInitialized = true;\n    } \n\n...\n    public virtual void OnTokenReceived(object sender, Firebase.Messaging.TokenReceivedEventArgs token)\n    {\n        DebugLog("Received Registration Token: " + token.Token);\n        firebaseToken = token.Token;\n        AddStatusText("Received Registration Token: " + token.Token);\n    }\n...\n    public void OnRegisterToken()\n    {\n        _bc.PushNotificationService.RegisterPushNotificationDeviceToken(Platform.GooglePlayAndroid, firebaseToken, authSuccess_BCcall, authError_BCcall);\n    }\n...\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If using Java Android studio")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'  FirebaseInstanceId.getInstance().getInstanceId()\n  .addOnCompleteListener(new OnCompleteListener<InstanceIdResult>() {\n      @Override\n      public void onComplete(@NonNull Task<InstanceIdResult> task) {\n          if (!task.isSuccessful()) {\n              Log.w(TAG, "getInstanceId failed", task.getException());\n              return;\n          }\n\n          // Get new Instance ID token\n          String token = task.getResult().getToken();\n          _bc.GetWrapper().getPushNotificationService().registerPushNotificationToken(Platform.GooglePlayAndroid, token, theCallback);\n      }\n  });\n')),(0,a.kt)("h3",{id:"step3-test"},"Step3: Test"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Run your app, authenticate an end-user to brainCloud and call RegisterPushNotificationDeviceToken() method to register device token.")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://downloads.intercomcdn.com/i/o/363178357/3c1e5a09827267caede11b8d/image.png",alt:null})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://downloads.intercomcdn.com/i/o/363178357/3c1e5a09827267caede11b8d/image.png"}),"Once your test device is registered the notification token to brainClound from your app, you can check it from the ",(0,a.kt)("strong",{parentName:"li"},"User")," ",(0,a.kt)("strong",{parentName:"li"},"Monitoring | User Summary")," page.")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://downloads.intercomcdn.com/i/o/363176360/1474feee11f5367407b4e4b1/image.png",alt:null})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://downloads.intercomcdn.com/i/o/363176360/1474feee11f5367407b4e4b1/image.png"}),"Hit ",(0,a.kt)("inlineCode",{parentName:"li"},"Send Notification")," button from the above page will pop-up a ",(0,a.kt)("inlineCode",{parentName:"li"},"Send Notification")," window, fill some text and Click ",(0,a.kt)("inlineCode",{parentName:"li"},"Send"),". Your test device should receive this notification from brainCloud. You can always use brainCloud Push Notification ",(0,a.kt)("a",{parentName:"li",href:"/api/capi/pushnotification"},"methods")," to test push notifications too.")),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://downloads.intercomcdn.com/i/o/363181329/3755b318ffa0dd79912cbb1f/image.png",alt:null})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://downloads.intercomcdn.com/i/o/363181329/3755b318ffa0dd79912cbb1f/image.png"}),"Note that the above example is the settings for Android, however, the configuration steps are almost the same, for detail of setting up iOS with FCM, please visit Firebase documentation.")))}p.isMDXComponent=!0},78861:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/image1-fd11a05a23e4f8332d32bd935fc01da1.png"}}]);