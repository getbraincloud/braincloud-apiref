"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[14820],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>b});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),m=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},p=function(e){var t=m(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=m(a),d=r,b=c["".concat(s,".").concat(d)]||c[d]||u[d]||i;return a?n.createElement(b,l(l({ref:t},p),{},{components:a})):n.createElement(b,l({ref:t},p))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var m=2;m<i;m++)l[m]=a[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},4010:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var n=a(87462),r=(a(67294),a(3905));const i={title:"Lobbies",date:"2018-07-15"},l=void 0,o={unversionedId:"learn/key-concepts/multiplayer/lobbies/index",id:"learn/key-concepts/multiplayer/lobbies/index",title:"Lobbies",description:"Background",source:"@site/docs/learn/1_key-concepts/multiplayer/lobbies/index.md",sourceDirName:"learn/1_key-concepts/multiplayer/lobbies",slug:"/learn/key-concepts/multiplayer/lobbies/",permalink:"/braincloud-apiref/learn/key-concepts/multiplayer/lobbies/",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/learn/1_key-concepts/multiplayer/lobbies/index.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1672679892,formattedLastUpdatedAt:"Jan 2, 2023",frontMatter:{title:"Lobbies",date:"2018-07-15"},sidebar:"learnSidebar",previous:{title:"Multiplayer",permalink:"/braincloud-apiref/learn/key-concepts/multiplayer/"},next:{title:"One Way Offline Example",permalink:"/braincloud-apiref/learn/key-concepts/multiplayer/one-way-offline-multiplayer-example/"}},s={},m=[{value:"Background",id:"background",level:2},{value:"Online Matchmaking",id:"online-matchmaking",level:2},{value:"Lobby Experience",id:"lobby-experience",level:2},{value:"Room Experience",id:"room-experience",level:2}],p={toc:m};function c(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"background"},"Background"),(0,r.kt)("p",null,"The addition of ",(0,r.kt)("em",{parentName:"p"},"Real-Time Tech")," to brainCloud brings with it many features, including ",(0,r.kt)("em",{parentName:"p"},"Lobbies"),"."),(0,r.kt)("p",null,"A ",(0,r.kt)("em",{parentName:"p"},"lobby")," is used to gather up participants in preparation for a ",(0,r.kt)("em",{parentName:"p"},"multi-user experience"),", which we call a ",(0,r.kt)("em",{parentName:"p"},"room experience"),". Lobbies are essential for online games but are also valuable for non-gaming applications like online meetings, desktop sharing, etc. The process of randomly selecting a group of suitable participants for a lobby is referred to as ",(0,r.kt)("em",{parentName:"p"},"matchmaking"),"."),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(23413).Z},(0,r.kt)("img",{src:a(40632).Z,width:"429",height:"170"}))),(0,r.kt)("p",null,"Some important things to understand about lobbies:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"lobby participants are called ",(0,r.kt)("em",{parentName:"li"},"members")),(0,r.kt)("li",{parentName:"ul"},"the ",(0,r.kt)("em",{parentName:"li"},"member")," that created the lobby is also called the ",(0,r.kt)("em",{parentName:"li"},"owner")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"members")," are organized into ",(0,r.kt)("em",{parentName:"li"},"teams"),". All lobbies must have ",(0,r.kt)("em",{parentName:"li"},"at least")," ",(0,r.kt)("em",{parentName:"li"},"one")," team."),(0,r.kt)("li",{parentName:"ul"},"teams specify a ",(0,r.kt)("em",{parentName:"li"},"minimum")," and ",(0,r.kt)("em",{parentName:"li"},"a maximum")," number of members. Room experiences cannot be started until the minimums are satisfied"),(0,r.kt)("li",{parentName:"ul"},"members indicate when they are ",(0,r.kt)("em",{parentName:"li"},"ready")," to proceed to the room experience"),(0,r.kt)("li",{parentName:"ul"},"progression rules are configured by ",(0,r.kt)("em",{parentName:"li"},"lobby type")," in the Design Portal. Every lobby is an instance of a ",(0,r.kt)("em",{parentName:"li"},"lobby type"))),(0,r.kt)("h2",{id:"online-matchmaking"},"Online Matchmaking"),(0,r.kt)("p",null,"The ",(0,r.kt)("em",{parentName:"p"},"Lobby Service")," provides an ",(0,r.kt)("em",{parentName:"p"},"Online Matchmaking API")," - not to be confused with the ",(0,r.kt)("em",{parentName:"p"},"Offline Matchmaking API")," supplied by the ",(0,r.kt)("em",{parentName:"p"},"Matchmaking Service"),"."),(0,r.kt)("p",null,"Offline Matchmaking, as you would expect, is suitable for offline experiences - like async turn-by-turn games (Words with Friends, etc.) and one-way offline multiplayer (i.e. Clash-style games). In these games, you don't care whether the matched user is online or not."),(0,r.kt)("p",null,"Online matchmaking is very different - you need all players to be online and concurrently looking for a match."),(0,r.kt)("p",null,"The following features are supported:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"basic filtering by ",(0,r.kt)("em",{parentName:"li"},"lobby type")," and user ",(0,r.kt)("em",{parentName:"li"},"skill rating")),(0,r.kt)("li",{parentName:"ul"},"automated expansion of skill rating ",(0,r.kt)("em",{parentName:"li"},"range")),(0,r.kt)("li",{parentName:"ul"},"custom matchmaking filters (via cloud code scripts)"),(0,r.kt)("li",{parentName:"ul"},"automatic creation of lobbies if no eligible ones are found")),(0,r.kt)("h2",{id:"lobby-experience"},"Lobby Experience"),(0,r.kt)("p",null,"Once in a lobby, brainCloud prepares the users for the ",(0,r.kt)("em",{parentName:"p"},"room experience")," according to the rules configured for the lobby type in the Design Portal."),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(86655).Z},(0,r.kt)("img",{src:a(80863).Z,width:"848",height:"415"}))),(0,r.kt)("p",null,"The lobby lifecycle involves the following states:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"setup")," - the initial state upon creation. New members can join, but it is too early for the experience to start."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"early")," - once the ",(0,r.kt)("em",{parentName:"li"},"earliest start")," time is past, the lobby enters the ",(0,r.kt)("em",{parentName:"li"},"early")," state - and the room experience is partially start-able. In this state, the room experience will launch if:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"the lobby teams are all ",(0,r.kt)("em",{parentName:"li"},"full")," and enough members are ready; or..."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"allow early start without max participates")," option is enabled, the teams satisfy the ",(0,r.kt)("em",{parentName:"li"},"minimum")," participation requirements, and enough members are ready"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"pending")," - once the ",(0,r.kt)("em",{parentName:"li"},"on-time start")," time is past, the lobby enters the ",(0,r.kt)("em",{parentName:"li"},"pending")," state. Ideally, the room experience is ",(0,r.kt)("em",{parentName:"li"},"supposed")," to start at this time. Indeed, it ",(0,r.kt)("em",{parentName:"li"},"will")," start if and when:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"the lobby teams meet the ",(0,r.kt)("em",{parentName:"li"},"minimum")," size requirements, and enough members are ready"),(0,r.kt)("li",{parentName:"ul"},"if the ",(0,r.kt)("em",{parentName:"li"},"force on-time start without ready")," option is enabled, the lobby will skip the ready-check, and simply start if the minimum team members are available"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"starting")," - in this state, the room experience has been asked to launch, and the lobby is just waiting on confirmation that a room service has been ",(0,r.kt)("em",{parentName:"li"},"allocated"),", and is ",(0,r.kt)("em",{parentName:"li"},"ready"),". If a ",(0,r.kt)("em",{parentName:"li"},"room server manager")," is configured in the design portal, the launch endpoint will be called to allocate a room server. If a peer-to-peer experience is being used instead, the owner client should listen for the lobby to enter the ",(0,r.kt)("em",{parentName:"li"},"starting")," state to begin preparing the room experience"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"success")," - the lobby will move to the ",(0,r.kt)("em",{parentName:"li"},"success")," state once the room service provides calls back with the ",(0,r.kt)("inlineCode",{parentName:"li"},"sysRoomReady()")," API call. At that point, all lobby members will be sent the ",(0,r.kt)("inlineCode",{parentName:"li"},"ROOM_READY")," event, and should respond by connecting to the room experience. Immediately after participants will receive the ",(0,r.kt)("inlineCode",{parentName:"li"},"DISBANDED")," event as the lobby is destroyed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"fail")," - the lobby moves to the ",(0,r.kt)("strong",{parentName:"li"},"fail")," state if the lobby ",(0,r.kt)("em",{parentName:"li"},"too late start")," time is past. It also fails is the room service sends in ",(0,r.kt)("inlineCode",{parentName:"li"},"sysRoomCancelled()"),".")),(0,r.kt)("p",null,"The full set of Lobby methods and events can be found in the ",(0,r.kt)("a",{parentName:"p",href:"/api/capi/lobby",title:"Lobby Service"},"Lobby Service")," API documentation."),(0,r.kt)("h2",{id:"room-experience"},"Room Experience"),(0,r.kt)("p",null,"The Room Experience is completely up to the room server developer."),(0,r.kt)("p",null,"brainCloud supports two architectural strategies for room services:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"custom room servers")," - brainCloud customers can write their own room servers that work with our lobby services. These services should be managed by a room server manager that brainCloud calls to launch new room servers. ",(0,r.kt)("em",{parentName:"li"},"brainCloud does not currently host/manage 3rd party room servers. We plan to expand our offering in the near future to offer a built-in Room Server Manager with the ability to launch custom Docker-based Room Services.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"peer-to-peer"),' - alternatively, room experiences can be provided in a peer-to-peer manner by a member of the lobby (typically the owner). In this case, the lobby member should wait for the lobby to enter the "starting" state to launch the experience.')),(0,r.kt)("p",null,"Important things to understand about Room Experiences:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Room Experiences are given all lobby data upon start. Thus they have access to the list of members, team allotments, the static lobby config, and dynamic lobby settings data.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Room Server Managers receive this data when brainCloud calls the <rsm-url",">","/<rsm-endpoint",">","/assign-room."),(0,r.kt)("li",{parentName:"ul"},"Peer-provided services have access to the data via the ",(0,r.kt)("inlineCode",{parentName:"li"},"lobby")," data present in the"))),(0,r.kt)("li",{parentName:"ul"},"Room Experiences should validate participants as they join. Have them provide their profile ids and sessionIds and check them against the member data provided"),(0,r.kt)("li",{parentName:"ul"},"Be advised that the lobby is destroyed once the ",(0,r.kt)("inlineCode",{parentName:"li"},"ROOM_READY")," event has been sent to the participants"),(0,r.kt)("li",{parentName:"ul"},"The technologies and protocols used for room experiences are completely up to the developers"),(0,r.kt)("li",{parentName:"ul"},"Room Experiences can communicate with the brainCloud API via the S2S interface. Be sure to configure the servers via the Design | Cloud Code | S2S Config page, and provide an IP range to restrict access to the API to just the hosted servers."),(0,r.kt)("li",{parentName:"ul"},"Peer-to-peer Room Experiences should use ",(0,r.kt)("em",{parentName:"li"},"not")," use the S2S API (since you can't restrict the IPs of clients). They should continue to use the standard Client API instead.")))}c.isMDXComponent=!0},86655:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/Lobby-Lifecycle-simple-dd4dc60559e64bb3731e1ad65831fc4f.png"},23413:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/Online-Multiplayer-Process-1-fd22c85018fefba477a1d6fa5628f9a0.png"},80863:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Lobby-Lifecycle-simple-dd4dc60559e64bb3731e1ad65831fc4f.png"},40632:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Online-Multiplayer-Process-1-fd22c85018fefba477a1d6fa5628f9a0.png"}}]);