"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[52823],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),l=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(a),m=r,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||o;return a?n.createElement(f,c(c({ref:t},p),{},{components:a})):n.createElement(f,c({ref:t},p))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,c=new Array(o);c[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:r,c[1]=i;for(var l=2;l<o;l++)c[l]=a[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},44652:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=a(87462),r=(a(67294),a(3905));const o={},c="CreateMatch",i={unversionedId:"api/capi/asyncmatch/creatematch",id:"api/capi/asyncmatch/creatematch",title:"CreateMatch",description:"Overview",source:"@site/docs/api/2_capi/asyncmatch/creatematch.md",sourceDirName:"api/2_capi/asyncmatch",slug:"/api/capi/asyncmatch/creatematch",permalink:"/braincloud-apiref/api/capi/asyncmatch/creatematch",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/asyncmatch/creatematch.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1672445654,formattedLastUpdatedAt:"Dec 31, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"CompleteMatchWithSummaryData",permalink:"/braincloud-apiref/api/capi/asyncmatch/completematchwithsummarydata"},next:{title:"CreateMatchWithInitialTurn",permalink:"/braincloud-apiref/api/capi/asyncmatch/creatematchwithinitialturn"}},s={},l=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},u=p("PartialServop"),d=p("BrowserWindow"),m=p("Tabs"),f=p("TabItem"),b={toc:l};function h(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"creatematch"},"CreateMatch"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Creates an instance of an asynchronous match."),(0,r.kt)("p",null,"Opponents is a JSON array containing objects with a Platform and player ID. Platforms are identified as:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"BC - a brainCloud profile id"),(0,r.kt)("li",{parentName:"ul"},"FB - a Facebook id"),(0,r.kt)("li",{parentName:"ul"},"STEAM - a Steam id"),(0,r.kt)("li",{parentName:"ul"},"PSN - a Playstation id")),(0,r.kt)("p",null,"An example of this string would be:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'[{\n  "platform":"BC",\n  "id": "some-braincloud-profile"\n},\n{\n  "platform":"FB",\n  "id": "some-facebook-id"\n}]\n')),(0,r.kt)(u,{service_name:"asyncMatch",operation_name:"CREATE",mdxType:"PartialServop"}),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)(d,{mdxType:"BrowserWindow"},(0,r.kt)(m,{mdxType:"Tabs"},(0,r.kt)(f,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'string jsonOpponentIds = "[{\\"platform\\":\\"BC\\",\\"id\\":\\"profile ID-1\\"},{\\"platform\\":\\"FB\\",\\"id\\":\\"Facebook ID-1\\"},{\\"platform\\":\\"FB\\",\\"id\\":\\"Facebook ID-2\\"}]";\nstring pushNotificationMessage = "You have been entered into an async-match!";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.AsyncMatchService.CreateMatch(jsonOpponentIds, pushNotificationMessage, successCallback, failureCallback);\n'))),(0,r.kt)(f,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *jsonOpponentIds = "[{\\"platform\\":\\"BC\\",\\"id\\":\\"profile ID-1\\"},{\\"platform\\":\\"FB\\",\\"id\\":\\"Facebook ID-1\\"},{\\"platform\\":\\"FB\\",\\"id\\":\\"Facebook ID-2\\"}]";\nconst char *pushNotificationMessage = "You have been entered into an async-match!";\n_bc->getAsyncMatchService()->createMatch(jsonOpponentIds, pushNotificationMessage, this);\n'))),(0,r.kt)(f,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *jsonOpponentIds = @"[{\\"platform\\":\\"BC\\",\\"id\\":\\"profile ID-1\\"},{\\"platform\\":\\"FB\\",\\"id\\":\\"Facebook ID-1\\"},{\\"platform\\":\\"FB\\",\\"id\\":\\"Facebook ID-2\\"}]";\nNSString *pushNotificationMessage = @"You have been entered into an async-match!";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc asyncMatchService] createMatch:jsonOpponentIds\n    pushNotificationMessage:pushNotificationMessage\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,r.kt)(f,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'String jsonOpponentIds = "[{\\"platform\\":\\"BC\\",\\"id\\":\\"profile ID-1\\"},{\\"platform\\":\\"FB\\",\\"id\\":\\"Facebook ID-1\\"},{\\"platform\\":\\"FB\\",\\"id\\":\\"Facebook ID-2\\"}]";\nString pushNotificationMessage = "You have been entered into an async-match!";\nthis; // implements IServerCallback\n\n_bc.getAsyncMatchService().createMatch(jsonOpponentIds, pushNotificationMessage, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,r.kt)(f,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var jsonOpponentIds = [\n    {\n        "platform": "BC",\n        "id": "profile ID-1"\n    },\n    {\n        "platform": "FB",\n        "id": "Facebook ID-1"\n    },\n    {\n        "platform": "FB",\n        "id": "Facebook ID-2"\n    }\n];\nvar pushNotificationMessage = "You have been entered into an async-match!";\n\n_bc.asyncMatch.createMatch(jsonOpponentIds, pushNotificationMessage, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,r.kt)(f,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cfscript"},'var jsonOpponentIds = [\n    {\n        "platform": "BC",\n        "id": "profile ID-1"\n    },\n    {\n        "platform": "FB",\n        "id": "Facebook ID-1"\n    },\n    {\n        "platform": "FB",\n        "id": "Facebook ID-2"\n    }\n];\nvar pushNotificationMessage = "You have been entered into an async-match!";\nvar asyncMatchProxy = bridge.getAsyncMatchServiceProxy();\n\nvar postResult = asyncMatchProxy.createMatch(jsonOpponentIds, pushNotificationMessage);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,r.kt)(f,{value:"r",label:"Raw",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "asyncMatch",\n    "operation": "CREATE",\n    "data": {\n        "players": [\n            {\n                "platform": "BC",\n                "id": "1st-profile-id"\n            },\n            {\n                "platform": "FB",\n                "id": "2nd-profile-id"\n            }\n        ],\n        "matchState": {},\n        "pushContent": "You have been entered into an async-match!",\n        "currentPlayer": "2nd-profile-id",\n        "summary": {\n            "Address": "South Africa"\n        }\n    }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"JSON Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status" : 200,\n    "data" :\n    {\n        "gameId": "com.dnadpk.football",\n        "ownerId": "0df9f282-183b-4d67-866e-670fb35a2376",\n        "matchId": "match1",\n        "version": 0,\n        "players": [\n            {\n                "playerId": "0df9f282-183b-4d67-866e-670fb35a2376",\n                "playerName": "",\n                "pictureUrl": null,\n                "summaryFriendData": null\n            },\n            {\n                "playerId": "4693ec75-3a99-4577-aef7-0f41d299339c",\n                "playerName": "Presto1",\n                "pictureUrl": null,\n                "summaryFriendData": null\n            }\n        ],\n        "status": {\n            "status": "NOT_STARTED",\n            "currentPlayer": "0df9f282-183b-4d67-866e-670fb35a2376"\n        },\n        "summary": null,\n        "createdAt": 1415641372974,\n        "updatedAt": 1415641372974\n    }\n}\n'))),(0,r.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"jsonOpponentIds"),(0,r.kt)("td",{parentName:"tr",align:null},"List of objects identifying the opponent platform and id for this match.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pushNotificationMessage"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional push notification message to send to the other party. Refer to the Push Notification functions for the syntax required.")))))}h.isMDXComponent=!0}}]);