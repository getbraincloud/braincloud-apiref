"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[41725],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function n(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=a.createContext({}),m=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):n(n({},t),e)),r},p=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,s=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=m(r),d=i,f=u["".concat(l,".").concat(d)]||u[d]||c[d]||s;return r?a.createElement(f,n(n({ref:t},p),{},{components:r})):a.createElement(f,n({ref:t},p))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=r.length,n=new Array(s);n[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:i,n[1]=o;for(var m=2;m<s;m++)n[m]=r[m];return a.createElement.apply(null,n)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},68426:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>n,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>m});var a=r(87462),i=(r(67294),r(3905));const s={},n="User Items",o={unversionedId:"api/capi/useritems/index",id:"api/capi/useritems/index",title:"User Items",description:"Overview",source:"@site/docs/api/2_capi/useritems/index.md",sourceDirName:"api/2_capi/useritems",slug:"/api/capi/useritems/",permalink:"/braincloud-apiref/api/capi/useritems/",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/useritems/index.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"SysSetPasswordUniversalId",permalink:"/braincloud-apiref/api/capi/user/syssetpassworduniversalid"},next:{title:"AwardUserItem",permalink:"/braincloud-apiref/api/capi/useritems/awarduseritem"}},l={},m=[{value:"Overview",id:"overview",level:2},{value:"API Summary",id:"api-summary",level:3},{value:"Read Items",id:"read-items",level:4},{value:"Affect Item Owner",id:"affect-item-owner",level:4},{value:"Edit Item State",id:"edit-item-state",level:4},{value:"Blockchain",id:"blockchain",level:4}],p=(u="DocCardList",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)});var u;const c={toc:m};function d(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"user-items"},"User Items"),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"User Items")," service, introduced in 4.2, is used to manage a collection of in-app items that users can be awarded, buy, sell, or trade (using virtual currency). Optionally, these items can be backed up to the blockchain."),(0,i.kt)("p",null,"Key concepts:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Items are first defined in the ",(0,i.kt)("strong",{parentName:"li"},"Item Catalog")," "),(0,i.kt)("li",{parentName:"ul"},"Defined items can be purchased or awarded to users, where they will be recorded as userItem instances."),(0,i.kt)("li",{parentName:"ul"},"Using an item may consume it (or a portion of it - or none of it). Consumed items will automatically disappear from the user's user item inventory."),(0,i.kt)("li",{parentName:"ul"},"Using an item may trigger a status effect (i.e. invulnerability for 60 seconds)"),(0,i.kt)("li",{parentName:"ul"},'Using an item may trigger a cool-down period (before the item can be used again) or a regeneration period (a period after which the item regenerates a "use.")')),(0,i.kt)("h3",{id:"api-summary"},"API Summary"),(0,i.kt)("h4",{id:"read-items"},"Read Items"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/useritems/getuseritem"},"GetUserItem")," - Retrieves the identified user item from the server."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/useritems/getuseritemspage"},"GetUserItemsPage")," - Retrieves the page of user's items from the server based on the context. "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/useritems/getuseritemspageoffset"},"GetUserItemsPageOffset")," - Retrieves the page of user's items from the server based on the encoded context. ")),(0,i.kt)("h4",{id:"affect-item-owner"},"Affect Item Owner"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/useritems/awarduseritem"},"AwardUserItem")," - Allows item(s) to be awarded to a user without collecting the purchase amount. "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/useritems/dropuseritem"},"DropUserItem")," - Allows a quantity of a specified user item to be dropped, without any recovery of the money paid for the item. "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/useritems/selluseritem"},"SellUserItem")," - Allows a quantity of a specified user item to be sold. "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/useritems/giveuseritemto"},"GiveUserItemTo")," - Gifts item to the specified player."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/useritems/receiveuseritemfrom"},"ReceiveUserItemFrom")," - Retrieves and transfers the gift item from the specified player, who must have previously called giveUserItemTo."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/useritems/purchaseuseritem"},"PurchaseUserItem")," - Purchases a quantity of an item from the specified store, if the user has enough funds. ")),(0,i.kt)("h4",{id:"edit-item-state"},"Edit Item State"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/useritems/useuseritem"},"UseUserItem")," - Uses the specified item, potentially consuming it."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/useritems/updateuseritemdata"},"UpdateUserItemData")," - Updates the item data on the specified user item.")),(0,i.kt)("h4",{id:"blockchain"},"Blockchain"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/useritems/publishuseritemtoblockchain"},"PublishUserItemToBlockchain")," - Publishes the specified item to the item management attached blockchain. "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/api/capi/useritems/refreshblockchainuseritems"},"RefreshBlockchainUserItems")," - Syncs the caller's user items with the item management attached blockchain. ")),(0,i.kt)(p,{mdxType:"DocCardList"}))}d.isMDXComponent=!0}}]);