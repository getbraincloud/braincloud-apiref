"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[775],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>b});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),o=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=o(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=o(r),m=a,b=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return r?n.createElement(b,i(i({ref:t},p),{},{components:r})):n.createElement(b,i({ref:t},p))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[d]="string"==typeof e?e:a,i[1]=c;for(var o=2;o<l;o++)i[o]=r[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},97617:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>v,frontMatter:()=>l,metadata:()=>c,toc:()=>o});var n=r(87462),a=(r(67294),r(3905));const l={},i="GetScheduledCloudScripts",c={unversionedId:"api/capi/script/getscheduledcloudscripts",id:"api/capi/script/getscheduledcloudscripts",title:"GetScheduledCloudScripts",description:"Overview",source:"@site/docs/api/2_capi/script/getscheduledcloudscripts.md",sourceDirName:"api/2_capi/script",slug:"/api/capi/script/getscheduledcloudscripts",permalink:"/braincloud-apiref/api/capi/script/getscheduledcloudscripts",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/script/getscheduledcloudscripts.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"GetRunningOrQueuedCloudScripts",permalink:"/braincloud-apiref/api/capi/script/getrunningorqueuedcloudscripts"},next:{title:"RunParentScript",permalink:"/braincloud-apiref/api/capi/script/runparentscript"}},s={},o=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},d=p("PartialServop"),u=p("BrowserWindow"),m=p("Tabs"),b=p("TabItem"),g={toc:o};function v(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},g,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getscheduledcloudscripts"},"GetScheduledCloudScripts"),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Retrieves list of scheduled cloud scripts having a scheduled start time\nless than or equal to the specified scheduledStartTime time (UTC time in milliseconds)."),(0,a.kt)(d,{service_name:"script",operation_name:"GET_SCHEDULED_CLOUD_SCRIPTS",mdxType:"PartialServop"}),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)(u,{mdxType:"BrowserWindow"},(0,a.kt)(m,{mdxType:"Tabs"},(0,a.kt)(b,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'int startDateInUTC = 1437579786000;\n\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.ScriptService.GetScheduledCloudScripts(startDateInUTC, successCallback, failureCallback);\n'))),(0,a.kt)(b,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"int startDateInUTC = 1437579786000;\n\n_bc->getScriptService()->getScheduledCloudScripts(startDateInUTC, this);\n"))),(0,a.kt)(b,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objectivec"},"int startDateInUTC = 1437579786000;\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc scriptService] getScheduledCloudScripts:startDateInUTC\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n"))),(0,a.kt)(b,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'int startDateInUTC = 1437579786000;\nthis; // implements IServerCallback\n\n_bc.getScriptService().getScheduledCloudScripts(startDateInUTC, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,a.kt)(b,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'var startDateInUTC = 1437579786000;\n\n_bc.script.getScheduledCloudScripts(startDateInUTC, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,a.kt)(b,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cfscript"},'var _script = bridge.getScriptServiceProxy();\n\n// Find scheduled jobs matching given script name\nvar dateTimeSixtyMinsFromNowInMillis = new Date().getTime() + (60 * 60 * 1000);\nvar result = _script.getScheduledCloudScripts(dateTimeSixtyMinsFromNowInMillis);\n\nif ((result.status == 200) && (result.data !== null)) {\n    // Find those that match script name want\n    for (var i = 0; i < result.data.scheduledJobs.length; i++) {\n        // delete any that match\n        if (result.data.scheduledJobs[i].scriptName === "emptyScript") {\n            _script.cancelScheduledScript(result.data.scheduledJobs[i].jobId);\n         }\n    }\n}\n\n// schedule single replacement \nvar retVal = _script.scheduleRunScriptMinutes("emptyScript", null, 60);\nretVal;\n'))),(0,a.kt)(b,{value:"r",label:"Raw",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cfscript"},'var _script = bridge.getScriptServiceProxy();\n\n// Find scheduled jobs matching given script name\nvar dateTimeSixtyMinsFromNowInMillis = new Date().getTime() + (60 * 60 * 1000);\nvar result = _script.getScheduledCloudScripts(dateTimeSixtyMinsFromNowInMillis);\n\nif ((result.status == 200) && (result.data !== null)) {\n    // Find those that match script name want\n    for (var i = 0; i < result.data.scheduledJobs.length; i++) {\n        // delete any that match\n        if (result.data.scheduledJobs[i].scriptName === "emptyScript") {\n            _script.cancelScheduledScript(result.data.scheduledJobs[i].jobId);\n         }\n    }\n}\n\n// schedule single replacement \nvar retVal = _script.scheduleRunScriptMinutes("emptyScript", null, 60);\nretVal;\n'))))),(0,a.kt)("details",null,(0,a.kt)("summary",null,"JSON Response"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n "data": {\n  "scheduledJobs": [\n   {\n    "gameId": "20005",\n    "description": null,\n    "jobId": "5fbc8729-5123-4dca-8644-d78edcb7f712",\n    "localTime": null,\n    "createdAt": 1512750600574,\n    "runStartTime": 0,\n    "playerSessionId": null,\n    "scheduledStartTime": 1512754200552,\n    "scriptName": "emptyScript",\n    "jobType": "CloudCode",\n    "parameters": null,\n    "updatedAt": 1512750600574\n   },\n   {\n    "gameId": "20005",\n    "description": null,\n    "jobId": "8267199b-5567-4771-91ca-c25b61f83ccd",\n    "localTime": null,\n    "createdAt": 1512750610258,\n    "runStartTime": 0,\n    "playerSessionId": null,\n    "scheduledStartTime": 1512754210258,\n    "scriptName": "emptyScript",\n    "jobType": "CloudCode",\n    "parameters": null,\n    "updatedAt": 1512750610258\n   },\n   {\n    "gameId": "20005",\n    "description": null,\n    "jobId": "4c9d06bf-48e4-4308-8734-9f74993f8e4f",\n    "localTime": null,\n    "createdAt": 1512750683157,\n    "runStartTime": 0,\n    "playerSessionId": null,\n    "scheduledStartTime": 1512754283157,\n    "scriptName": "emptyScript",\n    "jobType": "CloudCode",\n    "parameters": null,\n    "updatedAt": 1512750683157\n   }\n  ]\n },\n "status": 200\n}\n'))),(0,a.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"startDateUTC"),(0,a.kt)("td",{parentName:"tr",align:null},"Return scripts that are scheduled to run before this specified time.")))))}v.isMDXComponent=!0}}]);