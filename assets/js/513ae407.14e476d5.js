"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[7004],{86014:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2022/12/15/feb-2023-pricing-updates","metadata":{"permalink":"/braincloud-apiref/release/2022/12/15/feb-2023-pricing-updates","source":"@site/release/2022-12-15-feb-2023-pricing-updates/index.md","title":"Feb 2023 Pricing Updates","description":"As you are hopefully already aware, our long-awaited Dormant User Account pricing goes into effect for the February 2023 billing cycle\u2026 (which invoices on March 1st, 2023).","date":"2022-12-15T00:00:00.000Z","formattedDate":"December 15, 2022","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":5.155,"hasTruncateMarker":false,"authors":[{"name":"Paul Winterhalder","title":"brainCloud product owner","url":"https://github.com/winterhalder","imageURL":"https://github.com/winterhalder.png","key":"paul"}],"frontMatter":{"title":"Feb 2023 Pricing Updates","date":"2022-12-15","authors":"paul","tags":["release-history"]},"nextItem":{"title":"Release 4.13.1 is live!","permalink":"/braincloud-apiref/release/2022/11/29/release-4-13-1"}},"content":"As you are hopefully already aware, our long-awaited _Dormant User Account_ pricing goes into effect for the February 2023 billing cycle\u2026 (which invoices on March 1st, 2023).\\r\\n\\r\\nThere are a few additional pricing tweaks, including new bulk-pricing plans, that will be become active at that time as well.\\r\\n\\r\\nRead on for more details!\\r\\n\\r\\n* * *\\r\\n\\r\\n## Dormant User Accounts\\r\\n\\r\\n_brainCloud defines a\xa0Dormant User Account\xa0as any account where the user hasn\u2019t logged in the app in the past\xa0**365 days**.\xa0 These users add\xa0no value\xa0to your game (e.g. they are probably anonymous and have already uninstalled your app!) \u2013 but they do significantly\xa0increase costs\xa0(including deep data usage) \u2014 and slow down your apps. In July 2022, **over 50%**\xa0of brainCloud storage and backup costs were due to dormant accounts!_\\r\\n\\r\\nBeginning with the February 2023 billing cycle, which is invoiced on **March 1, 2023**, brainCloud apps will be charged\xa0**$75 / month**\xa0per Million dormant users (pro-rated). That is not a lot \u2013 though for some apps it would be \u2013 but ideally\xa0_we don\u2019t want to collect any Dormant User revenues at all \u2014 we are looking for the cost savings!_\xa0That\u2019s why we have our\xa0**Auto-deletion**\xa0service!\\r\\n\\r\\nFor instructions on enabling **Auto-Delete** to reduce and/or eliminate an Dormant User Account pricing charges, see the bottom section of our previous [post](/release/2022/07/19/upcoming-2022-billing-changes/).\\r\\n\\r\\n* * *\\r\\n\\r\\n## Hosting Pricing Changes\\r\\n\\r\\nAfter some deep-dive usage analysis, we have determined that we need to adjust the costs that we charge for hosting Room and Relay Servers. The current formulas were not accurately reflecting the full costs of providing the service - which need to include:\\r\\n\\r\\n- server hosting costs\\r\\n- disk storage costs\\r\\n- data transfer costs\\r\\n- cloud service support costs \u2190 which is a percentage on top of all costs that our cloud provider (AWS) charges as part of our support plan\\r\\n\\r\\nTherefore, beginning with the February 2023 billing cycle, which is invoiced on March 1, 2023, the prices for brainCloud Hosting services are changing as follows:\\r\\n\\r\\n- Hosting Server markup - will be increased from **15%** mark-up to **25%** markup\\r\\n- Hosting Management cost - will increase from **1.5 cents** per server hour to **2 cents** per server hour\\r\\n\\r\\n_Note - obviously these changes only affect customers using brainCloud\u2019s RelayServer and RoomServer hosting services. Customers not using these services (or using their own GameLift accounts instead) are not impacted._\\r\\n\\r\\n* * *\\r\\n\\r\\n## Deep Data Pricing Reductions\\r\\n\\r\\nIn the good news category, a similar deep-dive analysis has determined that we can safely **reduce** our deep data pricing!\\r\\n\\r\\nTherefore, beginning with the February 2023 billing cycle, which is invoiced on March 1, 2023, we are **decreasing** the Deep Data Storage pricing by **10%** - from **$0.50** / GB / day -> **$0.45** / GB / day!\\r\\n\\r\\nWe are also **increasing** the included (**free!**) Deep Data Storage Usage units for **Business+ Plan** customers from **10GB -> 20GB**.\\r\\n\\r\\n_As always, we encourage developers to monitor their deep data usage (especially from Custom Entities), and ensure that unused collections are deleted (i.e. especially in cases where collections were temporary migration collections) - and that apps are making use of our TTL (Time-to-live) feature to automatically clean up temporary entities over time._\\r\\n\\r\\n* * *\\r\\n\\r\\n## New Bulk+ (Pre-purchase) Plans\\r\\n\\r\\nFinally, brainCloud is introducing four (4) new plans for our highest-volume customers.\\r\\n\\r\\nThese plans allow customers to pre-buy a large quantity of API Requests for a discount - with additional savings on _Deep Data Storage_, _File Transfers_, and _Dormant User Accounts_.\\r\\n\\r\\nNote that as these are _pre-purchase_ plans; customers are charged the _live fee_ amount at the _beginning_ of the month - and pay for _usage_ for the period at the _end_ of the month as usual. This differs from our regular plans, where all charges are incurred at the end of the month.\\r\\n\\r\\n:::caution API Savings\\r\\n_API savings are stated in comparison to the cost of the equivalent number of API calls using the Business Plus plan._\\r\\n:::\\r\\n\\r\\nThe new plans are:\\r\\n\\r\\n- **Bulk+ 100M** ($955 / month)\\r\\n    - Includes **100** **Million** API calls at a savings of **$75**. Additional API calls start at **$9.50** / M.\\r\\n    - File transfers discounted **3%** to **$0.145** / GB, and free transfers bumped up to **100** GB.\\r\\n    - Deep Data Storage discounted **7%** to **$0.42** / GB / day, and free storage units bumped up to **50** GB.\\r\\n    - Dormant User pricing discounted **5%** to **$71.00** / Million\\r\\n\\r\\n- **Bulk+ 250M** ($2,205 / month)\\r\\n    - Includes **250** **Million** API calls at a savings of **$250**. Additional API calls start at **$9.25** / M.\\r\\n    - File transfers discounted **7%** to **$0.14** / GB, and free transfers bumped up to **250** GB.\\r\\n    - Deep Data Storage discounted **13%** to **$0.39** / GB / day, and free storage units bumped up to **100** GB.\\r\\n    - Dormant User pricing discounted **10%** to **$67.50** / Million.\\r\\n\\r\\n- **Bulk+ 500M** ($4,115 / month)\\r\\n    - Includes **500** **Million** API calls at a savings of **$650**. Additional API calls start at **$9.00** / M.\\r\\n    - File transfers discounted **13%** to **$0.13** / GB, and free transfers bumped up to **500** GB.\\r\\n    - Deep Data Storage discounted **24%** to **$0.34** / GB / day, and free storage units bumped up to **200** GB.\\r\\n    - Dormant User pricing discounted **15%** to **$64.00** / Million\\r\\n\\r\\n- **Bulk+ 1B** ($7,705 / month)\\r\\n    - Includes **1 Billion** API calls at a savings of **$1,500**. Additional API calls start at **$8.50** / M.\\r\\n    - File transfers discounted **20%** to **$0.12** / GB, and free transfers bumped up to **1000** GB.\\r\\n    - Deep Data Storage discounted **33%** to **$0.30** / GB / day, and free storage units bumped up to **400** GB.\\r\\n    - Dormant User pricing discounted **20%** to **$60.00** / Million.\\r\\n\\r\\nFull specifics for the new plans will be posted to [getbraincloud.com](http://getbraincloud.com/) in early 2023.\\r\\n\\r\\nThese new plans will become available in time for the March 2023 billing cycle - and depending upon interest - potentially as early as January 2023. Note that when these plans become available, they will include all the pricing changes discussed above (even if they are released before the February billing cycle).\\r\\n\\r\\nFeel free to reach out to support if you have further questions about these plans."},{"id":"/2022/11/29/release-4-13-1","metadata":{"permalink":"/braincloud-apiref/release/2022/11/29/release-4-13-1","source":"@site/release/2022-11-29-release-4-13-1/index.md","title":"Release 4.13.1 is live!","description":"This is a small, targeted release with a few key improvements. This is also our last planned release before the December holiday season.","date":"2022-11-29T00:00:00.000Z","formattedDate":"November 29, 2022","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":2.25,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 4.13.1 is live!","date":"2022-11-29","tags":["release-history"]},"prevItem":{"title":"Feb 2023 Pricing Updates","permalink":"/braincloud-apiref/release/2022/12/15/feb-2023-pricing-updates"},"nextItem":{"title":"Release 4.13 is here!","permalink":"/braincloud-apiref/release/2022/11/01/release-4-13"}},"content":"This is a small, targeted release with a few key improvements. This is also our last planned release before the December holiday season.\\r\\n\\r\\n_Note that this is a server-only release. There are no changes to the client libraries._\\r\\n\\r\\n* * *\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### \ud83d\ude80 Client API Blocking\\r\\n\\r\\nWe have added a new feature that makes it easier to secure your app from mischievous players.\\r\\n\\r\\nDevs have always been able to add an API Pre-hook to block specific calls from the client - but this is painful to set up - and results in additional API counts for the app.\\r\\n\\r\\nConfiguring the new **API Blocking** feature is as simple as going to the new **Design | Cloud API | API Blocking** page, and selecting the _Services_ + _API Calls_ to block. Hit SAVE and you are done! (Or more likely, you are once you deploy those changes to your production app.)\\r\\n\\r\\nWe hope this new feature helps our customers to keep ahead of their most competitive (and ill-mannered) players.\\r\\n\\r\\n_Note that this feature requires a Plus plan to activate._\\r\\n\\r\\n_Note also that certain calls, like the_ `Award()`, `Consume()` and `Reset()` currency _calls, may already be blocked from the client depending based on the compatibility settings on the **Design | Core App Info | Advanced Settings** page._\\r\\n\\r\\n### Leaderboard \u201cDays\u201d rotation increase\\r\\n\\r\\nThis is a small change - but apps using the arbitrary \u201cDays\u201d rotation for their leaderboards can now set the rotation as high as 28 days\u2026. \u2190 the previous limit was 14 days.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe\'ve made the following portal changes:\\r\\n\\r\\n### **Design**\\r\\n\\r\\n- **Cloud Code | API Blocking**\\r\\n    - A new screen that allows devs to block specified APIs from being callable from the client.\\r\\n\\r\\n![](images/2022-11-24_16-13-31-1024x442.png)\\r\\n\\r\\n- **Leaderboards |** \\r\\n    - Leaderboards can now be configured with a 28 day rotation.\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThere are no changes to individual API calls, but the new API Blocking feature means that any client API call can now return the following error:\\r\\n\\r\\n```\\r\\n{\\r\\n  \\"status_message\\": \\"Processing exception (message): Call blocked from client.\\",\\r\\n  \\"reason_code\\": 40346,\\r\\n  \\"status\\": 403\\r\\n}\\r\\n```\\r\\n\\r\\n* * *\\r\\n\\r\\n## \ud83d\udd27 Miscellaneous Changes / Fixes\\r\\n\\r\\n- Additional Fixes\\r\\n    - BCLOUD-3305 and BCLOUD-3331 - Improvements to resetting of end-user passwords. Now preventing double-clicks, and waiting until code has been successfully changed to remove the link code.\\r\\n    - BCLOUD-3109 - Improvements to json response exception reporting from scripts\\r\\n    - BCLOUD-3295 - Corrected permissions check on app passwords feature\\r\\n    - BCLOUD-1518 - Fix to lobby screen - disband on start no longer automatically selected\\r\\n    - BCLOUD-3362 - Fix to serialization issue for cloud code version of `LobbyService.GetLobbyInstances()`\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2022/11/01/release-4-13","metadata":{"permalink":"/braincloud-apiref/release/2022/11/01/release-4-13","source":"@site/release/2022-11-01-release-4-13/index.md","title":"Release 4.13 is here!","description":"brainCloud 4.13 has just dropped. Here\u2019s what it contains\u2026","date":"2022-11-01T00:00:00.000Z","formattedDate":"November 1, 2022","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":15.375,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 4.13 is here!","date":"2022-11-01","tags":["release-history"]},"prevItem":{"title":"Release 4.13.1 is live!","permalink":"/braincloud-apiref/release/2022/11/29/release-4-13-1"},"nextItem":{"title":"Release 4.12 is live!","permalink":"/braincloud-apiref/release/2022/07/19/release-4-12"}},"content":"brainCloud 4.13 has just dropped. Here\u2019s what it contains\u2026\\r\\n\\r\\n:::caution\\r\\n\\r\\nNote - the implementation of `GlobalEntity.IncrementGlobalEntityData()` and `Entity.IncrementUserEntityData()` have changed - to properly enforce `acl.other` permissions. Be sure that your app isn\u2019t improperly using those methods against entities with `acl.other` set to `0` or `1` - because those calls will now fail under 4.13!  \\r\\n  \\r\\nAlso creating unowned Group Entities via `Group.CreateGroupEntity()` or `Group.SysCreateGroupEntity()` with `acl.member` of `0` or `1` will no longer be overridden to `2` permission.  \\r\\n  \\r\\n_Contact support if you would like our team to reset any previously created entities for you._\\r\\n:::\\r\\n\\r\\n### App Minimum Password Standards\\r\\n\\r\\nThis feature allows developers to set minimum password requirements for the users of their apps.\\r\\n\\r\\nThe following requirements can be set:\\r\\n\\r\\n- minLength - <x\\\\> chars. Default 8\\r\\n- maxLength - <y\\\\> chars. Default is 25 (max is 128).\\r\\n- minDigits - <n\\\\>. Default 1\\r\\n- minUppercase - <n\\\\>. Default 1\\r\\n- minLowercase - <n\\\\>. Default 1\\r\\n- minSymbols - <n\\\\>. Default 1\\r\\n\\r\\nFeature notes:\\r\\n\\r\\n- This feature affects users when setting _new_ passwords. _Existing_ passwords already associated with an account are _not_ affected by this feature.\\r\\n- For symbol enforcement, the following characters are treated as symbols: ``~!@#$%^&*_-+=`|(){}[]:;\'<>,.?/``\\r\\n\\r\\nIf enabled, these standards are automatically enforced by brainCloud when:\\r\\n\\r\\n- **creating** new accounts\\r\\n    - using Email or Universal authentication\\r\\n    - using following User service APIs (if a password is provided \u2013 generated passwords will not be verified):\\r\\n        - SysCreateUserEmailPassword\\r\\n        - SysCreateUserUniversalId\\r\\n- **attaching** new Email or Universal identities\\r\\n- **updating** passwords (via **reset** password and other mechanisms)\\r\\n\\r\\nAttempting to create an account (or attach an identity) whose password does not meet the requirements will return the new `INVALID_PASSWORD_CONTENT` ( `550022`) reason code.\\r\\n\\r\\n```\\r\\n{\\r\\n  \\"status_message\\": \\"Processing exception (message): Password should have minimum 1 uppercase character/s\\",\\r\\n  \\"reason_code\\": 550022\\r\\n}\\r\\n```\\r\\n\\r\\n### **Temporary Leaderboards**\\r\\n\\r\\nApps can now more easily create temporary leaderboards using the\xa0`SysCreateLeaderboardConfig()`\xa0call. A new field,\xa0`expireInMins`, has been added to the configuration object to control the lifetime of the leaderboard. Leaderboards set to expire will show an epoch timestamp the\xa0expiry\xa0field returned from\xa0`SysGetLeaderboardConfig()`\xa0and other methods. The system will automatically remove the leaderboard after the specified time has expired.\\r\\n\\r\\n_Technically the clean-up is done nightly, but those are just implementation details._\\r\\n\\r\\nThis provides a convenient method for creating temporary leaderboards, without having to implement a separate process to clean them up.\\r\\n\\r\\n_Note that this functionality is limited to ADHOC and NEVER rotation leaderboards (i.e. leaderboards that don\u2019t rotate)._\\r\\n\\r\\n### Resend Verification Emails\\r\\n\\r\\nFor apps with **Reject Unverified Email Logins** enabled (via the **Design | Authentication | Email** screen) -- the system will now **automatically resend** the verification email to users when they re-attempt to login.\\r\\n\\r\\n### GameLift-based Relay Servers\\r\\n\\r\\nWe have extended our AWS GameLift integration to include support for Relay Servers.\\r\\n\\r\\nFor instructions on how to configure them, see this [article](https://help.getbraincloud.com/en/articles/5606739-using-braincloud-lobbies-with-your-gamelift-servers).\\r\\n\\r\\n### Non-consumable IAP Product History\\r\\n\\r\\nNon-consumable In-App-Purchases can be processed multiple times (unless the \u201c_Do not reprocess currencies for non-consumable IAP products in receipts_\u201d compatibility flag is enabled).\\r\\n\\r\\nThis can be triggered when an iOS user clicks [Restore Purchases] on an app. Doing so may cause the transaction to be moved from one brainCloud account to another\u2026 (for example - if the iOS user is using a different brainCloud account than when they originally made the purchase).\\r\\n\\r\\n_Note that this sort of activity could also theoretically happen if your app has been cracked and users are sending stolen (but valid) receipts into brainCloud._\\r\\n\\r\\nWe have enhanced the system to keep track of all users that have processed a non-consumable IAP item. The processing history can be viewed by clicking on the new **View History** menu option on the **Monitoring | User Monitoring | Transactions** screen.\\r\\n\\r\\n### Library Improvements\\r\\n\\r\\nAll client libraries have been updated to include the 4.13 API additions.\\r\\n\\r\\n_Note that some of the listed improvements were included in 4.12 patches previously._\\r\\n\\r\\n- **C++**\\r\\n    - Upgraded WebSockets for RTT with embedded SSL certification\\r\\n    - Reconnect()\xa0method returns a failure if previous connection information is not available\\r\\n    - Improved build time in Objective-C\\r\\n    - Improvements for Android Studio builds\\r\\n    - Added response codes and API calls\\r\\n- **Java**\\r\\n    - Added 502 & 504 response code conditions to retry requests.\\r\\n    - `Reconnect()` method returns a failure if previous connection information is not available\\r\\n- **Javascript**\\r\\n    - `Reconnect()` method returns a failure if previous connection information is not available\\r\\n- **Unity**\\r\\n    - Compressed Responses and Requests are now turned on by default. This should be transparent to your app - but can be disabled by setting `EnabledCompressedRequests(false)` and `EnableCompressedResponses(false)`.\\r\\n    - `Reconnect()` method returns a failure if previous connection information is not available\\r\\n    - Adding Mac OS support for getting country code while initializing the client\\r\\n    - Now supports Unity up to 2021.3 LTS\\r\\n- **Unreal lib**\\r\\n    - Plugin supports and ready to use in\xa0**Unreal Engine 5**\\r\\n    - Fixes to engine heartbeat not working as intended (also in 4.12.2 patch)\\r\\n    - Reconnect()\xa0method returns a failure if previous connection information is not available\\r\\n    - Moved plugin to standalone release in GitHub for use as git submodule (Improved setup in GitHub?)\\r\\n    - Fixed MacOS build error\\r\\n    - Added check for failed connection callback\\r\\n\\r\\n### Miscellaneous Improvements\\r\\n\\r\\n- **ACL Permissions** **fixes**\\r\\n    - Fixes have been applied to several methods in Global, User and Group Entities.\\r\\n    - Be sure to double-check the ACL permissions of you entity objects if you see issues with your app(s)\\r\\n- **Custom Entity** **improvements**\\r\\n    - New `IncrementSingletonData()` API call\\r\\n    - Improved locking for **Custom Entity Singletons**\\r\\n- **Deployment** **improvements**\\r\\n    - Improvements to the web and server components to prevent parallel deployment / import / restore processes\\r\\n    - Optimizations to cache notifications to reduce the traffic across the api servers\\r\\n    - Added a fail-safe refresh after deployment to ensure that all caches are updated properly\\r\\n- **Dormant User** **processing**\\r\\n    - Refactored dormant user deletion to add parallel processing (across datastream servers)\\r\\n- **Global Files**\\r\\n    - Fixes to file versioning during deploys and imports (was also patched late in 4.12)\\r\\n    - New portal function to manually edit a File\u2019s version on the **Design | Custom Config | Global Files** page\\r\\n- **Groups**\\r\\n    - The _custom data_ section of **Group** objects are now indexed on an `indexedId` field (if it exists). Feel free to set that field, and do searches using it for quick lookups of groups via an alternate id.\\r\\n- **Legacy Flagged Users API**\\r\\n    - We\u2019ve added an API for controlling the users that that appear in the Portal\u2019s flagged users list.\\r\\n    - This is legacy system, and not super-scaleable - and thus we have named the methods as such.\\r\\n    - Important: Apps are limited to 1000 flagged users max.\\r\\n    - The API methods can be found in the **GlobalApp** service. \u2190 due to the legacy of it\u2019s implementation\\r\\n    - _Do NOT use these APIs for anything other than tagging users to make them easier to look-up in the portal._\\r\\n- **Push Notifications**\\r\\n    - Improvements to performance of **Push Notifications** sent to **all** users of an app\\r\\n- **S2S API**\\r\\n    - Significant improvements to **S2S** locking - prevents lock timeouts in certain situations\\r\\n- **Steam** **integration improvements**\\r\\n    - Steam purchase transaction ids are now prefixed by the appId of the brainCloud app processing them. This reduces situations where the ids may clash if the same Steam information is being used across both dev and production apps in brainCloud.\\r\\n    - System now returns more useful information for failed SteamClient validations\\r\\n\\r\\n### Features for Private Licensees\\r\\n\\r\\n- **Portal SSO**\\r\\n    - Improvements to handling of mixed-case email addresses for SSO-connected private deployments\\r\\n- **Azure**\\r\\n    - Improvements to handling of long-lived Azure ServiceBus requests\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe\'ve made the following portal changes:\\r\\n\\r\\n### Design Section\\r\\n\\r\\n- **Authentication | Passwords**\\r\\n    - New Passwords screen allows apps to enforce minimum password standards\\r\\n\\r\\n![](images/2022-10-18_16-00-36.png)\\r\\n\\r\\n- **Cloud Code | API Hooks**\\r\\n    - Hooks are properly ordered by **Service**, then **Operation** in the main screen\\r\\n    - Also, when selecting a script for a hook, the scrips are now sorted alphabetically by path\\r\\n- **Cloud Code | Scripts**\\r\\n    - Quick Authenticate now ensures it chooses a platform that is enabled\\r\\n    - Optimizations to the script editor - no longer retrieves _all_ scripts when attempting to run the current script!\\r\\n- **Custom Config | Global Files**\\r\\n    - You can now manually adjust the \u201cversion\u201d of a file using by choosing **Adjust Version** from the Action menu.\\r\\n- I**ntegrations | Blockchain**\\r\\n    - Added new Ultra App blockchain integration to be used by Ultra licensee apps to enable integration with Ultra\u2019s blockchain services - including Uniqs.\\r\\n\\r\\n### Monitoring\\r\\n\\r\\n- **Global Monitoring | Custom Entities**\\r\\n    - Custom Entity collections now displayed in alphabetical order\\r\\n- **User Monitoring | Transactions**\\r\\n    - The processing history of a non-consumable transaction can now be viewed by choosing the **View History** option from the action menu. Note that the **View History** menu option will only be available for transactions that have history to view.\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the brainCloud API:\\r\\n\\r\\n- **Blockchain**\\r\\n    - New `GetUniqs()` call added for retrieving Uniqs from the **Ultra** blockchain\\r\\n    - Also new `GetBlockchainItems()` for other blockchain flavors\\r\\n- **Bridge**\\r\\n    - New `VerifySignedJwt()` method added to the cloud code bridge to aid in implementing OpenId via External Authentication\\r\\n    - Added `GetSessionForValidatedCredential()` method to the client bridge... (was only in the server bridge before)\\r\\n- **Custom Entity Service**\\r\\n    - New `IncrementSingletonData()` API call\\r\\n- **GlobalApp**\\r\\n    - New methods for controlling the users that appear in the Portal\u2019s flagged users list. This is legacy system, and not super-scaleable - and thus we have named the methods as such. _Do NOT use these APIs for anything other than tagging users to make them easier to look-up in the portal._\\r\\n    - Important: Apps are limited to 1000 flagged users max.\\r\\n    - The new methods are: `SysAddLegacyFlaggedUser()`, `SysGetLegacyFlaggedUserData()`, `SysGetLegacyFlaggedUserDataList()`, `SysRemoveFromLegacyFlaggedUsers()`, `SysUpdateLegacyFlaggedUser()`\\r\\n- **Group Service**\\r\\n    - New cloud code only `SysAddGroupMember()` call adds the specified member to the group immediately (irregardless of the permissions of the current user)\\r\\n- **Leaderboard Service**\\r\\n    - `SysCreateLeaderboardConfig()` and `SysEditLeaderboardConfig()` methods updated to access the new `expireInMins` field. Select methods like `SysGetLeaderboardConfig()` now return an `expiry` field with the calculated epoch expiry.\\r\\n- **RTT**\\r\\n    - New `RegisterBlockchainCallback()` and `DeregisterBlockchainCallback()` methods enable registering for real-time blockchain changes\\r\\n- **Script Service**\\r\\n    - Added new cloud code only `SysCancelScheduledScriptIfExists()` call which as the name implies, cancels a script if it exists - but more importantly, does not return an error if it does not!\\r\\n    - Added new cloud code only `SysCancelUserScriptBatchIfExists()` to do the same for batch script processing\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\nThe following issues have been addressed in this release:\\r\\n\\r\\n- BCLOUD-1257 - Getting NPE When Paginating in the Server logs Page\\r\\n- BCLOUD-1728 - [Internal] The \u201cLocalize in\u201d field stuck when user made a changes and click on Cancel button\\r\\n- BCLOUD-2050 - [Internal] Cloud Code \u2013 Scripts page, when user \u201cExport All Scripts\u201d and single \\"Export Script\\" in the TEAM | Audit Log shows duplicate entries for the exported\\r\\n- BCLOUD-2084 - JoinDivision and SysGetLeaderboardConfig responses to include timestamp division set instance leaderboard was created at\\r\\n- BCLOUD-2113 - Missing translation \\"Details for\\" on Monitoring | Global Monitoring | Redemption Codes page\\r\\n- BCLOUD-2114 - Missing translation \\"Error! Invalid search criteria. Please enter a minimum of 3 characters.\\" on User Monitoring | User Summary - Select User\\r\\n- BCLOUD-2115 - Missing translation \\"Code Info\\" on Monitoring | Global Monitoring | Redemption Codes page\\r\\n- BCLOUD-2191 - Cache ItemDef collection in app cache\\r\\n- BCLOUD-2260 - Support locking of singleton custom entities by ownerId\\r\\n- BCLOUD-2336 - Avoid SendGrid enabled checking (and logging warnings) for User service \\"create\\" APIs when notificationTemplateId input is empty string\\r\\n- BCLOUD-2347 - Issue handling Portal User Emails with mixed cases\\r\\n- BCLOUD-2349 - Return a 503 response status in the event of Memcached timeouts\\r\\n- BCLOUD-2351 - Reset password for email and universalId not trimming or lowercasing \\"externalId\\" input\\r\\n- BCLOUD-2352 - Custom Entity SysIncrementData and IncrementData APIs require Sharded versions for sharded custom collections\\r\\n- BCLOUD-2353 - [Internal] Nintendo is not in alphabetical order in Select User Identity list\\r\\n- BCLOUD-2375 - [Internal ] Unlock App dialog ignores changes to the application name\\r\\n- BCLOUD-2376 - Errors in prod-baas for IdentityService ATTACH with Google OpenID\\r\\n- BCLOUD-2396 - Super / Manage / Apps - Search filter is performing the query against the server on EVERY character that is typed.\\r\\n- BCLOUD-2433 - Audit logs missing for a number of update and delete Push Notification settings requests from Portal\\r\\n- BCLOUD-2488 - [Internal] Generate error/warning message when user saves a User Statistics Event without proper Actions\\r\\n- BCLOUD-2499 - Modify Steam IAP order id generation to incorporate app id\\r\\n- BCLOUD-2512 - We should have a way of re-sending end-user email verification emails?\\r\\n- BCLOUD-2525 - PATCH! Need IdentityService.getIdentityData() to be accessible from cloud code scripts!\\r\\n- BCLOUD-2526 - PATCH - missing CLIENT cloud code proxy for getSessionForValidatedCredential()\\r\\n- BCLOUD-2528 - [Internal] Design | Cloud Data | Custom Entities, HTTP Status 500 error message pops up when user create \u201cMigrate:true\u201d entity type collection in portal\\r\\n- BCLOUD-2550 - [Internal ] While IOS platform disabled, the script Quick Authenticate throw exception error message \\"Processing exception (message): Platform IOS has not been enabled for this app\\"\\r\\n- BCLOUD-2558 - Legacy Portal - Cloud Code Scripts (remove usage of the \\"scripts-read\\" call).\\r\\n- BCLOUD-2601 - When Updating Existing Owned Entity(Custom Collection is Sharded) Incorrect Version is Getting Updated in API Response and Global Monitoring - Custom Entities Page\\r\\n- BCLOUD-2647 - API counts posted for scripts using relative reference to other scripts are failing\\r\\n- BCLOUD-2652 - Refactor purgeSoon User Purge processing to use Consumers\\r\\n- BCLOUD-2771 - Email Auth - Resend Verification\\r\\n- BCLOUD-2781 - Cloud code audit log improvements\\r\\n- BCLOUD-2785 - Add support for CustomEntity IncrementSingletonData API and locking on all \\"increment\\" APIs\\r\\n- BCLOUD-2786 - Change audit logs to differentiate \\"App user-enabled\\" activity for import/deploy versus \\"Updated app\\" (generic)\\r\\n- BCLOUD-2788 - Add new Group service SysAddGroupMember API\\r\\n- BCLOUD-2790 - Clicking a folder-based script execution entry from the API Usage page (under API Errors) is not redirecting to the correct location in the portal (API Errors).\\r\\n- BCLOUD-2791 - After a deployment, the system should set a timer for X seconds, and when it expires, trigger a refresh of the app\\r\\n- BCLOUD-2792 - [Internal] Not able to see newly created app in Admin Tools-Deployment drop-down menu of other app\\r\\n- BCLOUD-2815 - Change Deploys, Import Configuration and Restore to Checkpoint processing to clear new appCache via prefix rather than looping\\r\\n- BCLOUD-2821 - New special \\"indexedId\\" field in Group Data\\r\\n- BCLOUD-2861 - Cloud Code - API Explorer - Service script list should be sorted by path+scriptname\\r\\n- BCLOUD-2865 - [Internal ] Super | Manage | Teams page, previous Team Name is saving in delete dialog text field while attempting to delete different team\\r\\n- BCLOUD-2866 - [Internal] Design | Cloud Code | Scripts, when user export single script doesn\u2019t logged in the Audit Log\\r\\n- BCLOUD-2873 - [Internal] Monitoring | User Monitoring | Groups, the ID links don\u2019t use a hand cursor when user hover over to click on the ID links\\r\\n- BCLOUD-2877 - Legacy Portal: Item Management - Make select virtual currency mandatory before the user enters the $ amount\\r\\n- BCLOUD-2880 - User batch script with passed in profileIds list to skip null profileId\\r\\n- BCLOUD-2881 - Enable setting of expiry date to applicable Leaderboard APIs to create or edit leaderboard configs\\r\\n- BCLOUD-2885 - Nightly purge of leaderboard scores for old versions is including gameId in query (slow)\\r\\n- BCLOUD-2891 - Legacy Portal - Monitoring / Global Monitoring / Custom Entities - Apply alphabetical order to entity type list.\\r\\n- BCLOUD-2901 - Total Users value displayed for Super | Manage | Apps isn\'t accurate\\r\\n- BCLOUD-2902 - [Internal] When user entering iTunes IAP Product ID no limitation and after 53 characters cutting off\\r\\n- BCLOUD-2904 - [Internal] When user entering Configure Platforms fields no limitation and after 56 characters cutting off\\r\\n- BCLOUD-2908 - Deployment / Import Configuration / Restore to Checkpoint safety measures required to prevent overlap\\r\\n- BCLOUD-2909 - Core App Info - Admin Tools - Deploy configuration button should be disabled when deployment is in progress\\r\\n- BCLOUD-2918 - Legacy Portal - API Key Name is Restricted to Numbers, letters and underscore (\\\\_) When Adding a New Key in Edit Profile | Permissions | API Keys Tab\\r\\n- BCLOUD-2921 - Internal - Unlock dialog will display APP ID twice after user selects Cancel on the unlock dialog\\r\\n- BCLOUD-2923 - [Internal ] Deploying to an app with incorrect app name does not show error, instead upon hovering over Deploy button ( active) shows red icon\\r\\n- BCLOUD-2948 - Unreal Engine Heartbeat Not Working As Intended\\r\\n- BCLOUD-2956 - [Internal] French Version - Selecting Group id and Group Name from drop-down menu cut off\\r\\n- BCLOUD-2958 - Modify Non-Consumable purchase behavior\\r\\n- BCLOUD-2996 - Legacy Portal - Scripts - API Usage should use new fields returned from the server instead of calculating the values itself.\\r\\n- BCLOUD-2998 - Legacy Portal - If passwords feature not enabled those password rules should not be displayed on the Reset Password page\\r\\n- BCLOUD-3000 - Legacy Portal \u2013 User Monitoring | Transactions, adjust the View Transaction to show both dataJson and history\\r\\n- BCLOUD-3002 - Set proper version on target files for deploy\\r\\n- BCLOUD-3029 - JSON Error App not found error generates when deploying to the same app multiple times\\r\\n- BCLOUD-3037 - New app-overridable brainCloud property to control audit logging of leaderboard configuration (create, edit) via Sys or post to dynamic APIs\\r\\n- BCLOUD-3040 - [Legacy] Desing | Gamification - Statistics Event \'Add User Statistics Event\' pops up dialog has \'Currencies\', \'User Statistics\' and \'Global Statistics\' options are enabled compared to XP Levels page\\r\\n- BCLOUD-3044 - Add some additional logging around 3rd party authentication\\r\\n- BCLOUD-3045 - Legacy Portal - Player Selector - Applicable options in search drop-down not working correctly when language is French.\\r\\n- BCLOUD-3051 - Do some pre-processing on Nintendo externalId\\r\\n- BCLOUD-3054 - [Legacy] Icon of Platforms \'Oculus\' and \'Apple watchOS\' are not shown in User Monitoring >User Summary Logged In From section\\r\\n- BCLOUD-3067 - GlobalEntity IncrementGlobalEntityData is not enforcing read-only for other users\\r\\n- BCLOUD-3081 - Entity service Increment User Entity Data APIs are not enforcing read-only for other users"},{"id":"/2022/07/19/release-4-12","metadata":{"permalink":"/braincloud-apiref/release/2022/07/19/release-4-12","source":"@site/release/2022-07-19-release-4-12/index.md","title":"Release 4.12 is live!","description":"brainCloud 4.12 is a targeted release to get Nintendo Switch Authentication support in place before our summer holidays!","date":"2022-07-19T00:00:00.000Z","formattedDate":"July 19, 2022","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":2.635,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 4.12 is live!","date":"2022-07-19","tags":["release-history"]},"prevItem":{"title":"Release 4.13 is here!","permalink":"/braincloud-apiref/release/2022/11/01/release-4-13"},"nextItem":{"title":"Upcoming pricing changes...","permalink":"/braincloud-apiref/release/2022/07/19/upcoming-2022-billing-changes"}},"content":"brainCloud 4.12 is a targeted release to get Nintendo Switch Authentication support in place before our summer holidays!\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Nintendo Switch Authentication\\r\\n\\r\\nbrainCloud now supports native Nintendo Switch authentication.\\r\\n\\r\\nThere are now Nintendo variants of all the standard _Authentication_ and _Identity_ calls \u2013 see the _API Changes_ section for more details.\\r\\n\\r\\nNote that so far these calls have been added to the **Unity Client** library only. The Unreal Client libs will be added soon!\\r\\n\\r\\n### Miscellaneous changes\\r\\n\\r\\n- **Bridge-based DEBUG log messages are now free when not debugging!**  \\r\\n    Calling the `bridge.logDebug()` and `bridge.logDebugJson()` calls have been heavily optimized to do nothing (when not called from the API Explorer or Script Editor) - so we no longer record API counts for these calls. Note that we _do_ still count API counts for debug log calls made from the `Logging` service itself \u2190 since those calls still go through our full Dispatcher and DispatchHandler systems. So don\u2019t do that \u2013 use the `bridge` methods instead!\\r\\n- **GetUserItemsPage() performance has been improved**  \\r\\n    The `GetUserItemsPage()` / `GetUserItemsPageOffset()` calls have been refactored to only refresh the items that are being returned by that page call\u2026 (instead of unnecessarily refreshing all items during the initial call).\\r\\n- **Improved RTT WebSocket Disconnect Handling in Unreal**  \\r\\n    In addition to triggering on websocket disconnects, our Unreal libraries now also use a heartbeat timeout to detect disconnects (useful in platforms like IOS where the disconnect notification can take a while to arrive).\\r\\n- **Improved Country Code, Language Code, and TimeZoneOffset handling**  \\r\\n    Both the Unity and Unreal client libraries have been enhanced to detect country code, language code, and timezone offset on more platforms (and we\'ll be making more improvements in the future).\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe have made the following portal changes:\\r\\n\\r\\n### Design Section\\r\\n\\r\\n- **Core App Info | Platforms**\\r\\n    - Added _Nintendo_ to the platforms list\\r\\n\\r\\n### Monitoring\\r\\n\\r\\n- **Global Monitoring | Custom Entities**\\r\\n    - Added sortable _Updated At_ column to custom entity list screens\\r\\n- **User Monitoring | Select User**\\r\\n    - Added ability to search by _Nintendo_ (Network Services Account) ID\\r\\n- **User Monitoring | User Summary**\\r\\n    - A user\u2019s _Nintendo ID_ will now be shown in the Credentials section of this screen\\r\\n- **User Monitoring | Custom Entities**\\r\\n    - Added sortable _Updated At_ column to custom entity list screens\\r\\n\\r\\n### Reporting\\r\\n\\r\\n- **Analytics**\\r\\n    - Enhanced to show _Nintendo_ platform players  \\r\\n        \\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the brainCloud API:\\r\\n\\r\\n- **BrainCloudWrapper**\\r\\n    - Added `AuthenticateNintendo()` and `SmartSwitchAuthenticateNintendo()` calls\\r\\n- **Authentication Service**\\r\\n    - Added `AuthenticateNintendo()` call\\r\\n- **Identity Service**\\r\\n    - Added `AttachNintendoIdentity()`, `DetachNintendoIdentity()` and `MergeNintendoIdentity()` calls\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - 4.12 version of all client libs are available.\\r\\n    - The Unity and Unreal libs in particular have significant features and improvements in this release - go grab \'em!\\r\\n- Documentation updates\\r\\n    - The latest APIs have been added to the API Reference.\\r\\n- Important Fixes\\r\\n    - BCLOUD-2298 - [Runstate erroneously set to disabled when executing one of the import/export tasks](https://playbrains.atlassian.net/wiki/spaces/BD/pages/2916188161/brainCloud+4.12+is+coming#)\\r\\n    - BCLOUD-2191 - Cache ItemDef collection in app cache\\r\\n- Plus miscellaneous fixes and performance enhancements.."},{"id":"/2022/07/19/upcoming-2022-billing-changes","metadata":{"permalink":"/braincloud-apiref/release/2022/07/19/upcoming-2022-billing-changes","source":"@site/release/2022-07-19-upcoming-2022-billing-changes/index.md","title":"Upcoming pricing changes...","description":"As you are probably aware - brainCloud\'s pricing model is designed to be elastic - in that the cost to you (our customer) is proportional to the costs we incur in running your app(s) on our service.","date":"2022-07-19T00:00:00.000Z","formattedDate":"July 19, 2022","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":6.965,"hasTruncateMarker":false,"authors":[{"name":"Paul Winterhalder","title":"brainCloud product owner","url":"https://github.com/winterhalder","imageURL":"https://github.com/winterhalder.png","key":"paul"}],"frontMatter":{"title":"Upcoming pricing changes...","date":"2022-07-19","authors":"paul","tags":["release-history"]},"prevItem":{"title":"Release 4.12 is live!","permalink":"/braincloud-apiref/release/2022/07/19/release-4-12"},"nextItem":{"title":"Release 4.11 is live!","permalink":"/braincloud-apiref/release/2022/06/20/release-4-11"}},"content":"As you are probably aware - brainCloud\'s pricing model is designed to be _elastic_ - in that the cost to you (our customer) is proportional to the costs we incur in running your app(s) on our service.\\r\\n\\r\\nThis model is maintained via the formulas that we use to calculate API counts, deep data usage, hosting costs, etc. Keeping the model accurate requires periodic assessments to ensure that the components are balanced -- and a review was long overdue!\\r\\n\\r\\nReviewing the data, here is what we found:\\r\\n\\r\\n- **Dormant account costs!** The storage of dormant accounts (i.e. players who haven\'t logged into an app for years) is an ever-increasing concern - affecting storage + backup costs, system performance, and deep data costs for all apps.  \\r\\n    _Think about it: As an app enters the long-tail of it\'s product lifecycle, the cost of hosting that app should go down - not up!_  \\r\\n      \\r\\n    \\r\\n- **RTT bulk message sends.** When we first developed RTT, we expected much higher usage on a per-connection basis - and thus designed the usage formulas accordingly. It turns out that devs are finding that it\'s very convenient to have an RTT connection available even in low-usage situations - which is great! - but ensuring proper cost coverage does necessitate an adjustment to the formula.  \\r\\n      \\r\\n    \\r\\n- **Cloud code API imbalance.** Calling brainCloud APIs from within cloud code scripts is more efficient than calling them directly from the client - and our API count formulas reflect that.  \\r\\n    Unfortunately, the existing formula has a design flaw that unintentionally encourages developers to artificially break their code into smaller and smaller scripts. This is both bad design and less efficient for brainCloud - so we are correcting this.  \\r\\n      \\r\\n    \\r\\n- **Debug logging!** Some apps have a surprising amount of debug logging in their scripts -- which actually results in more system traffic than you\'d think -- which is why we charge for the calls -- which results in higher costs for our customers.  \\r\\n    In brainCloud 4.12 we\'ve optimized the handling of bridge-based DEBUG log message so that we no longer have to charge for them when you aren\'t debugging (via the API Explorer / Script Editor).  \\r\\n      \\r\\n    \\r\\n\\r\\n_The details of these changes (and when they take affect) are described below. How these changes affect your app depend upon the details of how your app is using brainCloud._\\r\\n\\r\\n* * *\\r\\n\\r\\n## Impact to apps\\r\\n\\r\\nEstablished apps with lots of custom entities will likely see their monthly bills _significantly reduced_ as the **Auto-Delete** feature removes the abandoned accounts - greatly reducing their deep data usage. That\'s provided that the devs _enable_ Auto-delete of course.\\r\\n\\r\\nApps that choose to retain all (or a selected portion) of their dormant users will see a proportionate _increase_ in monthly costs as we start to charge for Dormant Users.\\r\\n\\r\\nApps that don\'t use a lot of scripts (and there are tons of them) won\'t see much of a difference at all. Apps with scripts that make lots of API calls will see a modest increase due to the rebalancing - which may be somewhat offset by the DEBUG log savings.\\r\\n\\r\\n**We hope that folks understand that we make these changes with the best intentions of ensuring a better alignment between the costs that we incur and the costs to you - to ensure a healthy service for everyone!**\\r\\n\\r\\n* * *\\r\\n\\r\\n## Pricing changes\\r\\n\\r\\nAs of **brainCloud 4.12** (targeted for release on **July 20, 2022**), we are introducing the following change:\\r\\n\\r\\n1. **We are eliminating the charge for bridge-based DEBUG log messages - when not actually debugging in the API Explorer or Script Editor.**  \\r\\n    We have optimized the pipeline for DEBUG log messages called directly from the `bridge` service - so that these are now essentially no-ops, and thus we no longer need to charge for them. This is a significant cost reduction for some devs who like to leave the debug calls in place (and who wouldn\'t?) - and a greater convenience for all devs - who no longer need to comment these calls out to reduce costs.  \\r\\n    \\r\\n\\r\\n* * *\\r\\n\\r\\nAs of **September 1, 2022**, we are introducing the following changes:\\r\\n\\r\\n1. **We are re-balancing the # of free API calls that you get with every Cloud Code script call - from 3 -> 2 calls.** Note that every call after the two free calls continues to cost 1/2 an API count.  \\r\\n    This corrects an imbalance from our original formula, that had the unintended side-effect of making some devs think that we were encouraging them to artificially break up their code into multiple smaller scripts. (Hint: We would never intentionally encourage devs to break up their code for reasons that don\'t make sense from a design or runtime perspective!)  \\r\\n      \\r\\n    \\r\\n2. **We are adjusting the ratio used to convert from bulk RTT message sends to API Counts from 1000:1 -> 100:1.**  \\r\\n    This looks like a big change, but the message send traffic will still only adds up to a few dollars per month for even the most active apps on the platform. Still - it ensures we are covered should anybody choose to build the next Twitter on brainCloud!  \\r\\n      \\r\\n    \\r\\n\\r\\n* * *\\r\\n\\r\\nFinally, as of **January 1, 2023**, we will be introducing billing for **Dormant User Accounts**.\\r\\n\\r\\n:::info\\r\\n\\r\\nLong-time brainCloud users will note that we had first announced Dormant User Pricing back in July 2020 - to be effective as of Jan 2021! What can we say? We have been busy! It definitely \\\\*is\\\\* going live this January - so start deleting those users now!\\r\\n:::\\r\\n\\r\\nbrainCloud defines a _Dormant User Account_ as any account where the user hasn\'t logged in the app in the past **365 days**.\xa0 These users add _no value_ to your game (e.g. they\'re probably anonymous and have already uninstalled your app!) - but they do significantly _increase costs_ (including deep data usage) -- and slow down your apps. Currently **over 50%** of brainCloud storage and backup costs is due to dormant accounts.\\r\\n\\r\\nStarting **January 1, 2023**, brainCloud apps will be charged **$75 / month** per Million dormant users (pro-rated). That is not a lot - though for some apps it would be - but ideally _we don\'t want to collect any Dormant User revenues at all -- we\'re looking for the cost savings!_ That\'s why we have our **Auto-deletion** service!\\r\\n\\r\\n### Auto-Deletion\\r\\n\\r\\nThe Auto-Deletion service (configured via the **Design | Core App Info | Auto-Delete Users** screen) is designed to keep dormant users from piling up.\\r\\n\\r\\nWe know deleting user accounts is scary - so we have made it very flexible - allowing you customize:\\r\\n\\r\\n- **which accounts get deleted** <- you can define exclusions for users who have made purchases, attached an e-mail address, have virtual currencies greater than a certain balancer, etc.\\r\\n- **if (and when) users are notified** - notify users in advance by email <- requires an attached Sendgrid account\\r\\n- **whether the accounts are archived for a period of time** - you can optionally archive an export of a users data to a Custom Entity collection before deleting the account (just-in-case) <- requires a Plus plan\\r\\n\\r\\nNote that depending upon the options you choose, there are some billing charges that apply as Auto-delete removes accounts:\\r\\n\\r\\n- +1 Bulk API Count for each user deleted\\r\\n- +1 Email Sent API Count for each email notification sent\\r\\n- Plus deep data charges for temporarily archiving player data...\\r\\n\\r\\n:::tip Advice - Enable Auto-Delete today!\\r\\n\\r\\nDeleting dormant user accounts is a background process - and is _far_ from instantaneous.  \\r\\n_We encourage apps with larger populations of dormant users to **enable Auto-Deletion today** - so that their older accounts will be purged before January 2023 rolls around!_\\r\\n:::\\r\\n* * *\\r\\n\\r\\n### In summary\\r\\n\\r\\nAs always, our goal when designing our pricing models is to ensure that the pricing you are charged reflects the costs that we incur in providing the service.\\r\\n\\r\\nWe feel this approach aligns our interests. The more server resources your apps consume, the higher our costs, and the higher the price to you. But the more efficiently you can build your app, the lower our costs, and the lower the pricing for you.\xa0It\u2019s win:win\xa0\u2013 and we are on the same side!\\r\\n\\r\\nIf you have any questions or feedback, please reach out to us via the Green Chat widget. We are always happy to hear from you!"},{"id":"/2022/06/20/release-4-11","metadata":{"permalink":"/braincloud-apiref/release/2022/06/20/release-4-11","source":"@site/release/2022-06-20-release-4-11/index.md","title":"Release 4.11 is live!","description":"brainCloud 4.11 has dropped. Here is what it contains.","date":"2022-06-20T00:00:00.000Z","formattedDate":"June 20, 2022","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":8.035,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 4.11 is live!","date":"2022-06-20","tags":["release-history"]},"prevItem":{"title":"Upcoming pricing changes...","permalink":"/braincloud-apiref/release/2022/07/19/upcoming-2022-billing-changes"},"nextItem":{"title":"Updated Public BaaS NAT gateways","permalink":"/braincloud-apiref/release/2022/06/13/updated-public-baas-nat-gateways"}},"content":"brainCloud 4.11 has dropped. Here is what it contains.\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Redemption Code Enhancements\\r\\n\\r\\nbrainCloud 4.11 adds significant customization abilities to the Redemption Code service.\\r\\n\\r\\nDevelopers can now write and configure scripts to programmatically handle the processing of redemption codes. These scripts can even incorporate _asynchronous_ processing so that redemption processing can work with off-board fulfillment systems (i.e. delivery of virtual or physical goods via a 3rd party system).\\r\\n\\r\\n![](images/brainCloud-Redemption-Code-States-4.11-1024x675.png)\\r\\n\\r\\nbrainCloud 4.11 also adds the ability to generate groups of redemption codes - in two code formats\\\\*:\\r\\n\\r\\n- `StructuredGuid` - which is a standard GUID-format (i.e. \u201cbe0cc83f-024b-4dce-b50c-035ca51e99ae\u201d)\\r\\n- `FiveByFive` - which is a 5x5 alphanumeric code (i.e. \\"a1c2b-a82k3-d82h3-48sw7-8a82d\\")\\r\\n\\r\\n_Note - Additional code types may be added in the future._\\r\\n\\r\\nSimply choose the format of codes that you want - and the quantity - and an email will be sent to you with the generated set of codes.\\r\\n\\r\\nWith this - the following API calls have been added:\\r\\n\\r\\n- `GenerateCodes()` - generates a set of codes, and emails them to the specified user\\r\\n- `GenerateCodesInline()` - generates a set of codes, and returns them directly in the API call... (limited to max of 100 codes generated at a time)\\r\\n- `ProcessAsynchronousResponse()` - used in asynchronous custom processing scripts to tell the Redemption Code service the updated status of the specified code.\\r\\n\\r\\n### Division Management API\\r\\n\\r\\nbrainCloud adds a new API for the creation and management of Divisions \u2013 accessible via S2S and cloud code.\\r\\n\\r\\nThe following new methods are available:\\r\\n\\r\\n- `SysCreateDivisionSetConfig()`\\r\\n- `SysDeleteDivisionSetConfig()`\\r\\n- `SysEditDivisionSetConfig()`\\r\\n- `SysListDivisionSetConfigs()`\\r\\n- `SysReadDivisionSetConfig()`\\r\\n\\r\\nNote that the\xa0`JoinDivision()`\xa0and\xa0`SysGetLeaderboardConfig()`\xa0calls have also been enhanced to return a new\xa0`createdAt` field (for division leaderboard instances only) that indicates the date+time that that particular division set instance was created.\xa0\\r\\n\\r\\n### Relay Server Fixes / Improvements\\r\\n\\r\\nWe have improved the robustness of the relay server and added support for customizable timeouts.\\r\\n\\r\\nThe following timeout values are now supported:\\r\\n\\r\\n- `MEMBER_TIMEOUT`\xa0- Number of\xa0_seconds_\xa0within which a member needs to initially join the game. They will be automatically dropped if they don\u2019t join within this time. Default is\xa030\xa0seconds.\\r\\n- `CONNECTION_TIMEOUT`\xa0- Number of seconds a connection can be idle (i.e. no activity from the client) before the server drops it. Default is\xa010\xa0seconds.\\r\\n- `RESEND_TIMEOUT`\xa0- Number of seconds of resending the same packet before the player is dropped for \\"too many packet drops\\". Default is\xa010\xa0seconds.\\r\\n\\r\\nNote - these improvements are only available for the v2 Relay Protocol servers.\\r\\n\\r\\n### Unity Client Improvements\\r\\n\\r\\nWe have made significant improvements to how the Unity Client processes timeouts and connection errors - especially in times of high server load. These improvements will be applied to the other client libraries in the coming months.\\r\\n\\r\\nIn addition, our latest libs address a WebSocket change in the 2021+ versions of Unity.\\r\\n\\r\\nAs always, for best performance, we encourage all developers to upgrade to the latest client libraries. So be sure to grab the 4.11 libs!\\r\\n\\r\\n### Unity Plug-in Changes\\r\\n\\r\\nThe Unity Plug-in has been enhanced to accept Builder API keys in the password field during login. This is to assist our private licensees who are transitioning to Single-Sign-On usage.\\r\\n\\r\\n### New Unity Authentication Example\\r\\n\\r\\nWe have totally re-written the Unity Authentication example - from OnGUI to Unity UI - to better illustrate how authentication works - including our recently added `AuthenticateAdvanced()` call.\\r\\n\\r\\nWe even have new docs and a video to go with it. Check it out!\xa0\\r\\n\\r\\n### Additional Features\\r\\n\\r\\n- Added new\xa0**Ultra Blockchain Service**\xa0for our\xa0[Ultra.io](http://ultra.io/)\xa0partner\\r\\n- **Auto-Delete Users** \\\\- we are finally introducing the Auto Deletion service that we teased way back in brainCloud 4.5.5! (Hey - we\u2019ve been busy!\xa0\ud83d\ude42\xa0) Anyway, this service allows your app to automatically delete users who haven\u2019t logged in for a given period of time (e.g. 1 year) - with useful exceptions, like folks who have monetized, reached a certain level, etc. You can even choose to save a backup of a deleted user for X days. Deleting dormant users saves data and speeds up your app - and saves you $$$ as well!\\r\\n- **Backup Deleted Users for X days.**\xa0If you enable the Auto-Delete feature (above), you also get the benefit of backing up deleted users for X days when they are deleted via the `playerState.Delete()` method as well.\\r\\n- Improved **caching** of **AppStore** product items\\r\\n- Updated **Facebook Graph API** to version **10** (technically introduced earlier in a 4.10 patch)\\r\\n- Added missing **DELETE** (with query parm) APIs to **HTTPClient**\u2026\\r\\n- Added the missing\xa0_**SmartSwitch**_\xa0calls to the **Java library**.\\r\\n- Added the missing\xa0_**SaveDataHelper**_\xa0calls to the **Android C++** library.\\r\\n- The format of individual **User Exports** have been updated:\\r\\n    - new\xa0appId,\xa0profileId\xa0and\xa0time\xa0fields added to the top-level of the export for easy searching\\r\\n    - gameId\xa0/\xa0appId\xa0and\xa0playerId\xa0/\xa0ownerId\xa0fields removed from sub-data components (redundant)\\r\\n    - now excluding the following data:\xa0playerActivty,\xa0groups\xa0(we still export the list of groups the player was a member of, just not the data of the groups themselves),\xa0sentEvent,\xa0matchedOwned,\xa0matchHistory,\xa0playbackStreams\xa0and\xa0playbackStreamsTargetUser\\r\\n\\r\\n### Features for Private Licensees\\r\\n\\r\\nThe following features are of particular interest to customers who are licensing private instances of brainCloud:\\r\\n\\r\\n- SSO status of Team Members now shown in the\xa0**Super | Manage | Users**\xa0and\xa0**Team | Manage | Members**\xa0pages.\\r\\n- To better support private licensees moving to SSO, both the\xa0**Unity Plug-in**\xa0and our\xa0**TeamAdmin APIs**\xa0now support\xa0**Builder API Keys**\xa0as passwords. This behaviour is controlled by the new\xa0portalSSOTeamAdminAPI\xa0brainCloud property.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe have made a few tweaks for 4.11... (though admittedly most of our web efforts are directed at Portal-X, the next-generation portal for brainCloud 5\u2026)\\r\\n\\r\\n### Design\\r\\n\\r\\n- **Cloud Data | Custom Entities**\\r\\n    - Custom index Keys JSON is now properly pretty-printed\\r\\n- **Integrations | Blockchain**\\r\\n    - Added support for the Ultra Blockchain Service (for customers on our\xa0[Ultra.io](http://ultra.io/)\xa0licensee\u2019s platform)\\r\\n- **Marketplace | Redemption Codes**\\r\\n    - Redemption Code type screen updated to support linking in a\xa0_custom Redemption Script_\xa0for automating the redemption process.\\r\\n    - Added a Generate Codes function to allow for easy generation of codes in several formats.\\r\\n\\r\\n### Monitoring\\r\\n\\r\\n- **Global Monitoring | Recent Errors**\\r\\n    - Added a Host Name field to error logs - convenient for tracking down certain errors\\r\\n- **Global Monitoring | Redemption Codes**\\r\\n    - Updated the Redemption Code monitoring screen to support the new asynchronous processing states.\\r\\n- **User Monitoring | User Summary**\\r\\n    - Updated the Select User search screen to support Ultra ID lookup\\r\\n\\r\\n### Reporting\\r\\n\\r\\n- **Reporting | API Errors**\\r\\n    - Fixed the error percentage calculations\xa0\\r\\n- **Reporting | API Usage**\\r\\n    - Hosting Hours now only shows two digits after the decimal place\\r\\n\\r\\n### Team\\r\\n\\r\\n- **Manage | Members**\\r\\n    - A Team Members SSO status will be shown in private licensee deployments that support SSO.\\r\\n\\r\\n### Super (private licensees only)\\r\\n\\r\\n- **Manage | Users**\\r\\n    - A Team Member\u2019s SSO status will be shown in private licensee deployments that support SSO.\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the brainCloud API:\\r\\n\\r\\n- **AppStore**\\r\\n    - `VerifyPurchase()`\xa0- we are now bubbling up more errors from the\xa0transactionResultCode\xa0up to the overall\xa0resultCode. (Basically, everything except for\xa0`RESULT_FAILED_ALREADY_PROCESSED`\xa0should bubble up). You still want to check the individual transaction details for receipts with multiple transactions, including ensuring that\xa0`processedCount`\xa0> 0.\xa0\\r\\n- **BlockChain**\\r\\n    - Added methods to support minting NFTs (from Redemption Codes) on a Blockchain service. These methods are\xa0`MintNFTFromRedemptionCode()`\xa0, which of course starts the minting process, and\xa0`GetTransaction()`\xa0- which checks the status of a minting operation.\\r\\n- **CustomEntity**\\r\\n    - Reminder that we added\xa0`UpdateEntityFieldsSharded()`\xa0and\xa0`SysUpdateEntityFieldsSharded()`\xa0as a patch in 4.10. It is important to use these variants of the `UpdateEntityFields()` call if you plan to shard your Custom Entity collections <- which is recommended for large collections for best performance. (Ask a support tech to shard the collections for you!)\\r\\n    - Also a reminder that\xa0`GetEntityPage()`\xa0and\xa0`GetEntityPageOffset()`\xa0have been enhanced to allow devs to specify whether they want the queries to accommodate entities not owned by the current player. There is a related compatibility flag that all apps should have set to\xa0`disabled`\xa0- unless you have a specific reason to enable it. More info here:\xa0[https://getbraincloud.com/apidocs/custom-entity-getentitypage-improvement/](/release/2022/04/26/custom-entity-getentitypage-improvement/)\\r\\n- **HTTPClient**\\r\\n    - Added query string support to all relevant HTTP methods that were missing it - including\xa0`PostMultipartResponseJson()`,\xa0`PostJsonOffboard()`,\xa0`PatchJsonResponseJson()`,\xa0`PatchTextResponseText()`,\xa0`Delete()`\xa0and\xa0`DeleteJsonResponseJson()`\\r\\n- **Leaderboard**\\r\\n    - `SysGetLeaderboardConfig()`\xa0response now includes, for division set leaderboards only, a new\xa0`createdAt`\xa0field, which is the date+time in millis when the instance leaderboard was created.\\r\\n- **PlayerState**\\r\\n    - `DeleteUser()` call will save a backup copy of the deleted user - if player backups are configured on the **Design | Core App Info | Auto-Delete Users** screen\\r\\n- **RedemptionCode**\\r\\n    - Added the following new methods:\xa0`GenerateCodes()`,\xa0`GenerateCodeInline()`\xa0and\xa0`ProcessAsynchronousResponse()`\\r\\n- **Tournaments**\\r\\n    - Added new Division Management API calls -\xa0`SysCreateDivisionSetConfig()`, `SysDeleteDivisionSetConfig()`, `SysEditDivisionSetConfig()`, `SysListDivisionSetConfigs()`, `SysReadDivisionSetConfigs()`\\r\\n    - `JoinDivision()`\xa0response now includes a\xa0`createdAt`\xa0field, which is the date+time in millis when the division set instance leaderboard was created\\r\\n- **User**\\r\\n    - The `optionsJson` parameter for `SysGetUserExport()` API now supports the ability to exclude specific custom entity collections\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All libraries have been updated with the latest API enhancements. Go get \'em!\\r\\n- Documentation updates\\r\\n    - All new APIs have been added to the API Reference.\\r\\n    - There\u2019s a new document and video for the Unity Authentication Example.\\r\\n- Important Fixes\\r\\n    - BCLOUD-2091 - Unity Error re: Runtime of websocket-native.jslib not being defined\\r\\n    - BCLOUD-1461 - Swart Switch calls are missing for Java\\r\\n    - BCLOUD-1718 - Reset Univeral ID API sholdn\u2019t throw a no session error\\r\\n    - BCLOUD-1562 - Treat a blank queue guard setting as \u201cany\u201d rather than \u201cstop\u201d\\r\\n    - BCLOUD-1631 - Return `TLS_VERSION_INVALID` for RTT connection attempts that don\u2019t meet TLS version requirements\\r\\n    - BCLOUD-1876 - Long-lived lobby instances are getting \u201cstuck\u201d\\r\\n    - BCLOUD-2077 - Gamification - XP Levels: Min Points validation is broken/unenforced when editing and existing XP level\\r\\n    - BCLOUD-1806 - Swapping between child/parent profiles in the Unlock dialog displays incorrect app name\\r\\n\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2022/06/13/updated-public-baas-nat-gateways","metadata":{"permalink":"/braincloud-apiref/release/2022/06/13/updated-public-baas-nat-gateways","source":"@site/release/2022-06-13-updated-public-baas-nat-gateways/index.md","title":"Updated Public BaaS NAT gateways","description":"Our DevOps team had to update brainCloud set of NAT gateways for brainCloud\'s Public BaaS (i.e. portal.braincloudservers.com). This only affects developers who have whitelisted these IPs for security purposes.","date":"2022-06-13T00:00:00.000Z","formattedDate":"June 13, 2022","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":0.255,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Updated Public BaaS NAT gateways","date":"2022-06-13","tags":["release-history"]},"prevItem":{"title":"Release 4.11 is live!","permalink":"/braincloud-apiref/release/2022/06/20/release-4-11"},"nextItem":{"title":"Custom Entity GetEntityPage Improvement","permalink":"/braincloud-apiref/release/2022/04/26/custom-entity-getentitypage-improvement"}},"content":"Our DevOps team had to update brainCloud set of NAT gateways for brainCloud\'s Public BaaS (i.e. portal.braincloudservers.com). This only affects developers who have whitelisted these IPs for security purposes.\\r\\n\\r\\nThe updated list of outgoing IPs is:\\r\\n\\r\\n- 204.236.224.149\\r\\n- 34.233.118.83\\r\\n- 54.152.153.10\\r\\n- 44.206.200.165\\r\\n\\r\\nApologies for the short notice and inconvenience."},{"id":"/2022/04/26/custom-entity-getentitypage-improvement","metadata":{"permalink":"/braincloud-apiref/release/2022/04/26/custom-entity-getentitypage-improvement","source":"@site/release/2022-04-26-custom-entity-getentitypage-improvement/index.md","title":"Custom Entity GetEntityPage Improvement","description":"The Challenge","date":"2022-04-26T00:00:00.000Z","formattedDate":"April 26, 2022","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":3.24,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Custom Entity GetEntityPage Improvement","date":"2022-04-26","tags":["release-history"]},"prevItem":{"title":"Updated Public BaaS NAT gateways","permalink":"/braincloud-apiref/release/2022/06/13/updated-public-baas-nat-gateways"},"nextItem":{"title":"Reminder: Plus Plan restrictions","permalink":"/braincloud-apiref/release/2022/04/04/reminder-plus-plan-restrictions"}},"content":"## The Challenge\\r\\n\\r\\nLast week we became aware of a potential issue when using `GetEntityPage()` with _owned_ entities.\\r\\n\\r\\nThe issue is related to how brainCloud handles ACL permissions. As you may or may not know, all entities in brainCloud support ACL permissions - and you can set the global accessibility of an object by setting the `acl.other` permission to one of the following:\\r\\n\\r\\n- 0 = no access\\r\\n- 1 = read-only access\\r\\n- 2 = read + write access\\r\\n\\r\\nIn loose terms, any object with `acl.other` != 0 is _shared with_ (or _accessible by_) all users of the app.\\r\\n\\r\\nThis has large implications when dealing with _Owned Custom Entities_ and the `GetEntityPage()` call - because by the previous default - the call would look for all entities that meet the search criteria that:\\r\\n\\r\\n- Are _owned_ by the current user\\r\\n- Are _accessible_ by the current user\\r\\n\\r\\n_Owned_ is simple - we simply add \\"ownerId\\": <profileId\\\\> to the query provided by the developer.\\r\\n\\r\\n_Accessible_ is not so simple - the database must look at all of the objects that the player doesn\'t own, and specifically examine each objects ACL to see if `acl.other` != `0` !!! **_This is incredibly slow, and exponentially so!_** _Especially since 99.9% of the time, a developer is only looking for the entities owned by the current user!_\\r\\n\\r\\n:::info\\r\\n\\r\\nNote - this issue does not affect _Unowned_ Custom Entities, `Sys` calls (which ignore permissions), or the _Singleton_ API (which assumes objects must be owned by the current user). It only affects `GetEntityPage()` and `GetEntityPageOffset()`.\\r\\n:::\\r\\n\\r\\n* * *\\r\\n\\r\\n## The Solution\\r\\n\\r\\nTo address this issue, we are changing to the default behaviour of \\\\``GetEntityPage()` so that it no longer considers shared entities (by default) for Owned Custom Entities.\\r\\n\\r\\nThus, a query with the following criteria will now only return objects that are owned by the current user:\\r\\n```js\\r\\n{\\r\\n  \\"pagination\\": {\\r\\n    \\"rowsPerPage\\": 50,\\r\\n    \\"pageNumber\\": 1\\r\\n  },\\r\\n  \\"searchCriteria\\": {\\r\\n    \\"data.position\\": \\"defense\\"\\r\\n  },\\r\\n  \\"sortCriteria\\": {\\r\\n  }\\r\\n}\\r\\n```\\r\\nGoing forward, if an app wants to modify this default behaviour to include accessible (i.e. shared) objects that are owned by other users - they can add the new `ownedOnly: false` option. For example:\\r\\n\\r\\n{\\r\\n  \\"pagination\\": {\\r\\n    \\"rowsPerPage\\": 50,\\r\\n    \\"pageNumber\\": 1\\r\\n  },\\r\\n  \\"searchCriteria\\": {\\r\\n    \\"data.position\\": \\"defense\\"\\r\\n  },\\r\\n  \\"sortCriteria\\": {\\r\\n  },\\r\\n  {\\r\\n  \\"options\\": {\\r\\n    \\"ownedOnly\\": false\\r\\n  }\\r\\n}\\r\\n\\r\\n:::tip\\r\\n\\r\\nNote also that your CustomEntity should include _Custom Indexes_ that include the `acl.other` field for efficient queries where `ownedOnly: false`.\\r\\n:::\\r\\n\\r\\n* * *\\r\\n\\r\\n## Compatibility Flag\\r\\n\\r\\nBecause this is a change to the previous brainCloud behaviour, we have introduced a new compatibility flag. When enabled, the following flag preserves the old functionality - where both objects owned and accessible by the user will be returned.\\r\\n\\r\\nThe new compatibility flag can be found in the **Design | Core App Info | Advanced Settings** page:\\r\\n\\r\\n_[ x ] Include shared objects in Owned Custom Entity GetEntityPage queries (warning: can be slow). Can be overwritten by specifying \'ownedOnly\' in query context \'options\'._\\r\\n\\r\\nWhen _enabled_, the default for `ownedOnly` is `false` - and when _disabled_, the default for `ownedOnly` is `true`.\\r\\n\\r\\n:::tip\\r\\n\\r\\nNote that this compatibility flag, like all compatibility flags, is **automatically enabled** for _existing_ apps (for backwards compatibility), and **disabled** for _new_ apps.\\r\\n:::\\r\\n* * *\\r\\n\\r\\nWe believe strongly that this new-and-improved GetEntityPage behaviour is the better + safer default - and thus _highly recommend_ that all developers whose _owned queries are only expecting objects owned by the current user_ go to this compatibility flag and immediately \\"uncheck\\" it to enable the new behaviour!\\r\\n\\r\\n_Remember - this option does not affect queries for Un-owned Custom Entities. It also does not affect Sys calls. So both of those scenarios will continue to return objects not owned by the current user - regardless of the compatibility setting._\\r\\n\\r\\nIf you have any questions - please reach out to the support team.\\r\\n\\r\\nCheers!"},{"id":"/2022/04/04/reminder-plus-plan-restrictions","metadata":{"permalink":"/braincloud-apiref/release/2022/04/04/reminder-plus-plan-restrictions","source":"@site/release/2022-04-04-reminder-plus-plan-restrictions/index.md","title":"Reminder: Plus Plan restrictions","description":"Note that basic RTT features are still available in the free Development plan. As before, Dev+ is only required for hosting and deep data features during development.","date":"2022-04-04T00:00:00.000Z","formattedDate":"April 4, 2022","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":1.52,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Reminder: Plus Plan restrictions","date":"2022-04-04","tags":["release-history"]},"prevItem":{"title":"Custom Entity GetEntityPage Improvement","permalink":"/braincloud-apiref/release/2022/04/26/custom-entity-getentitypage-improvement"},"nextItem":{"title":"Release 4.10 is live!","permalink":"/braincloud-apiref/release/2022/03/23/release-4-10"}},"content":":::caution\\r\\n\\r\\nNote that basic RTT features are still available in the free Development plan. As before, Dev+ is only required for _hosting_ and _deep data_ features during development.  \\r\\n  \\r\\nThese changes apply to apps using _Plus Plan_ features from the non-plus paid plans (i.e. **Standard** / **Lite** / **Business**).\\r\\n:::\\r\\nA quick reminder that usage of the following features have always required activation of a **Plus Plan** for live apps:\\r\\n\\r\\n- _RTT_ - used for Chat, Lobbies, Presence, etc\\r\\n- _Hosting_ - spinning up custom Room and Relay Servers\\r\\n- _Deep Data_ - used for Custom Entities and Messaging\\r\\n\\r\\nIn 4.9.5 (and earlier) there were scenarios where these restrictions were not being enforced.\\r\\n\\r\\nWe have addressed those scenarios in 4.10 - and as noted in the 4.10 release notes - we will enable the feature flag to begin properly enforcing these restrictions tomorrow - **_April 5th, 2022_** - at approximately 9am Eastern.\\r\\n\\r\\nStarting tomorrow, developers can expect that attempting to access these features (like enabling RTT, creating a custom entity, connecting to a chat channel, sending a message, etc.) without an active Plus Plan, will result in a run-time licensing error.\\r\\n\\r\\n![](images/2022-04-04_16-16-09-1024x408.png)\\r\\n\\r\\nTo quickly update your app to a plus plan, simply:\\r\\n\\r\\n- Navigate to **Team | Manage | Apps**\\r\\n- Select **Change Plan** from the action menu associated with the app\\r\\n- Click on the **Plus Plans** tab\\r\\n- **Choose** the plan to switch to\\r\\n- And click **[Choose Plan]**\\r\\n\\r\\n![](images/2022-04-04_16-24-44-249x300.png)\\r\\n\\r\\nbrainCloud will then swap your app to the new plan.\\r\\n\\r\\nNote that your charges will be adjusted automatically, with the first few days of April charged to the old plan, and the rest of the month charged to the new plan - with the live fees pro-rated accordingly.\\r\\n\\r\\nIf you have questions or issues, feel free to reach out via the support widget."},{"id":"/2022/03/23/release-4-10","metadata":{"permalink":"/braincloud-apiref/release/2022/03/23/release-4-10","source":"@site/release/2022-03-23-release-4-10/index.md","title":"Release 4.10 is live!","description":"brainCloud 4.10 adds new Security Options**_, an upgraded Cloud Code Engine, new _**Advanced Authentication calls, and more.","date":"2022-03-23T00:00:00.000Z","formattedDate":"March 23, 2022","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":12.15,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 4.10 is live!","date":"2022-03-23","tags":["release-history"]},"prevItem":{"title":"Reminder: Plus Plan restrictions","permalink":"/braincloud-apiref/release/2022/04/04/reminder-plus-plan-restrictions"},"nextItem":{"title":"brainCloud Atlas migration - Feb 22-23, 2022","permalink":"/braincloud-apiref/release/2022/02/11/braincloud-atlas-migration"}},"content":"brainCloud 4.10 adds new _**Security Options**_, an upgraded _**Cloud Code Engine**_, new _**Advanced Authentication**_ calls, and more.\\r\\n\\r\\n:::caution Compatibility\\r\\n\\r\\nAs always, brainCloud 4.10 aims to be 100% backwards compatible with previous releases. There are some changes/fixes that could affect existing apps:  \\r\\n  \\r\\n**Plus Plan Exclusive Feature Enforcement** - We have discovered that in some scenarios, **Plus Plan Features** (i.e. RTT, Chat, Messaging, Custom Entities, etc.), can be accessed by live apps that are not on an appropriate plan. Release 4.10 addresses this issue. We will be enabling _proper enforcement of Plus Plan restrictions_ starting **Tuesday, April 5th**. Please double-check that your app is on the correct plan before then!  \\r\\n  \\r\\n**Rhino 1.7.14** - there is a known breaking change in the new engine. It involves using the _java_\\\\-based (i.e. not _javascript_\\\\-based) `java.util.HashMap()`class from within a cloud code script. Our production searches indicate that no developers are using this class in production - and thus we are disabling support for that feature. But _just_ in case - we are still noting it here.  \\r\\n  \\r\\n**Group and Group Entity ACL changes** - there are fixes to how Groups and Group Entities handle ACL permissions, which may affect existing applications. To be safe, we have added a compatibility flag, \u201c[x] Preserve legacy GroupEntity / Group ACL defect behaviour\u201d, that preserves the old behaviour for existing apps by default.\\r\\n:::\\r\\n## Release Highlights\\r\\n\\r\\n### TLS Security Enforcement\\r\\n\\r\\nWe are hardening the security of our Public BaaS environment to enforce **TLS 1.2** for all APIs.\\r\\n\\r\\n:::note Background\\r\\n\\r\\nUp until now, we have accepted TLS 1.0 and 1.1 for API calls to ensure maximum compatibility for older apps. TLS 1.2 is well established now though, and we risk more by allowing 1.0 and 1.1 than we gain in backwards compatibility keeping them. Apologies to those devs that may be affected - but we must all march forward!\\r\\n:::\\r\\nTo facilitate a manageable transition - we have added an additional API endpoint to our public BaaS. So our public BaaS now supports:\\r\\n\\r\\n- `api.braincloudservers.com` - our new API endpoint that supports TLS 1.2 only\u2026 (we will further upgrade it to support TLS 1.3 as well when AWS supports it)\\r\\n- `sharedprod.braincloudservers.com` - this is our legacy endpoint that currently supports TLS 1.0, 1.1 and 1.2. This URL will be re-targeted to the same endpoint as `api.braincloudservers.com` starting **June 7, 2022** \u2190 approximately 90 days from now.\\r\\n\\r\\nNote that other than the version of TLS enforced, these two endpoints function exactly the same. Your apps and players will not see any difference!\\r\\n\\r\\nOur 4.10 client libraries have all been updated to use `api.braincloudservers.com` as the new default `serverUrl` for API calls. If you are using an older library, you can simply specify `\\"https://api.braincloudservers.com/dispatcherv2\\"` for the `serverUrl` parameter of the wrapper `Initialize()` call - see [API Reference](http://getbraincloud.com/api/wrapper/initialize).\\r\\n\\r\\nOnce your app is calling the new endpoint, you can then go to the new **Design | Core App Info | Security** page, and set the minimum API TLS to 1.2. Careful though - this will mean that any calls to the older API endpoint (`sharedprod.braincloudservers.com`) will be rejected! \u2190 because brainCloud cannot otherwise ensure that they were at least TLS 1.2.\\r\\n\\r\\n![](images/2022-03-07_09-54-04-1024x535.png)\\r\\n\\r\\nNote that our RTT websocket endpoint is already enforcing a minimum TLS of 1.2. The raw TCP version of RTT however, which is used only for clients that cannot support WebSockets, is not encrypted. Setting _Minimum RTT TLS Version_ to 1.2 thus disables the raw TCP connection option for your app. Note that both Unity and Unreal clients use the encrypted websocket implementation by default - so removing this option does not affect 99% of apps.\\r\\n\\r\\n:::info\\r\\n\\r\\nNote - S2S and Builder APIs are also available via the new `api.braincloudservers.com` endpoint. It is recommended that all devs move to these endpoints at their earliest convenience.\\r\\n:::\\r\\n:::warning\\r\\n\\r\\nOlder libraries - Our tests indicate that our older libraries should support TLS 1.2 - but we haven\u2019t been able to exhaustively test across all client platforms. As always, it is recommended that developers keep pace with the latest brainCloud libraries for maximum performance and reliability.\\r\\n:::\\r\\n#### Migration options\\r\\n\\r\\nIn summary, brainCloud 4.10 allows developers to bump up the minimum level of TLS for client APIs. Developers have two options on how they would like to migrate:\\r\\n\\r\\n1. **Do nothing** \\\\- If you do nothing, your app will automatically be upgraded to TLS 1.2 starting on **June 7, 2022** when `sharedprod.braincloudservers.com` merges with `api.braincloudservers.com` and begins enforcing a minimum TLS of 1.2.\\r\\n2. **Migrate early** - For developers wanting to improve their app security now, the new API and security settings provide the means to de-risk and accelerate the migration \u2013 which is definitely convenient for devs maybe going through Facebook\u2019s Privacy Checklists for example. The recommended approach is:\\r\\n    1. Reconfigure your app to talk to `api.braincloudservers.com` - either by updating to the 4.10 libs - or overriding the `serverUrl` parameter in wrapper `Initialize()`.\\r\\n    2. Confirm that your app works just fine\\r\\n    3. Release the updated build of your app - so that you can get the majority of your player base migrated over\\r\\n    4. Set the minimum client version of your app to force upgrades for any stragglers.\\r\\n    5. Adjust the TLS settings of your app to require TLS 1.2. You are done!\\r\\n\\r\\n:::tip\\r\\n\\r\\nOne final note - the\xa0`api.braincloudservers.com`\xa0endpoint is actually ready now -\xa0_before_\xa0the official 4.10 release. So you don\u2019t have to wait to start migrating your apps to the more secure endpoint. _Start today!_\\r\\n:::\\r\\n### Cloud Code Engine Upgrade\\r\\n\\r\\nWe have upgraded the Mozilla Rhino Engine from 1.7.13 \u2192\xa0[1.7.14](https://github.com/mozilla/rhino/releases/tag/Rhino1_7_14_Release).\\r\\n\\r\\nThis brings with it support for the following Javascript features:\\r\\n\\r\\n- Template Literals!\\r\\n- Promise Support (Requires app to be set to ES6)\\r\\n- Error stack traces!\\r\\n\\r\\nAnd more!\\r\\n\\r\\nFor the full details, see the\xa0[Rhino 1.7.14 Release Notes](https://github.com/mozilla/rhino/releases/tag/Rhino1_7_14_Release).\\r\\n\\r\\n### Advanced Authentication\\r\\n\\r\\nDevelopers of certain categories of apps have long asked for the ability to register a new user, and set default attributes, etc. for that user during the initial Authentication call. This is not possible with the existing Authentication calls \u2013 so we have added a new set of calls to satisfy this use case.\xa0\\r\\n\\r\\nThe new\xa0`AuthenticateAdvanced()`\xa0call allows the developer to include an\xa0extraJson\xa0payload with the authentication call, which can then be picked up by pre- or post- API hooks for additional processing as the account is created.\\r\\n\\r\\nNote that for simplicity, all authentication types are handled by the single\xa0`AuthenticateAdvanced()`\xa0call - similar to how the API Explorer works\u2026 Corresponding\xa0`Merge()`\xa0and\xa0`Detach()`\xa0calls have been added to the `Identity` service as well.\\r\\n\\r\\n### Group and Group Entity Enhancements\\r\\n\\r\\nWe have done a full review of our Group and Group Entity code, and found some areas that warranted improvements. The following changes/fixes have been made:\\r\\n\\r\\n- **Improved handling of ACL permissions**\xa0- In particular, some `GroupEntity` operations were being gated via the Group ACL instead of the Group Entity ACL! Note that there is a\xa0_compatibility flag_\xa0to preserve the old behaviour.\\r\\n- **Improved concurrency handling** \\\\- we have improved the locking of several key methods - including managing group membership.\\r\\n- **Added missing Group \u201cSys\u201d API call**\xa0- Added Sys implementation for\xa0`SysRemoveGroupMember()`\\r\\n- **New** `SysGetRandomGroupsMatching()`\xa0**call**\xa0- this is a more useful implementation of the\xa0`GetRandomGroupsMatching()`\xa0call - which is hampered by ACL permissions not allowing the API to return full details of groups that the user is not a member of. We would recommend that in most use cases, it is more correct to use\xa0`SysGetRandomGroupsMatching()`\xa0than\xa0`GetRandomGroupsMatching()`\xa0- though like all\xa0Sys\xa0calls,\xa0`SysGetRandomGroupsMatching()`\xa0is not available directly via the client API - so you\u2019ll need to call it via a cloud code script.\\r\\n- **Updated**\xa0`ReadGroupMembers()`\xa0and\xa0`SysReadGroupMembers()`\xa0calls to return a user\u2019s\xa0`summaryFriendData`\\r\\n\\r\\n### Additional Features\\r\\n\\r\\n- _**Unreal Relay communications**_\xa0- we have completely re-written Unreal relay communications for this release. In addition, we have created an Unreal-based Relay Tester app to demonstrate the usage of the relay server APIs.\\r\\n- _**Improved credential checks**_\xa0- we have added improved versions of\xa0`getProfileInfoForCredential()`\xa0and\xa0`getProfileInfoForExternalAuth()`\xa0that don\u2019t unnecessarily log an error if the credential isn\u2019t found. This is handy for use cases where a credential not being found is normal - and isn\u2019t worth flagging as an error in the logs. The new methods are:\xa0 `getProfileInfoForCredentialIfExists()`\xa0and\xa0`getProfileInfoForExternalAuthIfExists()`\\r\\n- **Faster file deployments**\xa0- brainCloud will now copy multiple files in parallel during app deployments. This should have a noticeable reduction in deployment times for some apps.\\r\\n- **Ultra authentication**\xa0- brainCloud APIs now support user authentication for apps on the\xa0[Ultra.io](http://ultra.io/)\xa0platform.\xa0\\r\\n- **Unity Chat**\xa0- a new Unity Chat example app has been created. You can find the source for it here:  \\r\\n    [https://github.com/getbraincloud/examples-unity/tree/develop/BC-Chat](https://github.com/getbraincloud/examples-unity/tree/develop/BC-Chat)\\r\\n- **Unreal Relay Test**\xa0- a new Unreal Relay Test example app has been created. You can find the source for it here:  \\r\\n    [https://github.com/getbraincloud/examples-unreal/tree/master/RelayTestApp](https://github.com/getbraincloud/examples-unreal/tree/master/RelayTestApp)\\r\\n\\r\\n### Plus 4.9.5 Patch items\\r\\n\\r\\nThe following additions were technically included in 4.9.5 patches - but are described here for completeness:\\r\\n\\r\\n- _**Illegal file types**_\xa0- Developers are no longer allowed to upload certain file types. Currently disallowed extensions are:\xa0html,htm,jsp,php,bat,cmd,exe,js,pif,ps1,scr,vb,vbe,vbs\\r\\n- `SysUpdateEntityFieldSharded()` **call**\xa0- added new\xa0`SysUpdateEntityFieldSharded()`\xa0call for use with sharded Custom Entity Collections. This is because the existing\xa0`SysUpdateEntityField()`\xa0will not work for owned custom entities once sharded.\\r\\n- _**Improved Room and Relay Servers**_\xa0- improved handling for long-lived lobbies with join-in-progress servers.\\r\\n- _**Improved RTT connection handling**_\xa0- improved handling of RTT connection disconnects.\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe have made the following portal changes:\\r\\n\\r\\n### Design\xa0\\r\\n\\r\\n- **Core App Info | Advanced Settings**\\r\\n    - Added a new compatibility flag to preserve the old (and incorrect) GroupEntity / Group ACL behaviour. By default this flag is enabled for existing apps - but it is recommended that devs review their apps and clear this flag when possible.\\r\\n- **Core App Info | Security**\\r\\n    - This new screen allows devs to customize the security settings of their apps. For more information, see the _TLS Security Enhancements_ section above.\\r\\n\\r\\n### Monitoring\\r\\n\\r\\n- **Global Monitoring | Custom Entities**\\r\\n    - Improved performance when showing all entities for a custom entity collection with tons of entities.\\r\\n- **Global Monitoring | Recent Errors**\\r\\n    - Fixed an issue that would cause logs to show the wrong relative date in certain timezone situations.\\r\\n\\r\\n### Reports\\r\\n\\r\\n- **Reporting | Analytics**\\r\\n    - The _Dormant Users_ statistics table has been updated.\\r\\n- **Reporting | API Usage**\\r\\n    - Fixed an issue displaying usage stats for games with > 2.1 Billion game sessions.\\r\\n\\r\\n### **General**\\r\\n\\r\\n- _**Unlocking apps**_\xa0- Unlocking a live app (via the\xa0_Live Lock Banner_) now requires the developer to type the\xa0**name**\xa0of the app, not the developer\'s **password**. This is more in tune with the original design intent for the banner (which was to ensure the developer is aware of which particular version of their app (production, development, etc.) is being changed) - and interacts better with the PortalSSO integrations of private licensee\u2019s brainCloud instances.\\r\\n\\r\\n![](images/2022-03-07_09-44-23-1024x265.png)\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the\xa0brainCloud\xa0API:\\r\\n\\r\\n- **Authentication**\\r\\n    - New `AuthenticateAdvanced()` call that allows `extraJson` payload to be included with player authentication / registration\\r\\n    - New `AuthenticateUltra()` call allows apps to authenticate with the [Ultra.io](http://ultra.io/) platform\\r\\n- **Custom Entity**\\r\\n    - New methods `UpdateEntityFieldsSharded()` and `SysUpdateEntityFieldsSharded()` are sharding-safe implementations of the older `UpdateEntityFields()` and `SysUpdateEntityFields()` methods. The non-sharded versions of these methods are now recommended only for custom entity collections that you know you will never want to shard in the future (i.e. small, probably static collections).\\r\\n- **Friend**\\r\\n    - The new `getProfileInfoForCredentialIfExists()` and `getProfileInfoForExternalAuthIfExists()` methods behave just like `getProfileInfoForCredential()` and `getProfileInfoForExternalAuth()` respectively - except that they don\u2019t log errors if the credentials don\u2019t exist. Handy and cleaner for many use cases.\\r\\n- **Group**\\r\\n    - New `SysGetRandomGroupsMatching()` call is a more convenient version of `GetRandomGroupsMatching()` - which eliminates the need to give read-only access to \u201cother\u201d users.\\r\\n    - Added new S2S + cloud code only method: `SysRemoveGroupMember()`\\r\\n    - Updated `ReadGroupMembers()` and `SysReadGroupMembers()` to return a user\u2019s `summaryFriendData`\\r\\n    - Improved concurrency handling\\r\\n    - Improved handling of ACL permissions; behaviour changes are gated by a new compatibility flag.\\r\\n- **Group Entity**\\r\\n    - Improved concurrency handling\\r\\n    - Improved handling of ACL permissions; behaviour changes are gated by a new compatibility flag..\\r\\n- **Identity**\\r\\n    - New _cloud code only_ `GetIdentityData()` call allows apps to retrieve additional information regarding a specific player identity. Currently only supported for the new Ultra authentication.\\r\\n    - New _Advanced_ identity methods: `AttachAdvancedIdentity()`, `DetachAdvancedIdentity()`, `MergeAdvancedIdentity()`\\r\\n    - New Ultra identity methods: `AttachUltraIdentity()`, `DetachUltraIdentity()`, `MergeUltraIdentity()`\\r\\n- **RTT**\\r\\n    - `EnableRTT()` now fails if the app\u2019s plan does not support RTT. Note that this is a server-side check, and is not limited to the 4.10 client library.\\r\\n\\r\\nWe have attached warnings in the API docs to the following methods:\\r\\n\\r\\n- **Custom Entity**\\r\\n    - `UpdateEntityFields()` and `SysUpdateEntityFields()` - These methods are not sharding safe - and thus are not recommended for custom entities that you may want to shard for greater performance and scalability in the future. Consider using `UpdateEntityFieldsSharded()` and `SysUpdateEntityFieldsSharded()` instead.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All libraries have been updated with the new `serverUrl` and the latest APIs. Go get \'em!\\r\\n- Documentation updates\\r\\n    - API reference has been updated with the latest API changes.\\r\\n- Important Fixes\\r\\n    - [BCLOUD-1508] Fix for broken RTT disconnects\\r\\n    - [BCLOUD-1508] Fix for broken RTT disconnects\\r\\n    - [BCLOUD-1565] Dormant User Analytics changes: Users now only considered dormant if inactive > 365 days\\r\\n    - [BCLOUD-1534] [Fixed] Can\'t turn off Facebook Limited Login Friends once turned on\\r\\n    - [BCLOUD-1530] [Fixed] Design Portal Error log entry displayed date is not accurate\\r\\n    - [BCLOUD-1378] Add missing API Hooks for RedemptionCode service\\r\\n    - [BCLOUD-266] [Fixed] RTT DISCONNECT message not passed to the user\\r\\n    - [BCLOUD-35] [Fixed] Relay C++ UDP ping sent before CONNECT\\r\\n    - [BCLOUD-1535] Add missing Sys Group API (SysRemoveGroupMember)\\r\\n    - [BCLOUD-1525] ItemCatalog service missing some cloud code SYS calls\\r\\n    - [BCLOUD-1298] [BuilderAPI] Fixed NPE when request does not contain a content-type\\r\\n    - [BCLOUD-1531] Improved error message (and logic) for launching hosted servers when a region is not supported\\r\\n    - [BCLOUD-1515] [Fixed] Apps with billing plans with RTT disabled should not be able to send chat messages or make rtt connections\\r\\n    - [BCLOUD-1587] [Fixed] Group has two members having role of OWNER\\r\\n    - [BCLOUD-1387] [Fixed] User Monitoring - Login as User should set user\u2019s languageCode and countryCode on created PlayerSession\\r\\n    - [BCLOUD-1394] Return Catalog Item Definition name and/or description in app\'s default language if none for user\'s language for User Item with metadata flagged true\\r\\n    - [BCLOUD-1393] Added missing support for getRunningOrQueuedCloudScripts Sys API on ScriptS2SServiceProxy\\r\\n    - [BCLOUD-1331] Group APIs for Group Entity should enforce Group Entity ACL, not Group ACL\\r\\n    - [BCLOUD-1331] Speed up SysIncrementGroupEntityData and SysUpdateGroupEntityData calls by avoiding Group lookup (only required for the equivalent non-Sys calls)\\r\\n    - [BCLOUD-1402] [Fixed] Messaging Sys APIs not allowing version -1 for any version\\r\\n\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2022/02/11/braincloud-atlas-migration","metadata":{"permalink":"/braincloud-apiref/release/2022/02/11/braincloud-atlas-migration","source":"@site/release/2022-02-11-braincloud-atlas-migration/index.md","title":"brainCloud Atlas migration - Feb 22-23, 2022","description":"Warning","date":"2022-02-11T00:00:00.000Z","formattedDate":"February 11, 2022","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":4.975,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"brainCloud Atlas migration - Feb 22-23, 2022","date":"2022-02-11","tags":["release-history"]},"prevItem":{"title":"Release 4.10 is live!","permalink":"/braincloud-apiref/release/2022/03/23/release-4-10"},"nextItem":{"title":"brainCloud and log4shell (CVE-2021-44228)","permalink":"/braincloud-apiref/release/2021/12/14/braincloud-and-log4shell-cve-2021-44228"}},"content":"Warning\\r\\n\\r\\ntl;dr Developers will be unable to **deploy** or **import/export** application changes from **Feb 22, 2022** at **11am Eastern** until **Feb 23, 2022** at **11am Eastern**.  \\r\\n  \\r\\n_See remainder of announcement for additional restrictions._\\r\\n\\r\\n## Background\\r\\n\\r\\nOn **February 22nd** and **23rd**, we will be migrating brainCloud\'s core database cluster from VM-hosted MongoDB instances to MongoDB\'s Atlas service.\\r\\n\\r\\nThis is a live migration - intended to accomplish the migration of all app and player data - with minimal service interruption.\\r\\n\\r\\n## Player-visible Service Impacts\\r\\n\\r\\nDepending upon the features your app uses, the following service impacts may be noticeable by your players:\\r\\n\\r\\n- **Lobbies and Hosted Servers delays** - lobby processing and launching of hosted servers will experience some performance delays during the cut-over period. We hope to keep this period of reduced performance to ~10-20 minutes -- between the hours of **05:00** and **07:00 Eastern** on **Feb 23, 2022**.\\r\\n- **Delayed Push notifications** - new push notification jobs started during the cut-over period may experience delays\\r\\n- **Scheduled Jobs** - scheduled cloud code jobs may experience small delays during the initial cut-over period.\\r\\n- **Stale Segments** \\\\- The nightly **Segment Refresh** job will not run the night of **Feb 22, 2022**. This could mean that a player that newly qualifies for a segment wouldn\'t be considered part of it - for a segment targeted Push Notification run, for example. Note that an individual player\'s segments **will** still refresh when they log in -- so any Store pricing shown to players will still accurately reflect any applicable promotions.\\r\\n\\r\\n## Temporary Restrictions\\r\\n\\r\\nFor data integrity reasons, **we cannot allow any changes to the database schema** (i.e. new/removed collections or indexes) during the migration period - so certain brainCloud features will be disabled. We also need to disable (i.e. temporarily remove) all TTL (Time To Live) indexes -- so certain objects will stick around past their normal expiry periods.\\r\\n\\r\\nThese restrictions translate to the following brainCloud limitations:\\r\\n\\r\\n- For safety, we will also be **disabling** the ability to **Deploy** or **Import/Export** apps during the entire migration period.\\r\\n- If **creating a new app** in brainCloud, the **leaderboard collection for that app will not be created** (until after the migration period)\\r\\n- If introducing support for leaderboards in your app for the first time, posting scores will not be supported until after the migration\\r\\n- **TTL indexes** for all core and custom collections (i.e. Custom Entities, Messages, etc.) **will be removed**. This means that some objects may stick around for up to one day later than they otherwise would\\r\\n- Developers will **not** be able to create new **Custom Entity** collections.\\r\\n- Developers will also **not** be able to create new **Indexes** on **Custom Entity** collections\\r\\n- If Messaging is newly enabled for an app, messages cannot be sent until after the migration\\r\\n\\r\\nThus, the following screens in the Design Portal will be disabled during the migration period:\\r\\n\\r\\n- **Design | Core App Info | Admin**\\r\\n- **Design | Cloud Data | Custom Entities**\\r\\n\\r\\nAlso - to ease the amount of data changes to migrate, we will be disabling **Segment Processing** for the night of **Feb 22nd** only.\\r\\n\\r\\n## Detailed Schedule\\r\\n\\r\\nThe planned schedule for the migration is as follows. Interim times are intentionally conservative. If the migration is proceeding well, some steps will happen earlier than stated here.\\r\\n\\r\\n- Feb 22 11:00 Eastern - Start migration prep\\r\\n    - Notify developers (via banner) that migration is starting\\r\\n    - Disable collection creation\\r\\n    - Disable the **Admin Tools** and **Custom Entities** design screens\\r\\n    - Disable Segment Processing\\r\\n    - Prep the source database cluster (i.e. disable balancer and remove TTL indexes)\\r\\n- Feb 22 13:00 Eastern - Start bulk migration\\r\\n    - The background bulk copy processes will begin\\r\\n- Feb 22 22:00 Eastern - Start sync\\r\\n    - The bulk migration should be complete\\r\\n    - The system now goes into sync mode - syncing oplog changes in realtime between the old and new clusters. Note that it will take several hours for the new clusters to catch up to the latest changes being applied to the old clusters\\r\\n- Feb 23 04:00 Eastern - Validate data + indexes\\r\\n    - Validate the results of the migration. May involve rebuilding key indexes\\r\\n- Feb 23 06:00 Eastern - Start cut-over\\r\\n    - Cut-over the brainCloud servers from the old database to the new database.\\r\\n    - Certain background processes will be scaled down during the cut-over. This will delay the processing of certain background tasks, like scheduled jobs, push notifications, etc. Those jobs will be processed once the servers spin back up on the new cluster.\\r\\n- Feb 23 09:00 - Finalize migration\\r\\n    \\r\\n    - Validate health of all processes\\r\\n    - Disable sync process\\r\\n    \\r\\n    - Re-enable balancer and re-add TTL Indexes\\r\\n- Feb 23 11:00 - Migration complete\\r\\n    - Re-enable collection creation\\r\\n    - Re-enable brainCloud screens\\r\\n    - Re-enable Segment processing\\r\\n    - Remove banner\\r\\n\\r\\n* * *\\r\\n\\r\\n## FAQ (Frequenty Asked Questions)\\r\\n\\r\\n#### Why is brainCloud moving to MongoDB Atlas?\\r\\n\\r\\nMoving to Atlas will offload the low-level server and software maintenance responsibilities from brainCloud DevOps personnel. It means less work keeping the servers secure, up-to-date and running properly - but also means that performing common operations like software upgrades, vertical and horizontal scaleouts, etc. are all handled automatically.\\r\\n\\r\\nThere are also benefits to monitoring the performance of the database -- and a recommendations engine that brainCloud is considering leveraging for future Custom Entity enhancements.\\r\\n\\r\\n#### Will my players or developers notice any changes once the system is running on Atlas?\\r\\n\\r\\nNo.\\r\\n\\r\\n#### Will my players or developers notice any changes during the migration to Atlas?\\r\\n\\r\\nP_otentially. See the Player Visible Service Impacts section above._\\r\\n\\r\\n#### What if something goes massively wrong during migration?\\r\\n\\r\\nIf the migration appears compromised in any way, we will abort. The database will remain on the existing servers - and we will reschedule the migration for a future date.\\r\\n\\r\\nInformation\\r\\n\\r\\nIf you have further questions or concerns, please reach out to brainCloud Support via the chat widget."},{"id":"/2021/12/14/braincloud-and-log4shell-cve-2021-44228","metadata":{"permalink":"/braincloud-apiref/release/2021/12/14/braincloud-and-log4shell-cve-2021-44228","source":"@site/release/2021-12-14-braincloud-and-log4shell-cve-2021-44228/index.md","title":"brainCloud and log4shell (CVE-2021-44228)","description":"As you are likely aware, a serious vulnerability has been discovered in Apache Log4J 2, a very popular logging library for Java services. This attack is informally referred to as log4shell, presumably due to the way it allows an attacker to make privileged JNDI calls via the logging of simple input data from an API or web form.","date":"2021-12-14T00:00:00.000Z","formattedDate":"December 14, 2021","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":0.975,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"brainCloud and log4shell (CVE-2021-44228)","date":"2021-12-14","tags":["release-history"]},"prevItem":{"title":"brainCloud Atlas migration - Feb 22-23, 2022","permalink":"/braincloud-apiref/release/2022/02/11/braincloud-atlas-migration"},"nextItem":{"title":"brainCloud 4.9.5 is live!","permalink":"/braincloud-apiref/release/2021/11/30/braincloud-4-9-5"}},"content":"As you are likely aware, a serious [vulnerability](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44228) has been discovered in [Apache Log4J 2](https://logging.apache.org/log4j/2.x/), a very popular logging library for Java services. This attack is informally referred to as **log4shell**, presumably due to the way it allows an attacker to make privileged JNDI calls via the logging of simple input data from an API or web form.\\r\\n\\r\\nWe are pleased to report that brainCloud\'s Production Services are unaffected by this vulnerability - and that we have further patched our services to completely eliminate any future risk of attack.\\r\\n\\r\\nMore specifically:\\r\\n\\r\\n- brainCloud\'s API and Portal services do not use Log4J 2 - and are thus not affected by log4shell.\\r\\n- Some secondary Datastream and RTT services _do_ use Log4J 2 - but these services do not log raw input data in our Production configuration - and thus, once again - are not affected by log4shell.\\r\\n- To completely eliminate any future risk of exposure, we have now patched all services that use Log4J 2 to version 2.16.0, which disables the compromisable functionality.\\r\\n\\r\\nThe security of your apps and user data is of utmost importance to us. Thank you for trusting your business to brainCloud!"},{"id":"/2021/11/30/braincloud-4-9-5","metadata":{"permalink":"/braincloud-apiref/release/2021/11/30/braincloud-4-9-5","source":"@site/release/2021-11-30-braincloud-4-9-5/index.md","title":"brainCloud 4.9.5 is live!","description":"brainCloud 4.9.5 is the last release of 2021, and targets a few key customer requests and performance and reliability improvements.","date":"2021-11-30T00:00:00.000Z","formattedDate":"November 30, 2021","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":2.21,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"brainCloud 4.9.5 is live!","date":"2021-11-30","tags":["release-history"]},"prevItem":{"title":"brainCloud and log4shell (CVE-2021-44228)","permalink":"/braincloud-apiref/release/2021/12/14/braincloud-and-log4shell-cve-2021-44228"},"nextItem":{"title":"brainCloud 4.9 is live!","permalink":"/braincloud-apiref/release/2021/10/12/release-4-9"}},"content":"brainCloud 4.9.5 is the last release of 2021, and targets a few key customer requests and performance and reliability improvements.\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Profanity Check Improvements\\r\\n\\r\\nWe have improved the built-in filtering of our **WebPurify** integration - so that devs can now choose to filter a user\u2019s **chat messages**, and updates to their **name**, by their own language only (instead of against all configured languages).\\r\\n\\r\\nYou will find the new options:\\r\\n\\r\\n- on the **Design | Integration | Manage Integrations** screen for the player name settings\\r\\n\\r\\n![](images/2021-11-25_22-15-03-1024x401.png)\\r\\n\\r\\n- on the **Design | Messaging | Chat** screen for the chat message settings\\r\\n\\r\\n![](images/2021-11-25_22-20-59.png)\\r\\n\\r\\n### Additional improvements\\r\\n\\r\\n- _**Async Match improvements**_ - Deleting a player will now automatically _**abandon**_ any asynchronous matches that they have in progress\\r\\n- _**Entity call improvements**_ - added a new `_serverTime` field to the JSON responses of most get entity calls \u2013 as a convenience to client devs\\r\\n- _**Friend service improvements**_ - more reliable retrieval of friend data across multiple social platforms \u2190 a failure to retrieve friends from one service will no longer abort retrieving from the remaining services.\\r\\n- _**Leaderboard rotation improvements**_ - Improvements to concurrency handling during Leaderboard rotations and Tournament processing\\r\\n- _**Lobby matchmaking**_ - improved matchmaking performance under heavy loads\\r\\n- _**User batch processing**_ - improved handling of larger data bundles during batch processing\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe\'ve made the following portal improvements:\\r\\n\\r\\n### Design Section\\r\\n\\r\\n- **Integrations | Manage Integrations**\\r\\n    - WebPurify - Added new options for improved targeting of languages for name profanity checks\\r\\n- **Multiplayer | Chat**\\r\\n    - Added new options for improved targeting of languages during chat profanity checks\\r\\n- **General**\\r\\n    - Adjusted the line-height of several components used in some log screens to address issue with low-hanging font characters being cut off\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the brainCloud API:\\r\\n\\r\\n- **CustomEntity service**\\r\\n    - Added a `_serverTime` field to the `ReadEntity()`, `ReadSingleton()`, `SysReadEntity()`, `GetEntityPage()`, `GetEntityPageOffset()`, and `GetRandomEntitiesMatching()` responses\\r\\n- **[User] Entity service**\\r\\n    - Added a `_serverTime` field to the `GetEntitiesByType()`, `GetEntity()`, `GetList()`, `GetPage()`, `GetPageOffset()`, `GetSharedEntitiesForProfileId()`, `GetSharedEntitiesListForProfileId()`, `GetSharedEntityForProfileId()`, `GetSingleton()` responses\\r\\n- **GlobalEntity service**\\r\\n    - Added a `_serverTime` field to the `GetList()`, `GetListByIndexedId()`, `GetPage()`, `GetPageOffset()`, `GetRandomEntitiesMatching()`, `GetSystemEntityList()`, `GetSystemEntityPage()`, `GetSystemEntityPageOffset()`, `ReadEntity()`, `ReadSystemEntity()` responses\\r\\n- **Group service**\\r\\n    - Added a `_serverTime` field to the `ReadGroupEntitiesPage()`, `ReadGroupEntitiesPageByOffset()`, `ReadGroupEntity()`, `SysReadGroupEntitiesPage()`, `SysReadGroupEntitiesPageByOffset()`, `SysReadGroupEntity()` responses\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - There are no new client APIs in this release.\\r\\n    - There have been several client lib patches over the past month though - so be sure that you are using the latest!\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2021/10/12/release-4-9","metadata":{"permalink":"/braincloud-apiref/release/2021/10/12/release-4-9","source":"@site/release/2021-10-12-release-4-9/index.md","title":"brainCloud 4.9 is live!","description":"brainCloud 4.9 is a massive update with a hat-trick of new Multiplayer / Hosting Features - plus Unity Compression and some highly requested Marketplace and Management APIs. We hope you like it!","date":"2021-10-12T00:00:00.000Z","formattedDate":"October 12, 2021","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":9.175,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"brainCloud 4.9 is live!","date":"2021-10-12","tags":["release-history"]},"prevItem":{"title":"brainCloud 4.9.5 is live!","permalink":"/braincloud-apiref/release/2021/11/30/braincloud-4-9-5"},"nextItem":{"title":"GameSparks to brainCloud migration notes","permalink":"/braincloud-apiref/release/2021/09/30/gamesparks-to-braincloud-migration-notes"}},"content":"brainCloud 4.9 is a massive update with a hat-trick of new **Multiplayer / Hosting Features** - plus _Unity Compression_ and some highly requested _Marketplace and Management APIs_. We hope you like it!\\r\\n\\r\\nWarning\\r\\n\\r\\nThis release features an update to path handling for the `bridge.callScript()` method to ensure that _called script paths_ are treated as relative to the _calling scripts paths_. This aligns with the path handling of the `bridge.include()` import mechanism - and makes for more maintainable and portal script modules. See _Updated Script Path Handling_ for more information.\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Amazon GameLift Support!\\r\\n\\r\\nWe are pleased to announce that brainCloud now supports\xa0[Amazon GameLift](https://aws.amazon.com/gamelift/).\\r\\n\\r\\nThis means that you can enjoy all the benefits of brainCloud multiplayer - with our _online matchmaking_ and _lobby services_ - but with the flexibility of running and hosting your own server fleets in GameLift.\\r\\n\\r\\nThis is especially helpful in scenarios where:\\r\\n\\r\\n- You already have game servers running in GameLift\\r\\n- Your game needs the performance boost provided by GameLift\u2019s non-containerized architecture\xa0\\r\\n- You want to lower costs with GameLift\u2019s ability to utilize AWS Spot Instances\\r\\n\\r\\nThe best part is that once you configure it - there are almost no changes to your client code. The only difference is that the `connectData` information returned to the client will specify a protocol type of `gamelift`.\\r\\n\\r\\nInformation\\r\\n\\r\\nNote that GameLift hosting is priced differently than standard brainCloud hosting. brainCloud will charge the equivalent of _5 API Calls per player_ added to your GameLift servers.  \\r\\n  \\r\\n_This is independent of the costs that Amazon will charge you directly, of course._\\r\\n\\r\\n### Join in progress!\\r\\n\\r\\nSpeaking of brainCloud lobbies and matchmaking - brainCloud 4.9 adds support for _backfilling_ of matches - which means that new/replacement players can finally be added to matches in progress!\\r\\n\\r\\n![](images/2021-09-24_13-11-42-1024x764.png)\\r\\n\\r\\nNote that the room server should use the `SysGetLobbyMember()` call to validate the legitimacy of any players attempting to join the Room Server after the match starts.\\r\\n\\r\\n### Retrieve List of Lobbies\\r\\n\\r\\nTo complete our multiplayer hat-trick, developers can now query the list of active lobbies in a game. This is useful for games providing a more classic multiplayer experience.\\r\\n\\r\\nSimply pair the new `GetLobbyInstances()` and `GetLobbyInstancesWithPingData()` calls with the existing `GetLobbyData()` and `JoinLobby()` calls to implement your own old-school lobby system!\\r\\n\\r\\n### AppStore Item Purchases\\r\\n\\r\\nAt long last, Marketplace Products can now include Inventory Items. This means users will be able to acquire your game\u2019s \u201cMagic Wand of Silly Walks\u201d directly through an in-app purchase!\\r\\n\\r\\n![](images/2021-09-24_13-39-05-1024x123.png)\\r\\n\\r\\n### Unity Client Compression\\r\\n\\r\\nThe Unity Client now officially supports compressing of client \u2194\ufe0e server messages.\\r\\n\\r\\nSending large API requests/responses takes time - especially under mobile conditions. With a pair of flags, you can enable compression for faster processing of brainCloud requests. _This can also reduce the occurrence of network timeouts that can happen when sending/receiving larger requests_.\\r\\n\\r\\nbrainCloud\u2019s compression support is intelligent - and only kicks in if the message bundle to be transmitted is greater than a size threshold - which defaults to 50Kb. Any messages sent/received above that threshold will be compressed (and uncompressed) automatically and transparently to your app.\\r\\n\\r\\nNote that compression is _disabled_ in the 4.9 Unity Client by default.\\r\\n\\r\\nTo enable compression of both requests and responses, call:\\r\\n\\r\\n### Updated Script Path Handling\\r\\n\\r\\nWe have updated brainCloud\u2019s handling of paths for the `bridge.callScript()` method to make it more consistent with industry standards (and our own `bridge.include()` method).\\r\\n\\r\\nBefore this change, if brainCloud were running script `/subFolder/myScript.ccjs` - the following two calls would look for their files in different directories:\\r\\n\\r\\n- `bridge.include(\\"myImportFile.ccjs\\")` \u2190 would look for `myImportFile.ccsj` in the current directory of the calling script - i.e. \u201c/subFolder\u201d \u2705\\r\\n- `bridge.callScript(\\"myUtilityScript.ccjs\\", {})` <- would look for `myUtilityScript.ccjs` in the _root_! \u274c\\r\\n\\r\\nWith this change, the two calls use the same algorithm to determine the referenced script.\\r\\n\\r\\nAs you would expect, we have introduced a new compatibility flag that controls this improved behavior. The new **[x]** _**Use legacy script path handling**_ flag, if enabled, preserves the old functionality. _This flag is enabled by default for all existing apps, and disabled by default for newly created apps._\\r\\n\\r\\nInformation\\r\\n\\r\\n**Important** - this change does _not_ affect the functioning of `ScriptServiceProxy.runScript()`. As that method mimics the Client API call - it always assumes that it is running from the root. We highly recommend that devs use `bridge.callScript()` instead of `ScriptServiceProxy.runScript()` from within scripts.\\r\\n\\r\\n### Tournament Management APIs\\r\\n\\r\\nWe have expanded our Sys APIs to support Tournament Management.\\r\\n\\r\\nThis includes new cloud-code only APIs for:\\r\\n\\r\\n- Managing Tournament Templates\\r\\n- Enabling Tournaments for a Leaderboard Config\\r\\n- Editing Tournament details for current and future periods\\r\\n\\r\\nIn addition, we have added new methods for more efficiently retrieving the list of leaderboards, and retrieving leaderboard details. See the _API Changes_ section for more details.\\r\\n\\r\\n### Additional Improvements\\r\\n\\r\\nThis release also includes the following:\\r\\n\\r\\n- **$text** query support\\r\\n    - the query syntax for Custom Entities has been extended to support MongoDB $text queries.\\r\\n- Improved **RTT connection id** handling\\r\\n    - The **Relay Server Protocol** protocol (and the _Relay Server_ and _Client Libraries_ that implement it) have been enhanced for more consistent usage of RTT connection IDs - basically, the protocol now uses `profileIdCx` ids instead of just `profileId`\\r\\n    - There is a new compatibility flag, **[x] Include legacy lobby owner field in API output**, that when enabled ensures that this new behavior still works with old clients. _This flag is enabled by default for all existing apps, and disabled for newly created apps._\\r\\n- Additions / Improvements to the **Builder API**\\r\\n    - Support for **API Hook** management\\r\\n    - Support for basic **Team Member** management\\r\\n- Improvements to **Async Match** APIs\\r\\n    - We are now returning handy `summaryFriendData` for players in more of the AsyncMatch calls - including `FindMatches()`, `FindCompleteMatches()` and `ReadMatch()`\\r\\n- Additional **HTTP Client** methods\\r\\n    - Support for HTTP **PATCH**, **DELETE**, and **HEAD** commands\\r\\n- **External Authentication** enhancements\\r\\n    - Ability to return additional information with authentication results\\r\\n    - For more info - see the new `authPayload` and `extraErrorJson` fields documents in the [API Docs](/learn/key-concepts/authentication/external-authentication/).\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\n### Design\\r\\n\\r\\n- **Core App Info | Advanced Settings**\\r\\n    - Added new compatibility flag: _**[x] Include legacy lobby owner field in API output**_. Enabled for existing apps by default. See _Improved RTT Connection ID_ handling for more information.\\r\\n    - Added new compatibility flag: **[x] Use legacy script path handling**. Enabled for existing apps by default. See _Updated Script Path Handling_ for more information.\\r\\n- **Cloud Code | My Servers**\\r\\n    - The new **GameLift Room Server** option has been added.\\r\\n- **Cloud Code | Scripts**\\r\\n    - When dealing with _live_ apps, the Script Editor will no longer allow portal users to start editing a script before unlocking the app -- instead of just refusing to _save_ the changes! A small but useful improvement!\\r\\n- **Custom Config | Legacy Files**\\r\\n    - The old **Files** page has been fittingly renamed to **Legacy Files**.\\r\\n- **Integrations | Manage Integrations**\\r\\n    - A new **AWS GameLift Integration** section has been added.\\r\\n- **Leaderboards | Leaderboard Configs**\\r\\n    - We have added a search box for filtering the list of leaderboards. Super useful for those apps with tons of leaderboards!\\r\\n- **Marketplace | Products**\\r\\n    - Added the ability to add Items as reward items for in-app purchase products.\\r\\n- **Multiplayer | Lobbies**\\r\\n    - Added new options to the Rules page for lobbies:\\r\\n        - _**Disband on start (default)**_ - lobbies will be terminated when the game starts. This flag is enabled by default for existing apps.\\r\\n        - _**Allow join in progress**_ - allows players to join games that are already in progress (i.e. backfilling)\\r\\n\\r\\n### Team\\r\\n\\r\\n- **Manage | Apps**\\r\\n    - We\u2019ve added an app\u2019s `appId` (in parenthesis) to the list for easy reference\\r\\n    - We\u2019ve also added a new **Last Updated** field - so it is easier to see which apps have been edited recently. Note that we have also updated how some of our nightly processes work with the `updatedAt` field of the game record - so that going forward, apps are not considered to be \u201cupdated\u201d when our back-end billing processes run.\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the brainCloud API:\\r\\n\\r\\n- **AsyncMatch Service**\\r\\n    - We have added user summary data to the results returned by `CreateMatch()`, `SubmitTurn()`, `FindMatches()`, `FindCompleteMatches()`, `ReadMatch()` and `UpdateMatchSummaryData()`.\\r\\n- **Client Service (Unity Only)**\\r\\n    - Call the new `EnableCompressedRequests()`and `EnableCompressedResponses()` methods to enable compression.\\r\\n- **Global App Service**\\r\\n    - New `ReadSelectedProperties()` and `ReadPropertiesInCategories()` methods allow the app to retrieve a subset of the app\u2019s global properties instead of all of them.\\r\\n    - We have also added new S2S and cloud-code only methods for creating properties: `SysCreatePropertyString()` and `SysCreatePropertyJson()`\\r\\n- **Group Service**\\r\\n    - New cloud-code only `SysIsGroupMember()` call for testing group membership.\\r\\n- **HTTPClient**\\r\\n    - Added support for HTTP PATCH: `PatchJsonResponseJson()` and `PatchTextResponseText()`\\r\\n    - Added support for HTTP DELETE: `DeleteJsonResponseJson()` and `Delete()`\\r\\n    - Added support for HTTP HEAD: `HeadRequest()`\\r\\n- **Leaderboard Service**\\r\\n    - New `PostScoreToDynamicGroupLeaderboardDaysUTC()` call allows for the dynamic creation of group leaderboards with a `DAYS` rotation.\\r\\n    - New `SysCreateLeaderboardConfig()` and `SysEditLeaderboardConfig()` methods are updated versions of the older `SysCreateLeaderboard()` and `SysEditLeaderboard()` methods - with the ability to edit tournament settings. The old methods continue to be available (they are not deprecated).\\r\\n    - New `SysListLeaderboardConfigs()` and `SysGetLeaderboardConfig()` methods for more efficient retrieval of summary information vs. leaderboard details, respectively.\\r\\n    - New APIs for editing tournament period settings on leaderboards: `SysEditTournamentSettingsForFuturePeriodsOnly()` and `SysEditTournamentSettingsIncludingCurrentPeriod()`. Note that you would usually only edit future periods - because you don\u2019t want to change the rules of a tournament that is already underway - that seems unfair! ![:slight_smile:](images/1f642.png)\\r\\n    - New APIs for editing adhoc tournament periods - `SysCreateAdhocTournamentPeriod()`, `SysEditAdhocTournamentPeriod()`, and `SysDeleteAdhocTournamentPeriod()`\\r\\n- **Lobby Service**\\r\\n    - Added new `GetLobbyInstances()` and `GetLobbyInstancesWithPingData()` calls to return the list of available lobbies. Pair with the existing `GetLobbyData()` and `JoinLobby()` calls to implement your own old-school lobby system!\\r\\n- **Tournament Service**\\r\\n    - New management calls - `SysListTournamentTemplates()`, `SysCreateTournamentTemplate()`, `SysEditTournamentTemplate()`, `SysReadTournamentTemplate()` and `SysDeleteTournamentTemplate()`.\\r\\n- **User Service**\\r\\n    - A number of Sys methods that were missing from the S2S proxy have been added\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All libraries have been updated with the latest API changes. Go get \'em!\\r\\n- Documentation updates\\r\\n    - All of the new API calls have been added to the API Reference\\r\\n- Important Fixes\\r\\n    - BCLOUD-792 - JS S2S Heartbeat doesn\'t work - fixed.\\r\\n    - BCLOUD-799 - User Batch Script processing issue with PlayerSession API version causing Leaderboard API errors\\r\\n    - BCLOUD-945 - REDIS lag causes issues when scripts are moved between folders\\r\\n    - BCLOUD-980 - Scripts in the root folder are not being cleared when restored to checkpoint\\r\\n    - BCLOUD-981 - Add protection for PlayerStatistics experience points from going negative\\r\\n    - BCLOUD-982 - Add more input validation for Tournament rewards input for GlobalGameStatistics and/or PlayerStatistics stat names\\r\\n    - BCLOUD-998 - Add support for $text operator text query document fields\\r\\n    - BCLOUD-1057 - Locks with no player session context not unlocking properly\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2021/09/30/gamesparks-to-braincloud-migration-notes","metadata":{"permalink":"/braincloud-apiref/release/2021/09/30/gamesparks-to-braincloud-migration-notes","source":"@site/release/2021-09-30-gamesparks-to-braincloud-migration-notes/index.md","title":"GameSparks to brainCloud migration notes","description":"brainCloud is an excellent option for developers looking to migrate their app and players before GameSparks shuts down on September 30, 2022.","date":"2021-09-30T00:00:00.000Z","formattedDate":"September 30, 2021","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":20.235,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"GameSparks to brainCloud migration notes","date":"2021-09-30","tags":["release-history"]},"prevItem":{"title":"brainCloud 4.9 is live!","permalink":"/braincloud-apiref/release/2021/10/12/release-4-9"},"nextItem":{"title":"Release 4.8","permalink":"/braincloud-apiref/release/2021/06/28/release-4-8"}},"content":"brainCloud is an excellent option for developers looking to migrate their app and players before [GameSparks shuts down on September 30, 2022](https://docs.gamesparks.com/transition-faq/).\\r\\n\\r\\nGameSparks developers will find that the brainCloud feature set and technology platform align well with what they are already used to.\\r\\n\\r\\nMajor advantages of migrating to brainCloud include:\\r\\n\\r\\n- **Cloud code** - brainCloud\'s cloud code system utilized JavaScript, is based on Mozilla Rhino, uses JSON parameters, and allows synchronous access to the full brainCloud API.\\r\\n- **Cloud data** - brainCloud uses NoSQL MongoDB for persistent data storage.\\r\\n- **Chat & Messaging** - brainCloud\'s RTT (Real-time Tech) service provides support for Chat (both Global and Group channels) and player-to-player Messaging\\r\\n- **Downloadables** - brainCloud supports Downloadables and Uploadables, with built-in CloudFront CDN support\\r\\n- **Email** - brainCloud provides a **SendGrid** integration for email\\r\\n- **Leaderboards** - brainCloud rich leaderboard system directly supports everything but leaderboards partitions - and partitions can be emulated via separate, dynamically created leaderboards.\\r\\n- **Multiplayer** - brainCloud provides support for hosted Room and Relay Servers, and beginning in 4.9 supports Amazon GameLift as well!\\r\\n- **Teams** - brainCloud\'s Group service provides support for teams - including team chat and leaderboards\\r\\n- **Virtual Currencies and Virtual Goods** - brainCloud supports them both, along with purchasing both from the AppStores.\\r\\n- And much, much more!\\r\\n\\r\\nThis document provides instructions and tips for migrating your app from GameSparks to brainCloud.\\r\\n\\r\\nClick on the _collapsable_ table-of-contents to jump to a section.\\r\\n\\r\\nTable of contents\\r\\n\\r\\n1. [Achievements](#achievements)\\r\\n    \\r\\n2. [Authentication Basics](#authentication-basics)\\r\\n    1. [Registration](#registration)\\r\\n        \\r\\n    2. [Authentication](#authentication)\\r\\n        \\r\\n3. [Authentication (3rd Party)](#authentication-3rd-party)\\r\\n    \\r\\n4. [Chat & Messaging](#chat-amp;-messaging)\\r\\n    1. [Chat](#chat)\\r\\n        \\r\\n    2. [Messaging](#messaging)\\r\\n        \\r\\n5. [Cloud Code](#cloud-code)\\r\\n    1. [brainCloud Data](#braincloud-data)\\r\\n        \\r\\n    2. [MetaCollections](#metacollections)\\r\\n        \\r\\n    3. [System-Scripts](#system-scripts)\\r\\n        \\r\\n    4. [Bulk-Jobs](#bulk-jobs)\\r\\n        \\r\\n    5. [Schedulers](#schedulers)\\r\\n        \\r\\n    6. [Transitioning MetaCollections](#transitioning-metacollections)\\r\\n        \\r\\n    7. [GameSparks API Wrappers](#gamesparks-api-wrappers)\\r\\n        \\r\\n    8. [Asynchronous APIs](#asynchronous-apis)\\r\\n        \\r\\n    9. [Performance Bottlenecks](#performance-bottlenecks)\\r\\n        \\r\\n6. [Data Transition Guide](#data-transition-guide)\\r\\n    1. [Reference data](#reference-data)\\r\\n        \\r\\n    2. [User accounts](#user-accounts)\\r\\n        \\r\\n7. [Downloadables](#downloadables)\\r\\n    \\r\\n8. [Emails (SendGrid)](#emails-sendgrid)\\r\\n    \\r\\n9. [Leaderboard Basics](#leaderboard-basics)\\r\\n    \\r\\n10. [Leaderboard Partitions](#leaderboard-partitions)\\r\\n    \\r\\n11. [Leaderboard Resetting](#leaderboard-resetting)\\r\\n    \\r\\n12. [Manage Screens](#manage-screens)\\r\\n    \\r\\n13. [Matchmaking](#matchmaking)\\r\\n    \\r\\n14. [Player Manager](#player-manager)\\r\\n    \\r\\n15. [Scheduled Events](#scheduled-events)\\r\\n    \\r\\n16. [Teams](#teams)\\r\\n    1. [Team Chat & Notifications](#team-chat-amp;-notifications)\\r\\n        \\r\\n    2. [Team Leaderboards](#team-leaderboards)\\r\\n        \\r\\n    3. [Team Data](#team-data)\\r\\n        \\r\\n17. [Virtual Currency](#virtual-currency)\\r\\n    \\r\\n18. [Virtual Goods Basics](#virtual-goods-basics)\\r\\n    \\r\\n19. [Virtual Goods (3rd Party)](#virtual-goods-3rd-party)\\r\\n    \\r\\n\\r\\n## Achievements\\r\\n\\r\\nbrainCloud supports standard achievement functionality: short name (id), title, description, and platform-specific achievement IDs. Devs can also attach a collection of key+value pairs for additional metadata.\\r\\n\\r\\nIn brainCloud, Achievements are cosmetic - they do not deliver additional rewards (such as\xa0_Virtual Currencies_,\xa0_Player XP_,\xa0_User Statistics_,\xa0_Virtual Goods_, etc.).\\r\\n\\r\\nbrainCloud does provide a\xa0**Milestone**\xa0system, however, that can be used to trigger such awards - including\xa0_Achievements_ themselves. Milestones are configured to watch\xa0_User Statistics_\xa0and trigger automatically when specified thresholds are exceeded. Milestones can award\xa0_Achievements_,\xa0_Virtual Currencies_,\xa0_Player XP_,\xa0_User Statistics_, and\xa0_Global Statistics_.\xa0\\r\\n\\r\\nMilestones do not currently award\xa0_Product Items_; that feature is coming in an\xa0_upcoming release._ This functionality can however be easily achieved with custom code by attaching the product item id to the Achievement\u2019s metadata.\\r\\n\\r\\nbrainCloud does not have\xa0_Leaderboard Triggers_\xa0- but you\xa0_can_ attach a custom Cloud Code script to any API Call via the\xa0**API Hooks**\xa0feature. So for example, a\xa0_PostSuccess API Hook_\xa0on the\xa0PostScoreToLeaderboard()\xa0call can achieve a similar result.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Authentication Basics\\r\\n\\r\\nbrainCloud supports a rich set of\xa0_authentication types_\xa0(also called\xa0_Identity Types_).\\r\\n\\r\\nThe equivalent of GameSpark\u2019s Device Authentication is brainCloud\u2019s\xa0_Anonymous ID_. This is a generated GUID that is stored on the player\u2019s device.\\r\\n\\r\\nAuthenticating anonymously is as simple as calling the brainCloud Wrapper\u2019s\xa0`AuthenticateAnonymous()`\xa0call.\xa0\\r\\n\\r\\nbool forceCreate = true; // Creates the account if it doesn\'t already exist\\r\\nSuccessCallback successCallback = (response, cbObject) =>\\r\\n{\\r\\n    // Continue with launching the app\\r\\n    // ...\\r\\n};\\r\\nFailureCallback failureCallback = (status, code, error, cbObject) =>\\r\\n{\\r\\n    // An error occurred\\r\\n    // Pop up a dialog for the user to retry?\\r\\n};\\r\\n\\r\\n\\\\_bc.AuthenticationService.AuthenticateAnonymous(forceCreate, successCallback, failureCallback);\\r\\n\\r\\n### Registration\\r\\n\\r\\nbrainCloud also supports both Univeral Identity (username + password) and Email Identity (email address + password) authentication.\\r\\n\\r\\nTo register their account, the app simply attaches the desired identity type to the player\u2019s account. For example, the following code attaches a Universal Identity to the account.\\r\\n\\r\\nbc.IdentityService.AttachUniversalIdentity( \\r\\n    userId,\\r\\n    password,\\r\\n    SuccessCallback, FailureCallback);\\r\\n\\r\\n### Authentication\\r\\n\\r\\nOnce a higher form of identity has been attached to the account, the app can login using that identity via the appropriate authentication calls. For example, to login via the Universal Identity:\\r\\n\\r\\n\\\\_bc.AuthenticationService.AuthenticateUniversal(\\r\\n    userId, \\r\\n    password, \\r\\n    forceCreate, \\r\\n    successCallback, \\r\\n    failureCallback);\\r\\n\\r\\n* * *\\r\\n\\r\\n## Authentication (3rd Party)\\r\\n\\r\\nbrainCloud supports Sign in With Apple, Facebook Login, Google Play, Google OpenId, Oculus, and more.\\r\\n\\r\\nFrom a code perspective, all work basically the same:\\r\\n\\r\\n- The app uses the appropriate Platform / 3rd Party SDK to authentication the user\\r\\n- The app then passes the authentication information returned from the SDK to brainCloud (via the appropriate authentication mechanism\\r\\n- brainCloud validates the authentication is legit - and then looks up the user\u2019s account and/or creates a new account as directed (according to the\xa0\\\\`\\\\``forceCreate`option)\\r\\n\\r\\nFor example, the call for Sign in with Apple is:\\r\\n\\r\\n\\\\_bc.AuthenticationService.AuthenticateApple(\\r\\n    appleUserId, \\r\\n    identityToken, \\r\\n    forceCreate, \\r\\n    SuccessCallback, \\r\\n    FailureCallback);\\r\\n\\r\\nTutorials for configuring brainCloud and the 3rd party system can be found here:\\r\\n\\r\\n- Sign in with Apple -\xa0[https://getbraincloud.com/apidocs/portal-usage/authentication-apple/](/learn/portal-tutorials/authentication-apple/)\\r\\n- Facebook Login -\xa0[https://getbraincloud.com/apidocs/portal-usage/basic-configuration-facebook/](/learn/portal-tutorials/authentication-facebook//)\\r\\n- Google Play -\xa0[https://getbraincloud.com/apidocs/portal-usage/authentication-google-playgame/](/learn/portal-tutorials/authentication-google-playgame/)\\r\\n- Google OpenId -\xa0[https://getbraincloud.com/apidocs/portal-usage/authentication-google-openid/](/learn/portal-tutorials/authentication-google-openid/)\\r\\n- Oculus -\xa0[https://getbraincloud.com/apidocs/portal-usage/authentication-oculus/](/learn/portal-tutorials/authentication-oculus/)\\r\\n\\r\\n* * *\\r\\n\\r\\n## Chat & Messaging\\r\\n\\r\\nbrainCloud supports both Chat and Messaging as part of its\xa0**RTT**\xa0(Real-time Tech) offering. RTT enhances brainCloud\u2019s standard request+response API with an additional WebSocket connection to the server for bi-directional real-time communications.\\r\\n\\r\\n### Chat\\r\\n\\r\\nIn brainCloud, Chat messages are directed to\xa0_channels_, not users. Channels have an ID and a rolling history. Active listeners of a channel are notified in real-time when new messages are posted.\\r\\n\\r\\nbrainCloud supports Global, Group (i.e. Clans or Teams) and Dynamic Channels. brainCloud also supports Lobby Chat - though technically that is achieved through a separate, lobby event API.\\r\\n\\r\\nTo participate in Chat or Messaging, the client app must first enable RTT:\\r\\n\\r\\neRTTConnectionType rttConnectionType = eRTTConnectionType.WEBSOCKET;\\r\\n\\\\_bc.RTTService.EnableRTT(rttConnectionType, successCallback, failureCallback);\\r\\n\\r\\nAnd register for the chat callback:\\r\\n\\r\\nRTTCallback rttCallback = response =>\\r\\n{\\r\\n   Debug.Log(response);\\r\\n   // do something! :)\\r\\n};\\r\\n\\\\_bc.RTTService.RegisterRTTChatCallback(rttCallback);\\r\\n\\r\\nNext, the app connects to the desired chat channel:\\r\\n\\r\\nstring channelId = \\"22817:gl:CHAT\\\\_TRADE\\"; // APP\\\\_ID:CHANNEL\\\\_TYPE:CHANNEL\\\\_ID\\r\\n\\\\_bc.ChatService.ChannelConnect(\\r\\n    channelId, \\r\\n    maxReturn, \\r\\n    successCallback, \\r\\n    failureCallback);\\r\\n\\r\\nAnd finally to post a message:\\r\\n\\r\\n\\\\_bc.ChatService.PostChatMessageSimple(\\r\\n    channelId, \\r\\n    chatMessage, \\r\\n    true, \\r\\n    successCallback,\\r\\n    failureCallback);\\r\\n\\r\\nNote that brainCloud chat supports both simple text and rich JSON payloads - and integrates with WebPurify for profanity filtering.\\r\\n\\r\\n### Messaging\\r\\n\\r\\nIn brainCloud,\xa0_Messaging messages_\xa0differ from\xa0_Chat messages_\xa0in that they are directed at\xa0_players_, not\xa0_channels_. Messaging can be thought of as a simple local email system for your app.\\r\\n\\r\\nEach player has an inbox and an outbox.\\r\\n\\r\\nNote - because Messaging is RTT-enabled, online players will be alerted in real-time (via a callback) when a new Message arrives.\xa0\\r\\n\\r\\nbrainCloud Messaging supports both simple text messages and complex JSON payloads. The following method delivers a simple text message to the players at the specified `profileIds`.\\r\\n\\r\\n\\\\_bc.MessagingService.SendMessageSimple(\\r\\n  toProfileIds, \\r\\n  text, \\r\\n  successCallback, \\r\\n  failureCallback);\\r\\n\\r\\n* * *\\r\\n\\r\\n## Cloud Code\\r\\n\\r\\nbrainCloud\u2019s Cloud Code system is very similar to the model employed by GameSparks:\\r\\n\\r\\nIn brainCloud:\\r\\n\\r\\n- Cloud code Scripts are written in\xa0**JavaScript**, and run upon an embedded\xa0**Rhino**\xa0engine\\r\\n- Scripts can\xa0[_include_](http://getbraincloud.com/api/cc/ccscripts/ccsharedscripts)\xa0other scripts and\xa0_call_\xa0other scripts.\\r\\n- Scripts are passed\xa0**JSON parameters**\xa0when they are called\\r\\n- Scripts have access to the\xa0_full brainCloud API_\xa0- including the ability to\xa0_**Get/Set Player Data**_\xa0(like player statistics, attributes, User Entities, Owned Custom Entities, etc.) and\xa0**Get Static Game Data - MetaCollections**\xa0(like Global Properties, Global Entities, Un-owned Custom Entities, etc.)\\r\\n- API calls made from Cloud Code Scripts run\xa0**synchronously**\xa0for simplicity!\\r\\n- Scripts have access to the brainCloud HttpClient service - which can be used to\xa0**Send HTTP requests** to external services\\r\\n- Scripts can be registered to be called from webhooks - which are useful for\xa0**Receiving HTTP Requests**\xa0from external services. (Note - brainCloud also supports a custom S2S API for more flexibility)\\r\\n- brainCloud supports\xa0**User Batch Jobs**\xa0- so you can trigger a script to be run on a select batch of users (or all users).\xa0\\r\\n- brainCloud supports\xa0**Scheduling**\xa0scripts to be run in the future. Although there isn\u2019t the concept of \u201crun every hour\u201d or \u201crun every day\u201d - it is very simple to have a script reschedule itself to achieve the same result.\\r\\n- brainCloud scripts can be attached to API calls via\xa0**API Hooks**. API Hooks can be configured to run custom scripts before and/or after the API call. This can be useful for modifying a game\u2019s behavior without the need to redeploy a new client.\\r\\n\\r\\n### brainCloud Data\\r\\n\\r\\nbrainCloud offers a rich set of data APIs for storing player and game data. An overview of the different data APIs can be found\xa0[here](/learn/key-concepts/data/)\xa0- as well as a discussion of the benefits of Custom Entities vs. the older User and Global Entity mechanisms\xa0[here](http://help.getbraincloud.com/en/articles/3754150-custom-entities-a-scalable-and-flexible-app-data-storage-and-querying-solution).\\r\\n\\r\\n### MetaCollections\\r\\n\\r\\nDevelopers should use brainCloud\u2019s Unowned Custom Entities in place of MetaCollections. Custom Entities are JSON objects with a rich API for storage and retrieval. For more information, see the\xa0[Custom Entity API reference](http://getbraincloud.com/api/capi/customentity).\\r\\n\\r\\n### System-Scripts\\r\\n\\r\\nbrainCloud provides a mechanism called\xa0[**API Hooks**](http://getbraincloud.com/api/cc/ccscripts/apihooks)\xa0that allows you to attach custom scripts to API Calls and other events in brainCloud.\\r\\n\\r\\nAPI Hooks can be configured as either\xa0**Pre-**\xa0or\xa0**Post-**\xa0hooks - meaning that they will run either before or after the API calls they are enhancing.\xa0\\r\\n\\r\\nPost-hooks are useful for cases where you want to enhance the results of an API call with additional data - for example, attaching the user\u2019s campaign state to the\xa0**Authenticate**\xa0call results.\\r\\n\\r\\nPre-hooks can be used to add additional checks to allow/disallow API calls - and alternatively re-route the calls themselves. They are an easy way to re-route cheaters to alternate leaderboards, for example.\\r\\n\\r\\n### Bulk-Jobs\\r\\n\\r\\nbrainCloud offers a Batch User Script feature for scheduling a script to be run\xa0_all_\xa0or a\xa0_subset_\xa0of users.\\r\\n\\r\\nLike GameSparks, the workload is spread across all players and executed as background jobs to not impact server performance. brainCloud also offers the ability to trigger a completion script when all users have been processed.\\r\\n\\r\\nFor more information, check out the\xa0[RunBatchUserScriptAndCompletionScript()](http://getbraincloud.com/api/s2s/script/runbatchuserscriptandcompletionscript)\xa0API call.\\r\\n\\r\\n### Schedulers\\r\\n\\r\\nbrainCloud offers APIs for scheduling a script to run at a specified time in the future. Although not the same as the every-hour, every-day scripts supported by GameSparks - the same sort of functionality can be achieved by having the script re-schedule itself to run again. An\xa0[example](/learn/cloud-code-central/handy-cloud-code-scripts/scriptscheduler-script/)\xa0of such a script can be found in brainCloud\u2019s Cloud Code Central repository.\\r\\n\\r\\n### Transitioning MetaCollections\\r\\n\\r\\nThe brainCloud Portal offers the ability to import data from JSON files - this is supported for both Custom Entities and Global Entities. This is suitable when important static reference data - like level data, tuning files, etc.\\r\\n\\r\\nInformation\\r\\n\\r\\nThe allowed size of import files is limited - if you receive an error during the import, message our support and we may be able to adjust the limit for you.\\r\\n\\r\\n_Note that brainCloud also supports an S2S API, which may be helpful if you need a more custom approach for migrating your app\'s reference data._\\r\\n\\r\\n### GameSparks API Wrappers\\r\\n\\r\\nIf you decide to create wrappers for GameSparks key APIs, you can easily include them in your scripts using the\xa0bridge.include()\xa0operation.\\r\\n\\r\\nUsing this approach may allow you to better take advantage of the similarities between the brainCloud and GameSparks cloud code systems.\\r\\n\\r\\n### Asynchronous APIs\\r\\n\\r\\nHappily, brainCloud cloud code scripts use synchronous calls, just like GameSparks.\\r\\n\\r\\n### Performance Bottlenecks\\r\\n\\r\\nThe brainCloud Cloud Code Editor and API Usage pages can help you to find performance bottlenecks:\\r\\n\\r\\n- The\xa0**Cloud Code Editor**\xa0returns the execution time for each test run of your script. It also returns information on what API calls we made by the script - to help better understand where time may have been spent\\r\\n- The\xa0**Reports | API Usage**\xa0page displays the average execution times of each of your API calls, including cloud code scripts. Any commonly called scripts taking longer than 200ms should be examined for possible optimizations.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Data Transition Guide\\r\\n\\r\\n### Reference data\\r\\n\\r\\nThe brainCloud Portal offers the ability to import data from JSON files - this is supported for both Custom Entities and Global Entities.\\r\\n\\r\\nThis is suitable when importing static reference data - like level data, tuning files, etc.\\r\\n\\r\\nInformation\\r\\n\\r\\nThe allowed size of import files is limited - if you receive an error during the import, message our support and we may be able to adjust the limit for you.\\r\\n\\r\\n_Note that brainCloud also supports an S2S API, which may be helpful if you need a more custom approach for migrating your app\'s reference data._\\r\\n\\r\\n### User accounts\\r\\n\\r\\nFor dynamic user data, it is highly recommended that new users be migrated over during initial login to brainCloud.\\r\\n\\r\\nThis has a number of benefits:\\r\\n\\r\\n- Simpler - Importing a single user is simpler than importing all of them\\r\\n- Scalable - It spreads the work of importing out, creating less load on both brainCloud and GameSparks\\r\\n- Efficient - it ensures that only active player data is migrated over to brainCloud. If your game is more than two years old, it\'s likely that less than 25% of your stored player accounts are still active.\\r\\n\\r\\nThe recommended approach is to leverage the following brainCloud features:\\r\\n\\r\\n- External Authentication - which allows brainCloud users to be authenticated via an external source - like your Gamesparks app\\r\\n- API Post-Hook - which can be used after successful authentication, to trigger a script to retrieve the user\'s GameSparks data\\r\\n- HTTPClient service - used to make HTTP calls to external services (i.e. GameSparks)\\r\\n\\r\\nMore information on this sort of approach can be found in\xa0[this](http://help.getbraincloud.com/en/articles/5374223-dynamic-account-migration-between-apps)\xa0article.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Downloadables\\r\\n\\r\\nbrainCloud supports a Global Files service that allows developers to upload files to be downloaded by client apps. These files are automatically distributed to AWS CloudFront CDN for fast downloads.\\r\\n\\r\\nUploading of files to brainCloud is normally done via the Design Portal. It is also possible to upload a file as a User File via a Client Library, and then convert it to a Global File via an API Call.\\r\\n\\r\\n(We will be adding the ability to upload Global Files directly in a future version of our APIs.)\\r\\n\\r\\n* * *\\r\\n\\r\\n## Emails (SendGrid)\\r\\n\\r\\nbrainCloud provides a SendGrid integration for sending emails.\\r\\n\\r\\nTo utilize brainCloud\'s SendGrid functionality, simply:\\r\\n\\r\\n- Configure the SendGrid settings on the **Design | Integrations | Manage Integrations** page, _SendGrid_ section of the design portal\\r\\n- Modify your scripts and/or client to use brainCloud\'s [`Mail` service](http://getbraincloud.com/api/capi/mail) APIs\\r\\n- _Optionally_ customize the system templates to be used for password resets and such on the **Design | Authentication | Email Authentication** page.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Leaderboard Basics\\r\\n\\r\\nbrainCloud provides a rich leaderboard system - with support for both player and group leaderboards, scoring types, rotation types, supplemental data, history, etc.\\r\\n\\r\\nLeaderboards are normally pre-defined in the Portal on the **Design | Leaderboards | Leaderboard Configs** page. Leaderboards can also be dynamically created using the `PostScoreToDynamicLeaderboardUTC()` call.\\r\\n\\r\\nLeaderboard scores can be viewed on the **Monitoring | Global Monitoring | Leaderboards** page of the Portal.\\r\\n\\r\\nbrainCloud of provides a rich API for returning leaderboard results, including social and global leaderboard results - as well as an advanced API for retrieving high scores across multiple leaderboards for social maps.\\r\\n\\r\\nA player\'s own _score_ can be retrieved via the `GetPlayerScore()` api.\\r\\n\\r\\nAdvice\\r\\n\\r\\nPro-tip: To retrieve a player\'s _rank_ as well as _score_, use the `GetGlobalLeaderboardView()` call, specifying `0` for the `beforeCount` and `afterCount`.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Leaderboard Partitions\\r\\n\\r\\nbrainCloud does not support Partitioned Leaderboards - but something similar can be achieved using multiple leaderboards.\\r\\n\\r\\nTo keep setup as simple as possible, we would recommend that the additional partitions (for example, country-specific versions of the leaderboard) be created programmatically with a descriptive suffix (i.e. \\"\\\\_<countrycode\\\\>\\". This can be done via a simple cloud code script and/or cloud code hook.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Leaderboard Resetting\\r\\n\\r\\nbrainCloud directly supports the following automatic rotation types:\\r\\n\\r\\n- NEVER - the leaderboard never resets\\r\\n- DAILY - the leaderboard resets daily\\r\\n- DAYS - the leaderboard resets after <x\\\\> days\\r\\n- WEEKLY - the leaderboard resets weekly\\r\\n- MONTHLY - the leaderboard resets monthly\\r\\n- YEARLY - the leaderboard resets yearly\\r\\n\\r\\nbrainCloud leaderboards also have a \\"retained count\\" - that determines how many old copies of the leaderboard are retained before deletion. This can be useful for rewarding players for their performance in the previous rotation.\\r\\n\\r\\nNote that developers can also directly control rotation by configuring a NEVER leaderboard and resetting it manually via the `SysResetNeverLeaderboard()` call.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Manage Screens\\r\\n\\r\\nbrainCloud has a feature-rich Design Portal that provides access to game, group, and player data - including entities, statistics, leaderboards, etc. All of this data is viewable and editable by development and support personnel (given appropriate permissions).\\r\\n\\r\\nThe data is all accessible via the Monitoring portion of the portal. Monitoring is broken into the following sub-sections:\\r\\n\\r\\n- **Global Monitoring** - for viewing/editing global data - like global/custom entities, leaderboards, global statistics, job queues, and more\\r\\n- **Group Monitoring** - for viewing/editing of groups and group data\\r\\n- **User Monitoring** \\\\- for viewing/editing of users and their data\\r\\n\\r\\nbrainCloud also provides an S2S API that can be used to implement a custom management tool that manages your brainCloud-based apps.\\r\\n\\r\\nMore information on the S2S API can be found [here](http://getbraincloud.com/api/s2s).\\r\\n\\r\\n* * *\\r\\n\\r\\n## Matchmaking\\r\\n\\r\\nbrainCloud provides two different matchmaking systems.\\r\\n\\r\\nThe `MatchMaking` service is primarily for use by games that are using brainCloud\'s `Async Match` and `One-way Match` APIs. Games of these types are often played offline - and thus this matchmaking service only selects offline players.\\r\\n\\r\\nOnline games should use the brainCloud `Lobby` service for matchmaking. Lobby Matchmaking identifies groups of suitable players for online play.\\r\\n\\r\\nLobby Matchmaking is highly configurable, with support for:\\r\\n\\r\\n- skill level matching\\r\\n- min / max players (by team)\\r\\n- geo matching <- prioritizing players that are close together\\r\\n- filter scripts\\r\\n\\r\\nFor more information, see the brainCloud [Lobby](http://getbraincloud.com/api/capi/lobby) service.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Player Manager\\r\\n\\r\\nPlayer Management is accomplished via the **Monitoring | User Monitoring** section of the portal. Subsections for viewing and editing player data include:\\r\\n\\r\\n- User Summary - a summary of the user\'s info, including name, xp, identities, currency balances, etc.\\r\\n- Achievements - displays the user\'s achievement status\\r\\n- Attributes - displays any attributes attached to the user. Supported creating and editing of attributes\\r\\n- Custom Entities - allows for view/edit of a user\'s owned Custom Entities\\r\\n- Friends - view the player\'s friends (both 3rd party and locally managed)\\r\\n- Groups - view the Groups the user is a member of\\r\\n- Inventory - view the items owned by the player\\r\\n- Milestones & Quests - view the user\'s completion status for milestones and quests\\r\\n- One-way MP - view the status of recent one-way multiplayer matches\\r\\n- Pricing - view the store prices for this player - including any promotions that may be being applied\\r\\n- Statistics - view/edit the user\'s statistics\\r\\n- Transactions - view any purchases the player may have made\\r\\n- Turn-by-Turn MP - view any async match games currently in progress\\r\\n- User Entities - view/edit the player\'s User Entities\\r\\n- User Files - view the files that this user has uploaded\\r\\n- Virtual Currency - view/edit the user\'s current balances\\r\\n- Logs - logs of the user\'s recent interactions with the brainCloud API <- super useful for debugging!\\r\\n\\r\\nbrainCloud also offers an S2S API that can be useful for building custom management tools.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Scheduled Events\\r\\n\\r\\nbrainCloud offers a Scheduled Promotions feature that can be used to configure sale prices for all users and/or specific segments of users.\\r\\n\\r\\nThe list of active promotions can also be queried via the `RefreshPromotions()` call - and could be used by the client to configure additional custom functionality.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Teams\\r\\n\\r\\nbrainCloud\'s term for _Team_ is _Group_.\\r\\n\\r\\nGroups are designed as follows:\\r\\n\\r\\n- Groups consist of a collection of members (users)\\r\\n- Groups have a name, a type, an id, and custom data\\r\\n- Members are each assigned a role-based permission level: \\"OWNER\\", \\"ADMIN\\", or \\"MEMBER\\"\\r\\n- Groups have one (and only one) \\"OWNER\\". The OWNER of a group can add/remove members, and delete the group\\r\\n- Groups can have multiple \\"ADMIN\\"s. ADMINs are like OWNERs, except that they cannot delete the group.\\r\\n- Any \\"MEMBER\\" can edit group data\\r\\n- MEMBERs of a group can have custom attributes associated with them (can be used for custom application roles, etc.)\\r\\n- Users can be members of more than one group\\r\\n- Users can be the owner of more than one group\\r\\n- Groups can also have associated Entities (i.e. GroupEntity)\\r\\n\\r\\n### Team Chat & Notifications\\r\\n\\r\\nbrainCloud supports text-based _Team Chat_ via RTT\'s `Chat` Service. The `Chat` service supports special \\"group channels\\" for communications between the members of a group.\\r\\n\\r\\nbrainCloud also supports sending push notifications to the members of a group via the `SendRawPushNotificationToGroup()` call.\\r\\n\\r\\n### Team Leaderboards\\r\\n\\r\\nbrainCloud supports group leaderboards - which are leaderboards where the group entries, instead of player entries.\\r\\n\\r\\nbrainCloud also supports group social leaderboard calls - where the results of the player leaderboard call are filtered to just the members of the specified group.\\r\\n\\r\\n### Team Data\\r\\n\\r\\nbrainCloud supports two forms of team data:\\r\\n\\r\\n- Group Data - which is custom JSON attached to a group\\r\\n- Group Entities - which are JSON entity objects owned by a group\\r\\n\\r\\nBoth types of data are serviced via the [Group Service API](http://getbraincloud.com/api/capi/group).\\r\\n\\r\\n* * *\\r\\n\\r\\n## Virtual Currency\\r\\n\\r\\nbrainCloud provides a `VirtualCurrency` service for managing a player\'s currency balances. Developers can define as many currencies as they like - and these currencies can be automatically awarded from XP level-ups, Milestones, Quests, and Tournaments -- and of course, be purchased via in-app purchase Products.\\r\\n\\r\\nTo configure a sign-up bonus for players, simply add the desired currency amount as a reward for the initial XP level. _Note that this technique works even if your game doesn\'t otherwise use the brainCloud XP system._\\r\\n\\r\\n* * *\\r\\n\\r\\n## Virtual Goods Basics\\r\\n\\r\\nbrainCloud provides support for virtual goods via:\\r\\n\\r\\n- `ItemCatalog` service - which defines the set of items (i.e. virtual goods) that are available for purchase by the user\\r\\n- `UserItems` service - which manages the player\'s inventory of said items, including purchases and trading\\r\\n\\r\\nStandard item properties include: id, name (_localizable_), category (_user-defined_), description (_localizable_), resource ids, pricing (in _virtual currency_), tags, and custom JSON data.\\r\\n\\r\\nAdditional properties enable behaviors like _stackable_, _consumable_, _activatable_, and _tradable_.\\r\\n\\r\\nUser items also have a publishing state (DRAFT, PUBLISHED, RETIRED, REVOKED) to help control their life cycle.\\r\\n\\r\\n_Note that brainCloud does not currently support bundles - though this can be worked around using the custom JSON data and a bit of cloud code._\\r\\n\\r\\n## Virtual Goods (3rd Party)\\r\\n\\r\\nbrainCloud directly supports in-app purchases on iOS, Google, Facebook, Steam, and more.\\r\\n\\r\\nPurchases are enabled by defining _Products_ in the **Design | Marketplace | Products** screen of the _Design Portal_. Products are generally used to purchase Virtual Currency bundles, but in [brainCloud 4.9](/release/2021/10/12/release-4-9/) we add support for purchasing User Items (i.e. Virtual Goods) as well.\\r\\n\\r\\nProducts in brainCloud can be defined with multiple price points - which are convenient for scheduling sales using the **Promotions** service.\\r\\n\\r\\nTo configure Products in brainCloud for purchase, developers must first:\\r\\n\\r\\n- Configures the necessary platform integration settings. See tutorial examples for [iOS](/learn/portal-tutorials/store-integration-ios/) and [Google](/learn/portal-tutorials/store-integration-google/) to start.\\r\\n- Configure the products to be purchased in the **Design | Marketplace | Products** page of the portal. The products should be configured to award Virtual Currencies, items from the Item Catalog, and/or custom rewards via attached JSON (and custom cloud code scripts)\\r\\n- Configure the **pricing** of the products - matching up the appStore IDs with the definitions in the platform stores\\r\\n\\r\\nAt purchase time, the app will:\\r\\n\\r\\n- Retrieve a list of the products available for sale (and their corresponding platform store ids) via brainCloud\'s `AppStore` service\'s `GetSalesInventory()` call.\\r\\n- Call the Platform SDK to retrieve the localized prices for the items to display\\r\\n- Display the list of products to the user in your custom storefront\\r\\n- When a user selects purchase, the app will initiate a purchase transaction using the Platform SDK\\r\\n- The SDK will return receipt data, which the app will forward to brainCloud using the `AppStore` `VerifyPurchase()` call\\r\\n- brainCloud makes a server-to-server call to the Platform to verify the receipt data (as well as performs a few additional checks of our own)\\r\\n- If the purchase is valid, the player is awarded the contents of the Product - and the results are returned to the client app\\r\\n\\r\\nFor more information, see the brainCloud [AppStore APIs](http://getbraincloud.com/api/capi/appstore)."},{"id":"/2021/06/28/release-4-8","metadata":{"permalink":"/braincloud-apiref/release/2021/06/28/release-4-8","source":"@site/release/2021-06-28-release-4-8/index.md","title":"Release 4.8","description":"This is an early summer release with a few timely features - plus a bunch of under-the-hood improvements to support future updates.","date":"2021-06-28T00:00:00.000Z","formattedDate":"June 28, 2021","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":9.15,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 4.8","date":"2021-06-28","tags":["release-history"]},"prevItem":{"title":"GameSparks to brainCloud migration notes","permalink":"/braincloud-apiref/release/2021/09/30/gamesparks-to-braincloud-migration-notes"},"nextItem":{"title":"Release 4.7.5","permalink":"/braincloud-apiref/release/2021/05/04/release-4-7-5"}},"content":"This is an early summer release with a few timely features - plus a bunch of _under-the-hood_ improvements to support future updates.\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Search Cloud Code Scripts\\r\\n\\r\\nGot a lot of scripts? Getting hard to find the one you want? You can now search for cloud code scripts by name - across all your folders.\xa0\\r\\n\\r\\nJust type a few letters, and then click on the script name to jump to it!\\r\\n\\r\\n![](images/2021-06-21_17-55-22-1024x314.png)\\r\\n\\r\\n### Facebook Limited Login Friends\\r\\n\\r\\nFacebook has enhanced their new\xa0**Limited Login Mode**\xa0to support retrieval of the logged-in user\'s\xa0**friends**\xa0([https://developers.facebook.com/blog/post/2021/04/12/announcing-expanded-functionality-limited-login/](https://developers.facebook.com/blog/post/2021/04/12/announcing-expanded-functionality-limited-login/))\xa0- and thus we have extended brainCloud to support friend retrieval as well!\\r\\n\\r\\nFacebook only allows apps to retrieve the user\'s friends during the initial authentication operation. Since brainCloud Friend and Social Leaderboard APIs can be called anytime (during the current or subsequent play sessions) - we need to store a copy of the Facebook friends in the internal brainCloud friend list. If this feature is enabled, when a user logs in via the\xa0`AuthenticateFacebookLimited()`\xa0call, brainCloud will retrieve the user\'s Facebook friends and add them to the internal friend list for that user. Note - all friends in brainCloud are bi-directional - so their friend\'s friend lists get updated as well.\\r\\n\\r\\nTo enable this feature, go to the\xa0**Design | Core App Info | Application IDs**\xa0page, choose the\xa0**Facebook**\xa0tab, and set the\xa0_Facebook Limited Login (Retrieve friends)_\xa0drop-down to \\"Retrieve and add to internal friends (add only).\\"\\r\\n\\r\\n![](images/2021-06-21_15-16-41-1024x425.png)\\r\\n\\r\\nAdvice\\r\\n\\r\\nFor our customers that are using _3rd party authentication services_: If you are getting a list of Facebook friends from another service, you can use the new\xa0`AddFriendsFromPlatform()`\xa0call to add those friends to the internal list all at once.\\r\\n\\r\\n### Account Migration Support\\r\\n\\r\\nThe brainCloud community has long been interested in being able to migrate player accounts on-demand from one instance to another.\\r\\n\\r\\nThis is useful when:\\r\\n\\r\\n- migrating to brainCloud from another service\\r\\n- beta-testing a new release in a separate brainCloud app (or server) instance\\r\\n\\r\\nbrainCloud\'s security and privacy frameworks can make this very challenging (as they should!). In brainCloud 4.8 we\u2019ve added some new features + APIs, that when used together, can make this use case achievable.\\r\\n\\r\\nThe new features / APIs are:\\r\\n\\r\\n- **Authentication postFail**\xa0- you can now attach a custom script to an Authentication failure. This allows your custom script to perform some work (like account retrieval and creation) when an authenticate operation fails. The script then returns a special status (199) to tell the dispatcher to re-try the authentication from the beginning.\\r\\n- `GetSessionForValidatedCredential()`\xa0- a new S2S method that allows a client authentication to be performed via an S2S script. Once authenticated, the script can then retrieve and return select data from the user account.\xa0\\r\\n- `SysGetUserExport()`\xa0- a new cloud-code only method that allows a script to retrieve an export of the data associated with a user.\\r\\n\\r\\nBy putting these features together, a developer can:\\r\\n\\r\\n- Write an\xa0_authentication postFail script_\xa0for the\xa0**target app**, that will catch authentication failures and attempt to retrieve the missing user account\\r\\n- Write an\xa0_account retrieval script_\xa0for the\xa0**source app**, that can be called via S2S to retrieve the data from a user account if the supplied credentials are valid\\r\\n\\r\\nInformation\\r\\n\\r\\nFor full instructions on these use cases, see the _brainCloud Knowledgebase_.\\r\\n\\r\\n### Edit User Email Identities\\r\\n\\r\\nThe brainCloud Design Portal has been updated to provide a simple way for Support personnel to update the Email Identity + Contact Emails of users.\\r\\n\\r\\nSimply navigate to the _Credentials_ section of the **User Summary** page in **User Monitoring**, and click the **pen** icon next to the user\'s _email identity_.\\r\\n\\r\\n![](images/2021-06-28_13-45-05-1024x837.png)\\r\\n\\r\\nNote that if you _only_ want to edit a user\'s Contact Email - we have added an edit feature (via another **pen** icon) near that field as well.\\r\\n\\r\\n### Miscellaneous\\r\\n\\r\\nIn addition, the following new changes have been added to the platform:\\r\\n\\r\\n- _**Division improvements**_\xa0- we have adjusted the Division Set algorithms to allow players to post scores for rounds that started\xa0_before_\xa0the Division instance was created. This is important because some apps have their user\u2019s join divisions just-in-time as they are posting their first score - and thus if the user is the first player in the division, their play round would have begun\xa0_before_\xa0the division tournament itself had been created! (And thus it was rejected by brainCloud). The new algorithm will dynamically adjust the start time of the division if a player attempts to record a score from before the Division was created. Note that the start time of the round must be within 2 X the Buffer time defined for the tournament.\\r\\n- _**Authentication Pre- and PostFail- hooks**_\xa0- we have added both pre- and postFail- hook support for the Authentication services. This work was done in association with the Account Migration feature (above) - but they will undoubtedly will be useful in their own right!\\r\\n- _**Lobby + Relay Server protocol improvements**_ \\\\- we have tightened up the data structures and IDs commonly used between Lobby Services and Relay Services to be more consistent. This is in preparation for new Multiplayer features coming in the near future. The biggest impact of this is the replacement of the `owner` field in the Lobby data with the proper `ownerCxId` field. To help migrate to the new structure, a new compatibility flag has been introduced, which when enabled, causes both the `owner` and `ownerCxId` fields to be present in Lobby data messages. _(This flag is currently forced to enabled for both new and existing apps.)_\\r\\n- _**New Client Library calls**_ \\\\- we have added a few calls that were introduced in recent releases as _cloud-code only_, to the 4.8 client libs:\\r\\n    - AppStore - the\xa0`RefreshPromotions()`\xa0call has been added\\r\\n    - Events - the\xa0`DeleteIncomingEvents()`,\xa0`DeleteIncomingEventsOlderThan()`\xa0and\xa0`DeleteIncomingEventsByTypeOlderThan()`\xa0calls have been added\\r\\n    - User Files - we have added the\xa0`UploadFileFromMemory()`\xa0call to the JavaScript library, and likewise improved the Unity implementation of the call.\\r\\n- _**Audit Logging**_\\r\\n    - Added additional tracking for changes to Team information\\r\\n- _**Cloud-code Script Performance**_\\r\\n    - Updated Rhino engine from\xa0`1.7.12`\xa0to\xa0`1.7.13`\\r\\n    - We have enhanced the API Server bootup strategy to pre-load and cache both scripts and leaderboard configurations for active apps - resulting in faster launch performance for cold servers\\r\\n    - Added big message support to user batch script operations\\r\\n- _**Group & GroupEntity Performance Improvements**_\\r\\n    - We have adjusted the indexes and sharding strategies for _Groups_ and _Group Entities_ to improve performance.\\r\\n- _**Scheduled / S2S Scripts**_\\r\\n    - Improved error logging for Scheduled and S2S Scripts\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe have made the following portal improvements:\\r\\n\\r\\n### Design\\r\\n\\r\\n- **Core App Info | Application IDs**\\r\\n    - New option to retrieve friends when using\xa0**Facebook Limited Login** added to the\xa0**Facebook**\xa0tab\\r\\n- **Core App Info | Advanced Settings**\\r\\n    - New compatibility feature:\xa0_Include legacy lobby \u2018owner\u2019 field in API output_. Note - the new code + features that use this flag aren\u2019t completely ready yet - so changing the flag is disabled. The flag will be set to true (enabled) for both new and existing apps.\\r\\n- **Cloud Code | Scripts**\\r\\n    - There is a new search box on the cloud code scripts page. Just type a few letters, and click on the name of the script you want to view/edit!\\r\\n- **Leaderboards | Leaderboard Configs**\\r\\n    - The _Leaderboard Configs_ page has been refactored to better support apps with thousands of leaderboards\\r\\n- **General**\\r\\n    - Privileges + Permissions handling - We have re-worked the underlying permissions and privilege caching and enforcement code to be more consistent\\r\\n\\r\\n### Monitoring\\r\\n\\r\\n- **User Monitoring | User Summary**\\r\\n    - You can now change a user\u2019s email identity credentials by clicking on the pen icon next to their email identity in the\xa0**Credentials**\xa0section of the page. When editing the user\u2019s email identity, you are also given the option to change the user\u2019s\xa0_contact email_\xa0as well.\\r\\n    - You can also change the user\u2019s\xa0_contact email_\xa0directly via the **pen** icon by the _Contact Email_ field in the _Account Information_ section.\xa0\\r\\n\\r\\nWarning\\r\\n\\r\\n_Note that changing a user\u2019s contact email alone does not change their email identity (which is the email address used to log into your app)._\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the\xa0brainCloud\xa0API:\\r\\n\\r\\n- **Bridge**\\r\\n    - New `Sleep( <millis> )` call added to facilitate waiting before retry operations. Can only be called from cloud-code. Note - the max sleep time is restricted to the timeout setting of the script.\\r\\n    - New\xa0`GetSessionForValidatedCredential()`\xa0allows an S2S script to acquire a client session for the account associated with the provided user credentials, after first confirming that the credentials are valid, of course\\r\\n- **Friend**\\r\\n    - New\xa0`AddFriendsFromPlatform()`\xa0call allows devs to add multiple friends to the internal brainCloud friends list, specifying the platform-specific external IDs, instead of brainCloud profileIds. \u2190 saving multiple lookup calls.\\r\\n- **Global App**\\r\\n    - New\xa0`SysGetAppSecret()`\xa0method returns the secret for the current session. Useful for apps using the Shared Accounts feature (between Parent and Child apps), and that don\u2019t want to package the secrets of all child apps in the client binary.\\r\\n- **Global Files V3**\\r\\n    - New cloud-code only methods for confirming files exist:\xa0`CheckFilenameExists()`\xa0and\xa0`CheckFullpathFilenameExists()`.\\r\\n- **Identity**\\r\\n    - New cloud-code only\xa0`SysChangeEmailIdentity()`\xa0method allows the email address associated with a user to be changed without having the user\u2019s password. This is of course a dangerous method not suitable for client usage - so it is cloud-code only.\\r\\n- **Leaderboard**\\r\\n    - New\xa0`SysCreateLeaderboard()`\xa0call allows for the programmatic creation of Group as well as Player leaderboard. The old call, `CreateLeaderboard()`, only supported the creation of Player leaderboards - and has been deprecated.\\r\\n    - New\xa0`SysEditLeaderboard()`\xa0call likewise allows the editing of group leaderboards.\\r\\n- **Lobby**\\r\\n    - We have added 3 new methods in preparation for our upcoming\xa0_Join-in-progress_\xa0and\xa0_Long-lived Lobbies_ features:\xa0`SysRoomStopped()`,\xa0`SysMemberLeft()`, and\xa0`SysGetLobbyMember()`. Stay tuned!\\r\\n- **User**\\r\\n    - New cloud-code only\xa0`SysGetUserExport()`\xa0call allows a script to retrieve an export of the specified user\u2019s data.\\r\\n\\r\\nWe have also deprecated the following methods:\\r\\n\\r\\n- **Leaderboard**\\r\\n    - `CreateLeaderboard()`\xa0- replaced with\xa0SysCreateLeaderboard()\xa0method (see above)\\r\\n    - `EditLeaderboard()`\xa0- replaced with\xa0SysEditLeaderboard()\xa0method (see above)\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All supported libraries have been updated with the latest API enhancements. Go get \'em!\\r\\n- Documentation updates\\r\\n    - Updates to tutorials and API References to match the new features/APIs in this release\\r\\n- Important Fixes\\r\\n    - BCLOUD-29 - LobbyService joinLobby() is broken in some circumstances\\r\\n    - BCLOUD-56 - [PROD] Tournament rewards with only \\"custom\\" rewards cannot be claimed\\r\\n    - BCLOUD-68 - Logging performance improvement\\r\\n    - BCLOUD-519 - User Monitoring / Logs - Fix handling of mismatched request/response data for displayed packets.\\r\\n    - BCLOUD-575 - Add packetId as a field in requestResponse logs\\r\\n    - BCLOUD-634 - ErrorLogEntry timestamps are slightly off\\r\\n    - BCLOUD-698 - Handle \\"duplicate key\\" exception on Leaderboard Service - Post Dynamic (player or group score)\\r\\n    - BCLOUD-707 - Allow Tournament Scores to be posted to Division Set Instance for round started before joined tournament\\r\\n    - BCLOUD-710 - ACE Editor: when copying and pasting content sometimes that pasted content is missing from the submitted data.\\r\\n    - BCLOUD-793 - Defect in memcached lock handling for temporary sessions\\r\\n    - And fixed issue with \\"edit leaderboard\\" APIs potentially resetting pacer settings\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2021/05/04/release-4-7-5","metadata":{"permalink":"/braincloud-apiref/release/2021/05/04/release-4-7-5","source":"@site/release/2021-05-04-release-4-7-5/index.md","title":"Release 4.7.5","description":"Release 4.7.5 is a surgical release to improve brainCloud support in a few key feature areas (mostly Purchases + Promotions). We hope you dig it!","date":"2021-05-04T00:00:00.000Z","formattedDate":"May 4, 2021","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":4.48,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 4.7.5","date":"2021-05-04","tags":["release-history"]},"prevItem":{"title":"Release 4.8","permalink":"/braincloud-apiref/release/2021/06/28/release-4-8"},"nextItem":{"title":"Release 4.7 is live!","permalink":"/braincloud-apiref/release/2021/03/24/release-4-7"}},"content":"Release 4.7.5 is a surgical release to improve brainCloud support in a few key feature areas (mostly Purchases + Promotions). We hope you dig it!\xa0\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Promotions\\r\\n\\r\\nThis release addresses some limitations of the existing promotions system and introduces a few cool new tricks.\\r\\n\\r\\nThe improvements, in no particular order, are:\\r\\n\\r\\n- Added new\xa0**Purchase Rewards Hook**\xa0- a new API Hook that allows apps to override the configured reward amounts for product purchases. This is useful for companies that like double the rewards of a promotional item, instead of offering the same items for less $.\xa0_You can find a script example [here](http://help.getbraincloud.com/en/articles/5196453-using-a-post-hooked-cloud-script-to-override-product-purchase-rewards)._\\r\\n- Added\xa0**max # of purchases**\xa0for\xa0_Automated Promotions_\xa0- you can now configure Automated Promotions to expire early if a user makes a purchase - limiting that special deal to the first <x\\\\> purchases they make.\\r\\n- Added\xa0**max # of re-triggers**\xa0for\xa0_Automated Promotions_\xa0- you can now configure Automated Promotions to re-trigger a finite number of times\\r\\n- New AppStore\xa0**RefreshPromotions()**\xa0call refreshes the Segments and Promotions of the current user. Useful for apps that want to check if a promotion became active during the play session. _Note - cloud-code only for now._\\r\\n\\r\\nIn addition, we have addressed a limitation where Automated Promotions targeting\xa0_existing_\xa0Segments would not trigger for users\xa0_already_\xa0in that Segment. Those users (in existing segments) will now have the promotion applied by a new job that kicks off when the Automated Promotion is enabled.\\r\\n\\r\\n### Purchases\\r\\n\\r\\nWe have also made improvements to the saved purchase transaction data - as viewed via the **User Monitoring | Transactions** page. For new purchases, you can now see:\\r\\n\\r\\n- Any\xa0**rewards**\xa0associated with the purchase\\r\\n- Where the purchase was made during a\xa0**promotion**\\r\\n- And whether the purchase has been\xa0**refunded**. Note - for purposes of brainCloud, chargebacks also appear as refunds.\xa0_Also, note that these states only apply to Facebook purchases._\\r\\n\\r\\n### Miscellaneous\\r\\n\\r\\n- **Builder API** \\\\- Our \u201cofficial official\u201d beta release of Builder API begins now. Our planned 4.7.0 roll-out was delayed while we put in some finishing touches.\xa0_Note - still for private licensees and approved BaaS customers only._\\r\\n- **Cloud-code Script Hook**\xa0- we have added a cloud code script pre-hook. This can be helpful when re-organizing scripts into folders (using our new Cloud Code Folders feature). This hook can allow you to rework your script organization, while still supporting existing clients attempting to run scripts from their old locations. _See this [article](http://help.getbraincloud.com/en/articles/5196058-using-a-pre-hooked-cloud-script-to-locate-the-moved-scripts-for-runscript-call) for an example of how to use it._\\r\\n- **Events**\xa0- we have added more flexible ways of deleting incoming events for a user. See the\xa0**API Changes**\xa0section for more details\u2026\\r\\n- **Room & Relay Servers**\xa0- we have reworked our room/relay server mechanisms to be more efficient. You may notice more responsive cleaning-up of server resources.\\r\\n- **RTT**\xa0- Improved clean-up (server-side) of stale client connections.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe\'ve made the following portal changes:\\r\\n\\r\\n### Design\\r\\n\\r\\n- **Cloud Code | API Hooks**\\r\\n    - Added new AppStore PurchaseRewardHook - configure it as a \u201cPost\u201d hook to dynamically override the default awards of an item.\\r\\n    - Added the ScriptService to the list of services that support API Hooks. So for example you can now add a Pre-hook to \u201cRunScript\u201d that adjusts the name/path of a script before running it. Useful when migrating to Cloud Code folders while still maintaining compatibility with existing clients.\\r\\n- **Cloud Code | Scripts**\\r\\n    - We have updated the Scripts screen to default to showing up to 100 scripts per page. You are welcome!\xa0\ud83d\ude42\\r\\n- **Promotions | Automated**\\r\\n    - You can now set the\xa0**max # purchases**\xa0and\xa0**max # re-triggers**\xa0for automated promotions. Leave the value blank for\xa0_unlimited_\xa0- which is the\xa0_default_.\\r\\n\\r\\n### Monitoring\\r\\n\\r\\n- **Global Monitoring | Recent Errors**\\r\\n    - Updated the source of legacy\xa0servicemix\xa0errors to the more up-to-date\xa0cron\xa0and\xa0datastream\xa0sources\\r\\n- **User Monitoring | Transactions**\\r\\n    - We have beefed up the Transactions page to show\xa0**rewards**,\xa0**promotions**\xa0and\xa0**refund**\xa0status of transactions. There is also more transactional info shown via the Transaction Action menu for Facebook purchases.\xa0\\r\\n    - **Steam**\xa0pending transactions are no longer shown (by default). There is a new toggle button to toggle viewing pending transactions.\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the\xa0brainCloud\xa0API:\\r\\n\\r\\n- **AppStore**\\r\\n    - The\xa0`GetEligiblePromotions()`\xa0method (and other promotions methods) now include the new num purchases and retriggers counts in the responses when appropriate.\\r\\n    - Added a cloud code method,\xa0`RefreshPromotions()`, that refreshes the segments and promotions associated with a user. Note that a user\u2019s segments and promotions are\xa0_automatically refreshed_\xa0when they authenticate. Calling this method allows apps to periodically refresh the segment + promotion data for the user during the play session. Note that this is an expensive call - calling it is equates to 2 API counts (technically 1 API + 10 bulk API) - so use it sparingly!\\r\\n- **Events**\\r\\n    - New event deletion methods -\xa0`DeleteIncomingEvents()`,\xa0`DeleteIncomingEventsOlderThan()`\xa0and\xa0`DeleteIncomingEventsByTypeOlderThan()`.\xa0\\r\\n\\r\\n_Note that all of the new methods are cloud-code only for now - but will be added to the client libraries for brainCloud 4.8._\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - No changes to the Client Libraries for 4.7.5.\\r\\n- Documentation updates\\r\\n    - Updated API Reference docs and examples\\r\\n- Important Fixes\\r\\n    - BCLD-7072 - Automated Promotion job to run when promotion created or new target segment added\\r\\n    - BCLD-7095 - Failure to extend the TTL of an RTT cx should result in the termination of the socket connection\\r\\n    - BCLD-7201 - Product pricing lookups should be specific to store type\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2021/03/24/release-4-7","metadata":{"permalink":"/braincloud-apiref/release/2021/03/24/release-4-7","source":"@site/release/2021-03-24-release-4-7/index.md","title":"Release 4.7 is live!","description":"brainCloud 4.7 is a big release - with lots of new features and even more under-the-covers. Hold onto your hats!","date":"2021-03-24T00:00:00.000Z","formattedDate":"March 24, 2021","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":11,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 4.7 is live!","date":"2021-03-24","tags":["release-history"]},"prevItem":{"title":"Release 4.7.5","permalink":"/braincloud-apiref/release/2021/05/04/release-4-7-5"},"nextItem":{"title":"Release 4.6 is live!","permalink":"/braincloud-apiref/release/2020/11/17/release-4-6"}},"content":"brainCloud 4.7 is a big release - with lots of new features and even more under-the-covers. Hold onto your hats!\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Cloud Code Folders\\r\\n\\r\\nThe big feature of 4.7 is cloud code folder management. Yes - you will finally be able to organize your cloud code scripts properly!\\r\\n\\r\\n_We know - some of you have been waiting for this feature forever. To be fair - when we originally built brainCloud, with the rich API we had designed (now at > 500 API calls!), we expected custom scripts to be few (i.e. less than a dozen) and small (i.e. less than 100 lines). Let just say that some of you have\xa0**greatly exceeded**\xa0those expectations._ \ud83d\ude42\xa0_This feature is for you!_\\r\\n\\r\\nKey components of this feature:\\r\\n\\r\\n- _Folder Tree_\xa0- Updated\xa0**Design | Cloud Code | Scripts**\xa0Screen with support for creating and navigating within folders\\r\\n- _Enhanced Import & Export Support_\xa0- Enhancements to\xa0**Import**\xa0and\xa0**Export**\xa0functions to allow importing/exports of the entire script collection (with folders intact), or optionally individual folders (with recursion, of course).\\r\\n- _Deployment Support_ \\\\- The\xa0**Deploy**\xa0features have been enhanced to support cloud code folders. The full script tree will be pushed when you deploy from one app to another. Note - using the new\xa0**Builder CLI**, you can even\xa0**push individual folders of scripts**\xa0from one app to another - great for\xa0_syncing common scripts_\xa0between apps!\\r\\n- _Rename Scripts_ \\\\- Scripts now have\xa0scriptIds\xa0that help to preserve linkages to scripts as they are\xa0_moved_\xa0or\xa0_renamed_. And hey, you can now\xa0_rename_\xa0scripts!\\r\\n- _Author History_\xa0- We also now record the name of the team member who made script changes\\r\\n- _Smart Updates_\xa0- finally, before updating a script during a Deploy Push or Import, we first take a look to see if it really changed. If not, we skip the update without increasing the version - which makes the version history of scripts smaller and much more meaningful!\\r\\n\\r\\nInformation\\r\\n\\r\\nNote that the\xa0new Scripts screen, with\xa0**Folder Support**, will\xa0**not be enabled**\xa0immediately upon release of 4.7. Out of an abundance of caution, we will wait a few days to ensure that there aren\u2019t any unforeseen issues with the underlying schema changes before turning this feature on fully.\xa0\\r\\n\\r\\n### Arcade-style Leaderboards\\r\\n\\r\\nBuilding a game with an old-school feel? brainCloud 4.7 adds support for arcade-style leaderboards - where users can have more than one entry in the leaderboard! Great for daily or weekly rotating high scores!\\r\\n\\r\\nCharacteristics of arcade-style leaderboards:\\r\\n\\r\\n- Players can have\xa0_more than one entry_\xa0in the leaderboard (unlimited)\\r\\n- Arcade-style leaderboards are created by setting the\xa0_Leaderboard type_\xa0to\xa0_Arcade High_\xa0(i.e. higher scores are better) or\xa0_Arcade Low_\xa0(i.e. lower scores are better). Note that the leaderboard type must be set at the time of leaderboard creation. You cannot change an existing leaderboard to/from Arcade-style - due to the differences in how the data is stored.\\r\\n- Arcade-style leaderboards\xa0_must rotate_\xa0at least\xa0_weekly_; otherwise, the stored data would grow at an uncontrollable rate.\\r\\n- Arcade-style leaderboards do\xa0_not_\xa0currently support\xa0_tournaments_\xa0or\xa0_divisions_.\xa0_We will consider adding support in the future if demand warrants._\\r\\n- The standard Leaderboard APIs work as-is for Arcade-style leaderboards, with the following adjustments:\\r\\n    - RemovePlayerScore()\xa0removes all of a player\u2019s scores(s) from the specified leaderboard\\r\\n    - GetPlayerScore()\xa0returns only a single score (i.e. the player\u2019s best score) from the specified leaderboard\\r\\n    - A new method,\xa0GetPlayerScores(), returns all of a player\u2019s scores (up to a max limit) from the specified leaderboard\\r\\n    - GetPlayerScoresFromLeaderboards()\xa0returns only the best score per leaderboard specified\\r\\n\\r\\n### Facebook Limited Login Mode\\r\\n\\r\\nbrainCloud adds support for the new\xa0**Facebook Limited Login**\xa0mode \u2013 which allows apps to utilize a Facebook Login while adhering to new Apple guidelines (and user preferences) that prohibit sharing of tracking data with 3rd parties.\\r\\n\\r\\nFor more information on this feature, see the blog post\xa0[here](/blog/2021/03/11/apple-ios-14-5-privacy-facebook-limited-login-mode/).\\r\\n\\r\\n### Steam and Playstation Friend Support\\r\\n\\r\\nbrainCloud now has direct support for Steam and Playstation friends.\\r\\n\\r\\nThis means your apps can more easily create social features (including social leaderboards) on those platforms. Full Steam and Playstation support have been added to the Friend Service and Leaderboard Service APIs.\\r\\n\\r\\nAs a bonus, we have also reworked how the caching of friend data works. This should mean fewer calls to the 3rd party systems (i.e. Facebook, Steam, and Playstation) and faster responses to the social API calls - including\xa0`ListFriends()`,\xa0`GetSocialLeaderboard()`, etc.\\r\\n\\r\\n### Improved Unity Plug-in\\r\\n\\r\\nbrainCloud has a new-and-improved Unity Plug-in. Redesigned and re-implemented from the ground up, the new plug-in:\\r\\n\\r\\n- Has a cleaner User Interface\\r\\n- Is more secure - no longer stores appIds, secrets, etc. in plain text. Now requires a re-login to change settings.\\r\\n- Can now enable/disable logging from the Plug-in without code changes\\r\\n- Refer to Github Documentation here:\xa0[https://github.com/getbraincloud/braincloud-csharp/tree/master](https://github.com/getbraincloud/braincloud-csharp/tree/master)\xa0for details on implementing the new plugin into your projects\xa0\\r\\n\\r\\n### [Beta] Builder CLI\\r\\n\\r\\nbrainCloud 4.7 marks the\xa0_beta release_\xa0of our Builder CLI tool (and the underlying Builder API).\xa0\\r\\n\\r\\nThe Builder API currently allows the following:\\r\\n\\r\\n- App management\\r\\n    - create, update and delete apps within a team\\r\\n    - manage app lifecycle - enable/disable, etc.\\r\\n- Deployment management\\r\\n    - scriptable deployment of configuration meta-data (including files + scripts + unowned migrate-able custom entities) from app to app\\r\\n    - deployment of scripts (independent of app metadata); support full script tree or individual folders\\r\\n- Script management\\r\\n    - create, update and delete scripts within an app\xa0\\r\\n- Super features\\r\\n    - plus additional features for private licensees\\r\\n\\r\\nNote that the Builder API does not fully duplicate or replace the SYS APIs available via Client APIs and S2S. Its primary purpose is to provide higher-level access to features that are not appropriate at the Client and S2S API levels.\\r\\n\\r\\nInformation\\r\\n\\r\\nAccess to the Beta Release of the Builder CLI is limited to approved customers only. _Contact support and/or your brainCloud Account Rep for access_.\\r\\n\\r\\n### Additional Features\\r\\n\\r\\nThe following additional features are also included in this release:\\r\\n\\r\\n- _Apple Push Notification HTTP/2 support_\\r\\n    - brainCloud now supports Apple\u2019s HTTP/2 based APNS protocol - which is important as support for their legacy protocol ends on\xa0**March 31st, 2021**.\\r\\n    - Note that no changes are required to your clients or app configurations to support the new protocol\\r\\n- _Automated Promotions Improvements_\\r\\n    - We have added improvements to several common use-cases - including adding Automated Promotions to existing segments.\\r\\n    - **_Update - we are delaying these improvements to a 4.7.1 patch that will be available shortly after the 4.7.0 release._**\\r\\n- _Improved Custom Entity Sharding Support_\\r\\n    - Horizontal Sharding allows you to spread your custom entity collection across our MongoDB cluster - improving read/write response times for large collections\\r\\n    - Sharding a collection means a key must be chosen to use to distribute the data. This key must be backed by a custom index in the collection.\\r\\n        - Owned collections are always sharded via the\xa0\u201cownerId\u201d\xa0field. As of 4.7, brainCloud now automatically adds an\xa0{ \u201cownerId\u201d: \u201chashed\u201d }\xa0index for this purpose.\\r\\n        - Unowned collections are sharded on a custom basis based on the entity schema, and the usage patterns of the app. Once the key has been chosen, a custom index must be chosen (or created) to support that key - and must be marked as a shard key index. Indexes marked as a shard key index cannot be deleted via the Design Portal.\\r\\n        - Note - once set, the shard key for a collection cannot be changed. So choose wisely!\\r\\n    - Sharding must be enabled on a per-entity basis by brainCloud Support Personnel. Contact support via the Chat Widget if you would like to discuss sharding one or more of your collections.\xa0\\r\\n- _Improved Lobby Performance_\\r\\n    - The underlying Lobby Processing code had been re-written to be much more efficient.\\r\\n- _Inventory Catalog Image-handling overhaul_\\r\\n    - We have improved how the system handles embedded images so that images are now properly copied when deployed from app-to-app.\\r\\n- _MongoDB 4.0 Support_\\r\\n    - brainCloud 4.7 now officially supports MongoDB 4.0\\r\\n    - All Private brainCloud deployments will be moved to MongoDB 4.0 within the next month\\r\\n- _Oculus authentication_ \\r\\n    - brainCloud has added direct support for Oculus authentication\\r\\n- _Playstation Network authentication_\\r\\n    - To facilitate PSN Friend Support, brainCloud has added support for direct PSN authentication; previously apps had to use the external authentication feature for PSN authentication\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe have made changes to the following sections of the portal:\\r\\n\\r\\n### Design\\r\\n\\r\\n- **Core App Info | Application Ids**\\r\\n    - Added new\xa0**PSN**\xa0and\xa0**Oculus**\xa0platform integration tabs\\r\\n- **Core App Info | Platforms**\\r\\n    - Added new Oculus platform\\r\\n- **Core App Info | Advanced Settings**\\r\\n    - Added new \u201cUse Legacy Player Id\u201d flag, which if true, causes the legacy\xa0playerId\xa0field to function and be returned in some APIs in\xa0_addition_\xa0to the newer, proper\xa0profileId\xa0field. Note the fields are synonymous (and contain the same values).\\r\\n    - Added new \u201cAdd custom paths for Item Catalog images in API\u201d flag to determine whether the Item Catalog allows custom image paths in the\xa0image\xa0field. Going forward, this behaviour has been deprecated; developers are free to include custom image information in the JSON blob that can be attached to catalog items.\\r\\n- **Cloud Code | Scripts (Legacy)**\\r\\n    - The old cloud code scripts screen is still available (for a limited time) - but have been labeled with (Legacy).\xa0\\r\\n    - Note that you can only edit scripts present in the root script folder using this screen.\\r\\n- **Cloud Code | Scripts**\\r\\n    - The new Scripts service!\\r\\n    - Allows full editing and management of scripts - including creating folders, moving scripts, exports and imports.\\r\\n- **Cloud Data | Custom Entities**\\r\\n    - We now indicate which entities are Sharded, and if un-owned, which Index is used to back up the Shard key.\\r\\n    - Note that sharding a Custom Entity collection is done by brainCloud Support Personnel upon request\\r\\n- **Leaderboards | Leaderboard Configs**\\r\\n    - Added new\xa0**Arcade High**\xa0and\xa0**Arcade Low**\xa0leaderboard types.\\r\\n- **Promotions | Automated**\\r\\n    - Now properly enforces that an Automated Promotion must target at least one Segment.\\r\\n    - You must now create and save an Automated Promotion before enabling it. This is because enabling an Automated Promotion now triggers a batch process against all the users of the configured segments \u2013 we want to encourage the developer to get the promotion configured properly\xa0_before_\xa0enabling it.\xa0\\r\\n\\r\\n### Monitoring\\r\\n\\r\\n- **Global Monitoring | Leaderboards**\\r\\n    - Added support for new Arcade-style leaderboards\\r\\n- **Global Monitoring | Server Logs**\\r\\n    - Added new Elapsed time column to easily convey incoming S2S and webhook performance\\r\\n- **User Monitoring | Select User**\\r\\n    - Added PSN and Oculus IDs to the available search filters\\r\\n- **User Monitoring | Friends**\\r\\n    - Added support for Steam and PSN friends\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the\xa0brainCloud core\xa0APIs:\\r\\n\\r\\n### Client APIs:\\r\\n\\r\\n- **BrainCloudWrapper**\\r\\n    - Added new\xa0_authenticate_\xa0and\xa0_smart-switch_\xa0calls for\xa0_FacebookLimited_,\xa0_PlaystationNetwork,_\xa0and Oculus.\\r\\n- **Authentication**\\r\\n    - Methods for the new authentication types - `AuthenticateFacebookLimited()`, `AuthenticatePlaystationNetwork()`, `AuthenticateOculus()`\\r\\n- **CustomEntity**\\r\\n    - The existing\xa0`sysDropIndex()`\xa0method has been deprecated and replaced with the new\xa0sysDropIndexName()method - which requires the index Name to be provided in addition to the keys of the index. This fixes an issue where it was unclear which index to delete in cases where multiple indexes have the same keys, but different collation settings.\\r\\n- **Friend**\\r\\n    - Added support for\xa0\u201dSteam\u201d\xa0and\xa0\u201dPlaystationNetwork\u201d\xa0to Friend APIs\\r\\n    - Added new method,\xa0`GetMySocialInfo()`\xa0that returns social platform info for the current user\\r\\n- **Identity**\\r\\n    - Added new\xa0_Attach_,\xa0_Detach_\xa0and\xa0Merge\xa0calls for the new\xa0FacebookLimited,\xa0PlaystationNetwork,\xa0and\xa0Oculus identity types.\\r\\n- **ItemCatalog**\\r\\n    - The Item Catalog service has been refactored to enable better image-file handling - especially when migrating items from app to app during deployment\\r\\n    - To facilitate this, the service (by default) no longer allows for custom image paths (i.e. non-brainCloud anchored paths) to be set in the\xa0image\xa0field. Apps wanting to use custom image URLs can use the custom JSON section or resource data sections for this information.\\r\\n    - There is a new compatibility flag,\xa0_Allow custom paths for Item Catalog images in API_, which controls the enforcement of this new behavior.\\r\\n- **Leaderboard**\\r\\n    - Added new method,\xa0GetPlayerScores(), for use with Arcade-style leaderboards\\r\\n- **User**\\r\\n    - SysGetPage()\xa0and\xa0SysGetPageOffset()\xa0calls updated to return\xa0profileId\xa0instead of\xa0playerId. New compatibility flag added (and defaults to true for existing apps) to preserve old behaviour.\\r\\n\\r\\n### S2S APIs:\\r\\n\\r\\n- **CustomEntity**\\r\\n    - The new\xa0`sysDropIndexName()`\xa0call has been added to the available S2S APIs.\\r\\n- **Presence**\\r\\n    - The\xa0`getPresenceOfUsers()`\xa0call has been added to the S2S APIs.\\r\\n    - Note that we have corrected the documentation to accurately reflect that only the \u201csys\u201d calls, plus the\xa0`getPresenceOfUsers()`\xa0call, are available via S2S.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All libraries have been updated with the latest API enhancements. Go get \'em!\\r\\n    - Better RTT disconnect handling in libraries\\r\\n- Documentation and Examples updates\\r\\n    - API Reference updated with the latest API calls\\r\\n    - All Unity Examples updated with the new Unity Plug-in\\r\\n    - The Unity Space Shooter example now features an Arcade-style leaderboard\\r\\n    - New Google IAP Unity Example and tutorial for integrating with brainCloud\\r\\n    - Unreal S2S has a new c++/blueprint unreal project to demonstrate using brainCloud s2s calls\\r\\n    - Miscellaneous doc + example updates\\r\\n- Important Fixes\\r\\n    - BCLD-7012 - Core App Info | Advanced Settings - The App Disabled reason needs to allow only JSON maps\\r\\n    - BCLD-6932 - On deploy/import config, no longer drop Custom Entity indexes in target app if not in source app and record entity config indexes not applied\\r\\n    - BCDL-6689 - User Service - GetSysPage/Offset returning profiled as \u201cplayerId\u201d. Fixed, and compatibility flag added.\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2020/11/17/release-4-6","metadata":{"permalink":"/braincloud-apiref/release/2020/11/17/release-4-6","source":"@site/release/2020-11-17-release-4-6/index.md","title":"Release 4.6 is live!","description":"brainCloud 4.6 is mostly an under-the-covers technology refresh:","date":"2020-11-17T00:00:00.000Z","formattedDate":"November 17, 2020","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":7.145,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 4.6 is live!","date":"2020-11-17","tags":["release-history"]},"prevItem":{"title":"Release 4.7 is live!","permalink":"/braincloud-apiref/release/2021/03/24/release-4-7"},"nextItem":{"title":"Release 4.5.6 is live!","permalink":"/braincloud-apiref/release/2020/09/16/release-4-5-6"}},"content":"brainCloud 4.6 is mostly an under-the-covers technology refresh:\\r\\n\\r\\n- We have reworked our\xa0_database access layer to be compatible with MongoDB 4.0_\xa0and beyond\xa0\u2013 all while maintaining API compatibility for our customers, of course.\\r\\n- We have moved our\xa0_reporting services_\xa0from our API Servers to our Datastream Servers for\xa0_improved performance and stability_\xa0for\xa0_larger exports_.\\r\\n- We have improved the\xa0_RTT connection handling_\xa0code in our\xa0_client libraries_.\\r\\n- We have removed a slew of older\xa0_deprecated calls_\xa0from our\xa0_client libraries._\\r\\n\\r\\nOn top of all that, we did add a few new features - so read on for the details!\\r\\n\\r\\n* * *\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### **Script API Usage Stats**\\r\\n\\r\\nWe have added a new feature to our\xa0_API Explorer_\xa0and\xa0_Script Editor_\xa0to help you assess and tune the performance of your scripts.\\r\\n\\r\\nThe new API Usage log lists the API calls (by service and operation) that your script made, and calculates the API Count that will be used for billing purposes. Handy!\\r\\n\\r\\n(Remember, the first 3 calls from a script are free - and each call after that is 1/2 count).\\r\\n\\r\\nFewer calls = lower server utilization = lower costs = faster scripts. It\u2019s win:win:win folks!\\r\\n\\r\\n![](images/2020-11-16_17-51-58-1.png)\\r\\n\\r\\n### SAML End-user Authentication\\r\\n\\r\\nbrainCloud has been enhanced to support SAML for end-user authentication. This is mostly relevant for non-gaming\\\\* customers who want to integrate their brainCloud app with a corporate directory.\\r\\n\\r\\nOur SAML authentication builds upon the External Authentication feature, providing several key endpoints that can be used for initiating calls and receiving callback from the SAML identity provider.\\r\\n\\r\\nSee the SAML Authentication knowledge-base article for more information.\\r\\n\\r\\nAdvice\\r\\n\\r\\nbrainCloud for non-gaming apps? Certainly! All the qualities that make brainCloud great for games (fast, reliable, scalable and inexpensive) make it great for enterprise apps as well as games. Heck - even the gaming features are useful for engaging consumers via Gamification. brainCloud for all the things!\xa0\ud83d\ude42\\r\\n\\r\\n### Random Custom Entities\\r\\n\\r\\nWe have added a new API that supports the retrieval of random custom entities.\\r\\n\\r\\nThe new API is called\xa0`GetRandomEntitiesMatching()` and takes as parameters the\xa0entityType, a JSON query filter, and the number of entities to return.\xa0\\r\\n\\r\\n### API Keys\\r\\n\\r\\nWe are developing a new Builder API mechanism for developers. This will enable API-driven management of teams, apps, and scripts via external services and tools.\\r\\n\\r\\nWe are hopeful that this, together with Cloud Code folders (coming soon), will allow devs to more efficiently integrate brainCloud with their build processes.\\r\\n\\r\\nOur new API keys system is a foundational building block. To access any Builder API method, the following conditions must be met:\\r\\n\\r\\n- Builder API access must be enabled for the\xa0_Team_\xa0itself\\r\\n- Builder API access must be enabled for the\xa0_User_\xa0who owns the key (on the target\xa0_Team_)\\r\\n- The Builder API\xa0_key_\xa0must be\xa0_valid_\xa0and\xa0_not expired_\\r\\n\\r\\nWe will provide more information on the Builder API in the coming months.\\r\\n\\r\\n### RTT Connection Handling\\r\\n\\r\\nAs mentioned above, we have made significant improvements to RTT Connection Handling in the client libraries.\\r\\n\\r\\nThe improvements across all libraries include:\\r\\n\\r\\n- Refactored the underlying code to keep track of RTT connection state via a new\xa0RTTConnectionStatus\xa0enum with the following values -\xa0CONNECTED,\xa0DISCONNECTED,\xa0CONNECTING\xa0and\xa0DISCONNECTING.\\r\\n- Added a new\xa0GetConnectionStatus()\xa0method to return this status.\xa0\\r\\n- The existing\xa0IsRTTEnabled()\xa0call still works - but now simply returns\xa0true\xa0if the status is\xa0CONNECTED.\\r\\n\\r\\nIn Unity and Unreal, we have also:\\r\\n\\r\\n- Added a new\xa0WebsocketStatus\xa0enum (with values\xa0OPEN,\xa0CLOSED,\xa0MESSAGE,\xa0ERROR, and\xa0NONE) which is used internally to keep track of the WebSocket status. This allows the library to catch an annoying Android background app bug where the RTT connection closes because of the WebSocket closing -- and notify the client app to re-establish its RTT connection.\\r\\n- Improved error handling in Unity RTT now gives more information about what happened with the RTT connection.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe have made the following portal changes:\\r\\n\\r\\n### Team\\r\\n\\r\\n- **Manage | Members**\\r\\n    - Added a column to show which users have API Keys defined for this team\\r\\n    - Also added a new\xa0_Builder API Access_\xa0option to the\xa0_Permissions_\xa0tab of the user settings\\r\\n- **Manage | Team Info**\\r\\n    - Added a toggle for enabling Builder API Access\\r\\n\\r\\n### Design\\r\\n\\r\\n- **Cloud Code | API Explorer**\\r\\n    - The new API Usage Stats log is now added to response when cloud code scripts are called.\\r\\n- **Cloud Code | Scripts, Script Editor**\\r\\n    - The new API Usage Stats log is also appended to the responses in the Run tab of the Script Editor.\\r\\n- **Cloud Data | Custom Entities**\\r\\n    - The index list screen now displays the index\xa0**key fields**\xa0- providing a much better overview of index coverage.\\r\\n- **Integrations | Manage Integrations**\\r\\n    - A new\xa0**SAML Settings**\xa0section has been added to the integrations screen.\\r\\n\\r\\n### Monitor\\r\\n\\r\\n- **Group Monitoring | Groups**\\r\\n    - We have added a new feature that allows Portal users to\xa0**remove members**\xa0from groups.\\r\\n- **User Monitoring | Recent Users**\\r\\n    - We now capture and display the version of the client app that users are using to login.\\r\\n- **User Monitoring | Logs**\\r\\n    - A new\xa0**[Refresh]**\xa0button has been added. Very useful when viewing the live logs of a user while debugging.\\r\\n\\r\\n_App Version now displayed in Recent Users list..._\\r\\n\\r\\n![](images/2020-11-16_17-31-14-1024x418.png)\\r\\n\\r\\n### Reporting\\r\\n\\r\\n- **API Usage**\\r\\n    - We now break down custom entity operations by entity type - providing better insight into the performance of individual entity types.\\r\\n\\r\\n### General\\r\\n\\r\\n- **Edit Profile | API Keys** \\r\\n    - You can now create API Keys for use with our Builder API - coming soon!\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the\xa0brainCloud\xa0API:\\r\\n\\r\\n- **Custom Entity**\\r\\n    - **(New!)**\xa0`GetRandomEntitiesMatching()`\xa0call added for returning a set of random entities from a filtered list of candidates.\\r\\n- **File**\\r\\n    - **(New!)** `FileUploadFromMemory()` call added to allow uploads to happen in situations where local file access is not possible or convenient. For example, screenshots from Unity-based WebGL apps. _Note - Unity client only._\\r\\n- **Group**\\r\\n    - **(Improved!)**\xa0Sys APIs for Groups and Group Entities are now available from S2S\\r\\n- **RTT**\\r\\n    - **(New!)**\xa0`GetConnectionStatus()`\xa0call returns the status of the RTT WebSocket connection (\xa0CONNECTED,\xa0DISCONNECTED,\xa0CONNECTING\xa0and\xa0DISCONNECTING).\\r\\n\\r\\nThe following methods are newly marked as deprecated:\\r\\n\\r\\n- **PlayerState**\\r\\n    - `UpdateName()`\xa0deprecated - use\xa0`UpdateUserName()`\xa0instead\u2026 (which is no longer marked as deprecated - it was a mistake!)\\r\\n\\r\\nThe following\xa0_previously deprecated_\xa0methods have been\xa0_removed_\xa0from the 4.6+ client libraries:\\r\\n\\r\\n- **Authentication**\\r\\n    - `GenerateGUID()`\xa0and\xa0`GenerateNewAnonymousId()`\xa0removed - use\xa0`GenerateAnonymousId()`\xa0instead.\\r\\n- **Client**\\r\\n    - `GetGameId()`\xa0removed - use\xa0`GetAppId()`\xa0instead.\\r\\n    - `GetGameVersion()`\xa0and\xa0`GetVersion()`\xa0removed - use\xa0`GetAppVersion()`\xa0instead.\\r\\n- **Entity**\\r\\n    - `GetSharedEntityForPlayerId()`\xa0removed - use\xa0`GetSharedEntityForProfileId()`\xa0instead.\\r\\n    - `GetSharedEntitiesForPlayerId()`\xa0removed - use\xa0`GetSharedEntitiesForProfileId()`\xa0instead.\\r\\n    - `GetSharedEntititesListforPlayerId()`\xa0removed - use\xa0`GetSharedEntitiesListForProfileId()`\xa0instead.\\r\\n- **Friend**\\r\\n    - `FindPlayerByUniversalId()`\xa0and\xa0`FindUserByUniversalId()`\xa0removed - use\xa0`FindUserByExactUniversalId()`\xa0or instead.\\r\\n    - `ReadFriendPlayerState()`\xa0removed - use\xa0`ReadFriendUserState()`\xa0instead.\\r\\n- **Gamification**\\r\\n    - `ResetMilestones()`\xa0removed from client libs - still available from cloud code.\\r\\n- **PlaybackStream**\\r\\n    - `GetStreamSummariesForInitiatingPlayer()`\xa0removed - use\xa0`GetRecentStreamsForInitiatingPlayer()`\xa0instead.\\r\\n    - `GetStreamSummariesForTargetPlayer()`\xa0removed - use\xa0`GetRecentStreamsForTargetPlayer()`\xa0instead.\\r\\n- **PlayerState**\\r\\n    - `DeletePlayer()`\xa0removed - use\xa0`DeleteUser()`\xa0instead.\\r\\n    - `ReadPlayerState()`\xa0removed - use\xa0`ReadUserState()`\xa0instead.\\r\\n    - `ResetPlayer()`\xa0removed - use\xa0`ResetUser()`\xa0instead.\\r\\n    - `UpdatePlayerName()`\xa0removed - use\xa0`UpdateUserName()`\xa0instead.\\r\\n    - `UpdatePlayerPictureUrl()`\xa0removed - use\xa0`UpdateUserPictureUrl()`\xa0instead.\\r\\n- **PlayerStatistics**\\r\\n    - `IncrementPlayerStats()`\xa0removed - use\xa0`IncrementUserStats()`\xa0instead.\\r\\n    - `ReadAllPlayerStats()`\xa0removed - use\xa0`ReadAllUserStats()` instead.\\r\\n    - `ReadPlayerStatsForCategory()`\xa0removed - use\xa0`ReadUserStatsForCategory()`\xa0instead.\\r\\n    - `ReadPlayerStatsSubset()`\xa0removed - use\xa0`ReadUserStatsSubset()`\xa0instead.\\r\\n    - `ResetAllPlayerStats()`\xa0removed - use\xa0`ResetAllUserStats()`\xa0instead.\\r\\n- **PlayerStatisticsEvent**\\r\\n    - `TriggerPlayerStatisticsEvent()`\xa0removed - use\xa0`TriggerStatsEvent()`\xa0instead.\\r\\n    - `TriggerPlayerStatisticsEvents()`\xa0removed - use\xa0`TriggerStatsEvents()`\xa0instead.\\r\\n- **Product**\\r\\n    - This legacy\xa0`Product`\xa0service has been been removed. Use the replacement\xa0`AppStore`\xa0or\xa0`VirtualCurrency` services instead.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All libraries have been updated. Go get \'em!\\r\\n- Documentation updates\\r\\n    - Added new knowledgebase articles for dozens of portal screens. Look for the\xa0_Learn More_\xa0links!\\r\\n- Important Fixes\\r\\n    - BCLD-6427 - In API Explorer/Scripts/S2S Explorer the up/down arrows in the log are not working\\r\\n    - BCLD-6389 - Restore Checkpoint now properly deletes new custom collections (created or imported) since the selected checkpoint\\r\\n    - BCLD-6344 - When viewing indexes, the index fields box is not pretty printed\\r\\n    - BCLD-6352 - ADHOC Division Set Leaderboard Template with Tournament in progress is losing required tournament data on import/deploy\\r\\n    - BCLD-6320 - C++ cannot tear down WebSocket on Win32\\r\\n    - BCLD-6343 - Deleting custom indexes shows wrong text - asks if you want to delete the \u201centity type\u201d instead\\r\\n    - BCLD-6327 - Import/Deploy custom entity configs (and migratable custom entities) only if target app has applicable billing plan\\r\\n    - BCLD-6251 - Added support to manage groups and group entities from S2S\\r\\n    - BCLD-6304 - Identity - GET\\\\_EXPIRED\\\\_IDENTITIES throwing exception for expired/invalidated Facebook identities\\r\\n    - BCLD-6322 - Reporting | Analytics page not showing session graph if between 7-8 pm Eastern\\r\\n    - BCLD-5969 - Added null check for \u201cpush content\u201d call in Unity for Abandon/Complete Match with summary data\\r\\n    - BCLD-6283 - VerifyReceipt() for product that is \u201cNot for Sale\u201d should still work\\r\\n    - BCLD-6183 - User Items not being exported as part of user data export/archive\\r\\n    - BCLD-6184 - User Items not being deleted when the user is deleted\\r\\n    - BCLD-6294 - UpdateGroupData and UpdateGroupName methods not updating UpdatedAt field\\r\\n    - BCLD-6246 - GoogleOpenId identity cannot be detached\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2020/09/16/release-4-5-6","metadata":{"permalink":"/braincloud-apiref/release/2020/09/16/release-4-5-6","source":"@site/release/2020-09-16-release-4-5-6/index.md","title":"Release 4.5.6 is live!","description":"brainCloud 4.5.6 is a very focused release - but much more significant than the version number would imply.","date":"2020-09-16T00:00:00.000Z","formattedDate":"September 16, 2020","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":7.355,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 4.5.6 is live!","date":"2020-09-16","tags":["release-history"]},"prevItem":{"title":"Release 4.6 is live!","permalink":"/braincloud-apiref/release/2020/11/17/release-4-6"},"nextItem":{"title":"Important - All Android apps should turn on Amazon Platform Support!","permalink":"/braincloud-apiref/release/2020/08/16/important-all-android-apps-should-turn-on-amazon-platform-support"}},"content":"brainCloud 4.5.6 is a very focused release - but much more significant than the version number would imply.\\r\\n\\r\\nThis update brings the release of our new\xa0**Version 2**\xa0**Relay Servers**\xa0- which are more reliable, more feature-rich, and faster to launch than our original Relay Servers.\\r\\n\\r\\n_Important: The\xa0**RelayComms V2 Protocol**\xa0(used by\xa0brainCloud 4.5.6 and newer libs)\xa0**is not compatible**\xa0with the\xa0**RelayComms V1 Protocol** (used by\xa0brainCloud 4.5.5\xa0and older libs). The\xa0recommended migration process\xa0is described later in this document._\\r\\n\\r\\n* * *\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Improved Relay Servers\\r\\n\\r\\nAs more and more apps use brainCloud\'s Relay Servers, we have realized some limitations with our initial implementation:\\r\\n\\r\\n1. Defect - reliable acknowledgments don\'t consider all combinations of channel \\\\* reliable bit \\\\* ordered bit \\\\* net id (from user). Combinations of reliable/ordered would FAIL if used within the same channel Id. This issue would normally only happen with higher player counts - but it is definitely an issue.\\r\\n2. Limitation - no way to send a message to a subset of players (e.g. your team in a competitive game). V1 only allowed for sending to\xa0_all_, or to a\xa0_single_\xa0specified user\\r\\n3. Limitation -\xa0no protocol version embedded in the protocol - which makes it near impossible to modify/extend/correct the protocol and maintain compatibility with older clients.\\r\\n4. Unoptimized - the Docker container used to launch the relay servers wasn\u2019t properly optimized to improve launch times.\xa0\\r\\n\\r\\nThe\xa0_good_\xa0news is that we have addressed these limitations with\xa0**Version 2**\xa0of our\xa0**RelayComms Protocol**\xa0- and incorporated it into our new\xa0**Relay Servers**\xa0and\xa0**4.5.6 Client Libraries**.\xa0\\r\\n\\r\\nThe _better_ news is that the Client APIs for the new RelayComms is _almost completely_ compatible - that is, you don\u2019t need to change your client code to use the new servers - other than:\\r\\n\\r\\n- In C#-only, you need to adjust for the new\xa0`netId`\xa0parameter in the\xa0`RelayCallback()`\xa0method \u2190 _note, this was a defect. The other languages already had that parameter in their callback method._\\r\\n- If migrating a _Live_ application, you will need to substitute in the new lobby ids (see the _migration_ _procedure_ section below)\\r\\n\\r\\nThe\xa0_bad_\xa0news is that our new\xa0**V2 Relay Servers are not compatible with our 4.5.5 and older client libraries**\xa0- so they only work with brainCloud 4.5.6 libs and greater. Conversely - the new 4.5.6 libs do not work with the legacy Relay Servers - so migrating your apps to the new Relay Servers (which we highly recommend) must be done carefully. We provide the details on how to do this without interruption in a section below.\\r\\n\\r\\n![](images/2020-09-01_09-53-52.png)\\r\\n\\r\\n_Note - The V1 RelayServers will continue to function for the foreseeable future (at least 1 year) - so you do not need to force a short-term upgrade to your app. It is highly recommended that apps upgrade when they get a chance however._\\r\\n\\r\\n### Matchmaking Optimizations\\r\\n\\r\\nThis release also includes some serious optimizations to brainCloud\'s Online Matchmaking and Lobby System algorithms - resulting in:\\r\\n\\r\\n- greater lobby queue scalability\\r\\n- much faster best-case room/relay server launches\\r\\n\\r\\nNote that these changes are completely under-the-hood - no API changes required.\\r\\n\\r\\n### Miscellaneous Changes\\r\\n\\r\\nThe following changes are also included in this release:\\r\\n\\r\\n- _Amazon Platform detection_ - has been added to all of the libs (except C++). Important - be sure to turn on the \u201cAmazon\u201d platform on the\xa0**Design | Core App Info | Platforms**\xa0page for your app. This is important even if you aren\u2019t using Amazon IAP - otherwise, your Android app won\u2019t launch on Amazon devices!\\r\\n- _Ability to **clone** Lobby and Server types_ - has been added to facilitate easier migration to the new Relay Servers\\r\\n- _Improved **WebPurify** integration_ - are servers are now properly encoding problematic text characters before sending them to WebPurify\\r\\n\\r\\n* * *\\r\\n\\r\\n## Procedure: Relay Server Migration\\r\\n\\r\\nThe following approach is recommended for migrating your app from\xa0**V1 Relay Servers \u2192 V2 Relay Servers**.\xa0\\r\\n\\r\\nThis approach has been designed to:\\r\\n\\r\\n- ensure the app is available to all players throughout the migration\\r\\n- support the various app store review processes\xa0\\r\\n- keep the developer in control of the timelines of the migration.\\r\\n\\r\\n### Approach\\r\\n\\r\\n_Benefits: This approach allows users of your old client to continue to play using the V1 Relay Servers - even as your updated client goes through app store reviews, soft launch, etc. using the new V2 Relay Servers. And then, after your release has been deployed globally and across all platforms, you can \u201cforce\u201d users to upgrade to unite all players together again._\\r\\n\\r\\nThe executive summary of the recommended approach is:\\r\\n\\r\\n- Clone the\xa0**Lobby**\xa0and\xa0**Server**\xa0definitions of your app - producing a new set of\xa0**V2 Lobbies**\xa0and\xa0**V2 Servers**\xa0that will be used by the\xa0**updated version**\xa0of your app\\r\\n    - Configure the\xa0**V2 Server**\xa0definitions to use\xa0**Relay Protocol v2**\\r\\n    - Configure the **V2 Lobby**\xa0definitions to use the new\xa0**V2 Server**\xa0definitions\\r\\n- Modify your Client App to use the new\xa0**V2 Lobby**\xa0definitions, as well as the appropriate\xa0**4.5.6 Client Library**\\r\\n- Optionally (but recommended), ensure that your Client App reacts to the\xa0_Minimum Version_\xa0setting from the\xa0**Design | Core App Info | Platform**\xa0page. This will allow you to \u201cforce\u201d your users to upgrade to the new client when you are ready (see\xa0[Version Enforcement](/blog/2015/11/10/launch-tip-1-version-enforcement/))\\r\\n\\r\\n### Step-by-step\\r\\n\\r\\nThis section describes step-by-step how to modify your app to implement the recommended migration approach.\\r\\n\\r\\n#### Design Portal\\r\\n\\r\\n1. Go to\xa0**Design | Cloud Code | My Servers**\xa0- and clone the Relay Server entries to create new \u201cV2\u201d versions. A new\xa0**[Clone Server]**\xa0button has been added to assist with this. After cloning each entry, be sure to\xa0_Edit_\xa0it, and change the\xa0_Relay Protocol_\xa0to\xa0**v2**!\\r\\n2. Go to\xa0**Design | Multiplayer | Lobbies**\xa0- and clone the Lobby entries to create new \u201cV2\u201d versions. A new\xa0**Clone** option has been added to the\xa0**Action**\xa0menu to assist with this. After cloning each entry, be sure to\xa0**Edit**\xa0it, and change it to refer to one of the _V2 Servers_ that you created in Step 1.\\r\\n\\r\\n#### App Code\\r\\n\\r\\n1. Replace your brainCloud library with a new\xa0**4.5.6+**\xa0version of the client library.\\r\\n2. Go into your source code, and change the names of the\xa0**Lobbies**\xa0that your client app references to the new V2 version of the lobby type name.\\r\\n3. **Rebuild**\xa0and\xa0**test**\xa0your client app to ensure everything works.\\r\\n4. _(Optional - but highly recommended)_\xa0If you haven\u2019t already, enhance your app to pass the app version during the\xa0BrainCloudWrapper.Initialize()\xa0method, and display a \u201cClient update required\u201d dialog if it receives a\xa040322\xa0-\xa0APP\\\\_VERSION\\\\_NOT\\\\_SUPPORTED\xa0error from the server during authentication. This will allow you to force users to upgrade to the new client when you are ready. Note - the required app versions are controlled via the\xa0**Design | Core App Info | Platforms**\xa0page.\\r\\n\\r\\n_For more information on implementing_ [_Version Enforcement_](/blog/2015/11/10/launch-tip-1-version-enforcement/) _in brainCloud, see the article at the link._\\r\\n\\r\\n#### App Submission & Migration\\r\\n\\r\\n1. **Submit**\xa0the updated app (which uses the V2 Relay Servers) to the various app stores for approval. Existing users will continue to play using the V1 Relay Servers.\\r\\n2. Officially\xa0**Release**\xa0your app. During this stage of launch, your player liquidity is\xa0_split_\xa0- between the older and newer servers.\\r\\n3. _(Optional - but highly recommended)_\xa0Once you are ready (and are confident that the app updated has been distributed globally to all appstores), you can update the\xa0_minimum required versions_\xa0on the\xa0**Design | Core App Info | Platforms**\xa0page to force users to upgrade, and re-unite your player base!\\r\\n\\r\\n_And voila - you have successfully migrated your app to the V2 Relay Servers without interruption!_\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe have made the following portal changes:\\r\\n\\r\\n### **Design**\\r\\n\\r\\n- **Cloud Code | My Servers**\\r\\n    - Added new\xa0**[Clone Server]**\xa0button to make it easier to duplicate server configurations\\r\\n- **Messaging | Chat**\\r\\n    - The\xa0_Replace Profanity with_\xa0setting now properly defaults to \u201c\\\\*\u201d\\r\\n- **Multiplayer | Lobbies**\\r\\n    - Added a\xa0**Clone**\xa0option to the\xa0**Action**\xa0menu to make it easier to duplicate lobby configurations\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nReminder - The 4.5.6 client libs only work with the V2 Relay Servers.\xa0  \\r\\n  \\r\\n_If your app is\xa0**live**\xa0and\xa0**using Relay Servers**, do not upgrade to the 4.5.6 Client Libraries until you are ready to\xa0**migrate** your app according to the procedure described in these release notes._\\r\\n\\r\\nAlthough the Client libraries have changed significantly to support RelayComms V2, the APIs themselves have not.\\r\\n\\r\\nThere is just one fix to the C# libraries that affect a method signature:\\r\\n\\r\\n- The\xa0`RelayCallback()`\xa0method signature has changed. It now includes a\xa0`netId`\xa0parameter.`public delegate void RelayCallback(short netId, byte[] data);`\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All libs have been updated to use RelayComms V2!\\r\\n    - All libs (except C#) now include Amazon Platform detection.\xa0_**Important: If your app supports Android, and you want your Android apps to run on Amazon devices, remember to enable the Amazon platform on the Design | Core App Info | Platforms page!**_\\r\\n- Documentation updates\\r\\n    - The API Reference has been updated to include the updated C# RelayCallback\\r\\n- Important Fixes\\r\\n    - BCLD-6304 - Error sending certain chat messages with WebPurify support enabled\\r\\n    - BCLD-6240 - Presence updates sometimes failing due to improper TTL setting\\r\\n    - BCLD-6239 - Lobby matchmaking NPE\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2020/08/16/important-all-android-apps-should-turn-on-amazon-platform-support","metadata":{"permalink":"/braincloud-apiref/release/2020/08/16/important-all-android-apps-should-turn-on-amazon-platform-support","source":"@site/release/2020-08-16-important-all-android-apps-should-turn-on-amazon-platform-support/index.md","title":"Important - All Android apps should turn on Amazon Platform Support!","description":"In Release 4.5.5 we added support for Amazon In-app Purchases. As part of that feature, we also expanded brainCloud to include Amazon devices as a separate Platform - essentially so that devs implementing Amazon IAP would be able to get a better feel of the monetization of users on that platform.","date":"2020-08-16T00:00:00.000Z","formattedDate":"August 16, 2020","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":0.805,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Important - All Android apps should turn on Amazon Platform Support!","date":"2020-08-16","tags":["release-history"]},"prevItem":{"title":"Release 4.5.6 is live!","permalink":"/braincloud-apiref/release/2020/09/16/release-4-5-6"},"nextItem":{"title":"Release 4.5.5 is live!","permalink":"/braincloud-apiref/release/2020/07/15/release-4-5-5"}},"content":"In [Release 4.5.5](/release/2020/07/15/release-4-5-5/) we added support for _Amazon In-app Purchases_. As part of that feature, we also expanded brainCloud to include Amazon devices as a separate _Platform_ - essentially so that devs implementing Amazon IAP would be able to get a better feel of the monetization of users on that platform.\\r\\n\\r\\nRegrettably, we neglected to properly anticipate and publicize the side effect of that change - with is that **brainCloud apps using the 4.5.5+ libs running on Amazon now need to have the new \\"Amazon\\" platform enabled.**\\r\\n\\r\\n![](images/2020-08-16_14-50-14-1024x732.png)\\r\\n\\r\\nSo - if you are building Android apps, and you want them to run on Amazon devices (whether you are using IAP or not), please go _now_ and **turn on Amazon platform support** _before_ upgrading to our 4.5.5 libs.\\r\\n\\r\\n_(Note - to be precise, only the Unity 4.5.5 libs have Amazon platform detection right now. The rest of the libs are getting a 4.5.6 update soon with it though.)_\\r\\n\\r\\nApologies for the confusion!"},{"id":"/2020/07/15/release-4-5-5","metadata":{"permalink":"/braincloud-apiref/release/2020/07/15/release-4-5-5","source":"@site/release/2020-07-15-release-4-5-5/index.md","title":"Release 4.5.5 is live!","description":"We have bad news and good news.","date":"2020-07-15T00:00:00.000Z","formattedDate":"July 15, 2020","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":12.29,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 4.5.5 is live!","date":"2020-07-15","tags":["release-history"]},"prevItem":{"title":"Important - All Android apps should turn on Amazon Platform Support!","permalink":"/braincloud-apiref/release/2020/08/16/important-all-android-apps-should-turn-on-amazon-platform-support"},"nextItem":{"title":"Release 4.5","permalink":"/braincloud-apiref/release/2020/04/25/release-4-5"}},"content":"We have bad news and good news.\\r\\n\\r\\nThe bad news is that delivering the full 4.6 Release (with Cloud Code Folders support) is taking longer than expected. Our adjusted schedule puts that release in September. (boo!)\\r\\n\\r\\nThe good news is that there are a bunch of smaller features that we are finishing up now - and so instead of making you wait until 4.6 for everything, we are going to do an early 4.5.5 release instead! (yay!)\\r\\n\\r\\n_PS - Don\u2019t let the .5 release number fool you - there is a lot here!_\\r\\n\\r\\n**_Important_** _**Compatibility alert!** - Our C# 4.5.5 Unity Libs now recognize when they are being run on Amazon Fire devices, and set the \\"platform type\\" appropriately (for better analytics). As a side effect of this, you need to **enable the new Amazon platform** on the **Design | Core App Info | Platforms** page for it to run on Amazon devices! You will need to do this even if you aren\'t using Amazon IAP._\\r\\n\\r\\n_**Pricing alert!** - This release includes a new feature for Auto-Deleting Dormant Users. This is in preparation for charging devs for storing Dormant Users - which will become effective in **January 2021**. Read on for more details!_\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Amazon In-App Purchase Support\\r\\n\\r\\nAt long last, brainCloud brings support for Amazon AppStore In-app Purchase items. This includes support for both Consumable and Non-consumable items (i.e. Entitlements). Basic subscription support is in place as well.\\r\\n\\r\\nPerform the following steps to add Amazon IAP support to your app:\\r\\n\\r\\n- In the [Amazon Developer Services](https://developer.amazon.com/apps-and-games/console) portal\\r\\n    - Register your app (and it\u2019s IAP products). Create a Product for each price entry you wish to manage in brainCloud.\\r\\n- In the brainCloud Design Portal\\r\\n    - Configure the _Shared Secret_ key on the **Design | Core App Info | Application IDs** page - **Amazon tab** of the brainCloud Design Portal. You can find your shared secret key [here](https://developer.amazon.com/settings/console/sdk/shared-key).\\r\\n    - On the **Design | Marketplace | Products** page - configure the _Amazon Product SKUs_ for the appropriate price entries.\\r\\n- In your app\\r\\n    - Integrate the latest brainCloud and Amazon libs into your app\\r\\n    - Call AppStore.GetSalesInventory(), passing in the new \u201camazon\u201d platform, to get a list of the products and their current prices (i.e. Amazon IAP SKUs)\\r\\n    - Use the appropriate _Amazon APIs_ to perform the purchase.\\r\\n    - Verify the receipt that is returned via the AppStore.VerifyPurchase() call  \\r\\n        \\r\\n\\r\\n### Global Files V3 Portal Support\\r\\n\\r\\n![](images/globalFiles-1024x800.png)\\r\\n\\r\\nIn **4.5**, we introduced our new **Global File** service - which enables developers to organize files into folders - and to allow migrating of uploaded **User Files \u2192** **Global Files**.\\r\\n\\r\\nIn **4.5.5**, we have made the Global File service more accessible, by giving it its own page in the Design Portal. Simply navigate to **Design | Custom Config | Global Files** and start uploading your files!\\r\\n\\r\\nFrom the Design Portal, you can:\\r\\n\\r\\n- upload, move, copy and delete _files_\\r\\n- create, move, and delete _folders_\\r\\n- download an archive of all of an app\u2019s global files\\r\\n- restore an archive of an app\u2019s global files\\r\\n\\r\\nIn addition, brainCloud 4.5.5 now migrates Global Files during deployment.\\r\\n\\r\\n### Slack Alerts (beta)\\r\\n\\r\\n![](images/slackalerts-1024x620.png)\\r\\n\\r\\nWe have added our first cut of Slack integration to brainCloud!\\r\\n\\r\\nWith this integration, you can configure a custom channel (or channels) to receive alerts from selected categories, including:\\r\\n\\r\\n- chat - profanity filter violations\\r\\n- deploys - app deployments\\r\\n- hosting - room servers spinning up / down\\r\\n- integration - push notification expiry warnings\\r\\n- jobs - background reporting jobs started / completed\\r\\n- purchases - customer purchase notifications \u2190 fun!\\r\\n\\r\\nSee [this](http://help.getbraincloud.com/en/articles/4236297-configuring-slack-alerts) knowledge base article for instructions on configuring the slack webhooks for integration.\\r\\n\\r\\n### Custom Entity Singleton API\\r\\n\\r\\nHere is an interesting statistic:\\r\\n\\r\\n_The `UpdateSingleton()` call for User Entities is by far the most heavily called client method. It is called >5X more often than it\u2019s closest rival._\\r\\n\\r\\nThe reason is that it allows devs to bypass micromanaging ids. For example - You don\u2019t need to know the entityId of the \u201cCampaignSave\u201d object to read and update. Your app just knows that there is only one of them per user - and updates them via the type (i.e. \u201cCampaignSave\u201d) instead of the id.\\r\\n\\r\\nGiven the popularity of the singleton pattern - we thought it fitting to bring a _singleton API_ to _Owned Custom Entities_ as well!\\r\\n\\r\\nThe following new methods have been added:\\r\\n\\r\\n- `UpdateSingleton()` and `UpdateSingletonFields()` \u2190 partial updates for singletons!\\r\\n- `ReadSingleton()` and `DeleteSingleton()`.\\r\\n\\r\\nNote that the singleton API only works for _owned_ Custom Entities.\\r\\n\\r\\n### Auto-Delete Dormant Users\\r\\n\\r\\nAt long last, brainCloud will now support the automatic deletion of Dormant Users.\\r\\n\\r\\nbrainCloud defines a dormant user as _a user that has an account in an app, but hasn\u2019t logged into it in the past 180 days_ (i.e. 6 months).\\r\\n\\r\\n_The evils of Dormant users:_\\r\\n\\r\\n_The storage (and backups) of dormant users greatly adds to the costs of running brainCloud - and weighs down the performance of apps - with little or no benefit to developers (and their marketing teams) - as most users are anonymous and have probably already uninstallled your app!_\\r\\n\\r\\nbrainCloud is making 3 key changes to combat the evils of dormant users:\\r\\n\\r\\n1. Adding a new **Auto-delete** feature that devs can _enable_ to automatically delete dormant users. This feature is safe and highly configurable - see details below.\\r\\n2. Adding a new **Dormant Users Fee** to brainCloud\u2019s monthly invoices. Devs will be charged $75 per Million dormant users (pro-rated). (Note - this line item is actually already on invoices - but the cost is currently set to $0 / million).\\r\\n3. Finally, we will not start charging the fees until **January 2021** - so that devs have the opportunity to delete their users first. Auto-deletion isn\u2019t instantaneous - it works slowly in the background so as not to impact brainCloud system performance. Some brainCloud apps have over 100 million dormant users - it will take time to delete them!\\r\\n\\r\\n#### Auto-deletion settings\\r\\n\\r\\nThe new Auto-deletion process is highly configurable. It allows you to set:\\r\\n\\r\\n- **\\\\# of days of inactivity** - brainCloud considers an account dormant after 180 days - but you can decide to only delete accounts after 1 year, for example.\\r\\n- **exceptions** - easily exclude users who have made purchases, have e-mail addresses, have XP levels greater than some threshold, have currency balances greater than a threshold, or are members of selected segments.\\r\\n- **(optional) email notifications** - want to warn users (that you have email addresses for) that their accounts will be deleted soon? You can send two notices. Of course, any users that login after the notice and before the deletion date are automatically removed from the deletion queue.\\r\\n- **(optional) archive service** - want to archive the users (temporarily) before deletion? We have that covered as well! Just configure an Owned Custom Entity type and we\u2019ll temporarily store an archive of the user there - you decide for how long. Note that standard Custom Entity charges apply. Also - there is no automated way to restore an archived user - though it is certainly possible to manually do so - all the data is there in the archive JSON.\\r\\n\\r\\nNote that the Auto-Deletion process does consume some API counts - in accordance to how it has been configured - namely:\\r\\n\\r\\n- +1 Bulk API Count for each user deleted\\r\\n- +1 Email Sent API Count for each email notification sent\\r\\n\\r\\nWe understand that this is a big change - and that deleting users can be scary - but we have worked hard to build a safe solution that keeps developers in control of their user data and infrastructure costs. We hope you agree!\\r\\n\\r\\nThis feature will not be enabled immediately upon 4.5.5 release. We have got a bit of final testing on the production hardware before we turn it on.  \\r\\n_**Plus - as a reminder - billing for Dormant User retention will not begin until January 2021.**_\\r\\n\\r\\n### Additional Feature and Improvements!\\r\\n\\r\\nThe following new features aren\u2019t headliners - but they are worth a mention!\\r\\n\\r\\n- **Leaderboard Deployment Options** - new options to allow deployment to production apps without touching or destroying dynamically created leaderboards.\\r\\n- **Custom Entity Deletion** **Queries** - we have added some new deletion calls that support query filters. Much more efficient than individually calling delete for each entity!\\r\\n- **Product & Promotion Management APIs** - we have added new S2S and cloud-code APIs for managing _Products & Prices_, and both _Scheduled_ and _Automated Promotions_. These new APIs contain feature enhancements as well, including the ability to attach _custom JSON objects_ to both Prices and Promotions.\\r\\n- **Segment, Currency, and Notification Queries** - in support of the above APIs, we have added several utility methods that retrieve the current segments for a user, the overall segment list, the list of push notification templates, and the list of virtual currency types. We have also added a new method to dynamically refresh the user\u2019s segment list (to recalculate the segments since they logged in).\\r\\n- **Unreal 4.25 Support!** Technically, 4.25 support was added as a library patch for brainCloud 4.5 - but it\u2019s totally worth mentioning. \xa0\\r\\n- **RTT** \\\\- we have added additional edge-case handling to prevent unnecessary disconnects - especially in regards to the Java client\\r\\n- **Room & Relay Server launches** - are now handled more efficiently in the background\\r\\n- **RTT & Relay Comms** - there are improvements in every client release. In particular, there are improvements in the Java Libraries this release\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe have made the following changed to the Design Portal:\\r\\n\\r\\n### Design\\r\\n\\r\\n- **Core App Info | Application IDs**\\r\\n    - Added a new Amazon tab where you can fill in the _Shared Secret_ necessary for validating _Amazon AppStore_ receipts\\r\\n- **(New!) Core App Info | Auto Delete Users**\\r\\n    - New screen for configuring the auto-deletion of dormant users\\r\\n    - _Note - this screen will not show up for a few weeks as we complete final testing._\\r\\n- **Cloud Code | My Servers**\\r\\n    - You can now pick a _relay protocol_ to use for your Relay Servers. The only choice currently is **V1** - but **V2** is coming very soon with _improved performance and reliability_!\\r\\n- **(New!) Custom Config | Global Files**\\r\\n    - Manage the files and folders for the Global Files V3 service\\r\\n- **Integrations | Manage Integrations**\\r\\n    - Integrate brainCloud with your **Slack** instance\\r\\n- **Marketplace | Products**\\r\\n    - Configure Amazon IAP pricing for products\\r\\n    - Expanded support for _custom JSON_ on products\\r\\n- **Promotions | Automated**\\r\\n    - The UI for targeting segments align better with the _Scheduled Promotions_ screen\\r\\n    - Added the ability to attach custom JSON to promotions\\r\\n- **Promotions | Scheduled**\\r\\n    - Added the ability to attach custom JSON to promotions\\r\\n    - Fixed an odd behavior where you had to set the start time to the future when editing scheduled promotions.\\r\\n\\r\\n_Also of note - user counts throughout the portal should now be more accurate - taking into account deleted and merged accounts (as well as accounts created directly via the User Service)._\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the brainCloud API:\\r\\n\\r\\n### **Client APIs**\\r\\n\\r\\n- **Custom Entity**\\r\\n    - **New!**\xa0_Singleton_\xa0APIs -\xa0`DeleteSingleton()`,\xa0`ReadSingleton()`,\xa0`UpdateSingleton()`, and\xa0`UpdateSingletonFields()`.\\r\\n    - **New!**\xa0_Delete multiple entities_\xa0in a single call using\xa0`DeleteEntities()`\xa0&\xa0`SysDeleteEntities()`.\xa0\xa0  \\r\\n        _Note that apps are charged +1 Bulk API Count per entity deleted, in addition to the API Count for the call itself._ \\r\\n    - **New!**\xa0`IncrementData()` call added to client libs\\r\\n- **Product Management**\\r\\n    - **New!** APIs for managing products and their associated prices\\r\\n        - `SysAddProductPrice()`\\r\\n        - `SysCreateProduct()`\\r\\n        - `SysDeleteProduct()`\\r\\n        - `SysDeleteProductPrice()`\\r\\n        - `SysGetProductList()`\\r\\n        - `SysReadProduct()`\\r\\n        - `SysSetDefaultProductPrice()`\\r\\n        - `SysUpdateProduct()`\\r\\n        - `SysUpdateProductPrice()`\\r\\n    - Note that all of the above methods are available via cloud-code and S2S only.\\r\\n- **Promotions**\\r\\n    - **New!** APIs for managing both scheduled and automated promotions\\r\\n        - `SysCreatePromotion()`\\r\\n        - `SysDeletePromotion()`\\r\\n        - `SysEnablePromotion()`\\r\\n        - `SysGetPromotionList()`\\r\\n        - `SysReadPromotion()`\\r\\n        - `SysUpdatePromotion()`\\r\\n    - Note that all of the above methods are available via cloud-code and S2S only.\\r\\n- **Push Notification**\\r\\n    - New!\xa0`SysGetNotificationTemplates()`\xa0API to return the list of notification templates configured in the portal.\\r\\n- **Segment**\\r\\n    - **New!**\xa0Two methods have been added for retrieving the user\u2019s segment, and the full list of segments respectively:\xa0`GetMySegmentsLegacy()`\xa0and\xa0`SysGetSegmentList()`. We have made these methods cloud-code only because we plan to introduce schema changes in this area in the future, and don\u2019t want client apps to be caught flat-footed.\\r\\n    - New! We have also added the\xa0`RefreshMySegments()`\xa0cloud-code call to allow dynamically refreshing of segments during a session.\xa0_Note that segments are already automatically refreshed upon authentication_\xa0\u2013 this method can be used to cause segments to refresh mid-session - for example, after completing a level.\xa0\\r\\n- **Virtual Currency**\\r\\n    - **New!** The following methods have been added for retrieving the list of currency types that have been defined in the portal:\\r\\n        - `SysGetCurrencyTypes()`\\r\\n        - `SysGetParentCurrencyTypes()`\\r\\n        - `SysGetPeerCurrencyTypes()`\\r\\n    - Note that all of the above methods are available via cloud-code and S2S only.\\r\\n\\r\\n### S2S APIs\\r\\n\\r\\nAll of the SYS calls described above are available via the\xa0_Server-to-Server API_\xa0as well.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All client libraries have been updated with the latest API enhancements - go get \'em!\\r\\n    - The following client libraries have additional improvements:\\r\\n        - Unreal Lib - now supports\xa0**Unreal 4.25**!\\r\\n        - Java Libs - there are some good RelayComms fixes in there.\\r\\n        - In general, it is always best to update to our latest client libs!\\r\\n    - There have been no changes to the S2S libraries themselves. The generic mechanism employed by our S2S libs is API agnostic - and thus the 4.5 libs already support all 4.5.5 APIs.\\r\\n- Documentation updates\\r\\n    - All new methods are documented in our APIREF - https://getbraincloud.com/apidocs/apiref\\r\\n    - You\u2019ll find our new Amazon IAP tutorial here -\xa0[https://getbraincloud.com/apidocs/portal-usage/store-integration-amazon/](/learn/portal-tutorials/store-integration-amazon/)\\r\\n- Important Fixes\\r\\n    - BCLD-5722 - Unreal blueprint tutorial on website is out of date for UE 4.24. will crash on initialize app.\\r\\n    - BCLD-5724 - Unreal C++ tutorial on website is out of date, method getInstance() doesn\'t exist in BrainCloudClient class.\\r\\n    - BCLD-6072 - Price entries can be created for products without an appstore defined with it\\r\\n    - BCLD-5960 - Users should not be able to use \'.\' (dot) in external auth type\\r\\n    - BCLD-6105 - Should be able to edit Scheduled Promotion without setting it\'s start time to the future\\r\\n    - BCLD-6090 - brainCloud java client sends empty RTT ping packets that cause immediate disconnect from event server\\r\\n    - BCLD-5922 - Matchmaking process is blocked by room/relay server spin-up\\r\\n    - BCLD-5909 - User counts on Manage | Apps and Reporting | Analytics don\'t exclude deleted users OR include users created via UserService\\r\\n    - BCLD-5738 - Java RelayComms double queue UDP ordered relay packets\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2020/04/25/release-4-5","metadata":{"permalink":"/braincloud-apiref/release/2020/04/25/release-4-5","source":"@site/release/2020-04-25-release-4-5/index.md","title":"Release 4.5","description":"Big things are happening with brainCloud in 2020. Here\'s what you will find in 4.5.","date":"2020-04-25T00:00:00.000Z","formattedDate":"April 25, 2020","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":8.405,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 4.5","date":"2020-04-25","tags":["release-history"]},"prevItem":{"title":"Release 4.5.5 is live!","permalink":"/braincloud-apiref/release/2020/07/15/release-4-5-5"},"nextItem":{"title":"Release 4.4","permalink":"/braincloud-apiref/release/2020/02/19/release-4-4"}},"content":"Big things are happening with brainCloud in 2020. Here\'s what you will find in 4.5.\\r\\n\\r\\nThe executive summary:\\r\\n\\r\\n- Shared Cloud Code Scripts (beta)\\r\\n- Global Files V3 API (beta)\\r\\n- Custom Entities Official Release + Templates!\\r\\n- Improved Room Server Support for Unity and Unreal!\\r\\n- Facebook Graph API v3.2\\r\\n- New (better!) Batch User Processing API\\r\\n- **Updated UTC-based calls in Client Libs** _(see note immediately below)_\\r\\n- and more!\\r\\n\\r\\nImportant\\r\\n\\r\\nWe recently became aware that some of our time-related calls were non-specific in terms of whether they were expecting UTC or local time-based parameters. Even worse, it turns out we implemented these inconsistently across our libraries!  \\r\\n  \\r\\nTo address this situation we are deprecating the problematic calls and replacing them with a new set of \\"Clearly UTC\\" calls - along with adding some convenient time conversion calls to the client libs.  \\r\\n  \\r\\nThe old calls will continue to work and behave as before (for 1 year), but we encourage all devs to move to the new calls. Apologies for the inconvenience!\\r\\n\\r\\n* * *\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Shared Cloud Code Scripts (beta)\\r\\n\\r\\nAt long last, our initial version of\xa0_shared scripts_\xa0is available for use! No more copy-and-pasting functions from script-to-script or loading them into custom properties!\xa0\\r\\n\\r\\nStarting in Release 4.5, to include another script, you simply use the new\xa0`bridge.include(\u201cscriptname.ccjs\u201d)`\xa0operation.\\r\\n\\r\\nFor example - say you have this script:\\r\\n\\r\\nMathFunctions\xa0script\\r\\n\\r\\nfunction sumNums( num1, num2 ) {\\r\\n  return (num1 + num2);  \\r\\n}\\r\\n\\r\\nfunction prodNums( num1, num2 ) {\\r\\n  return (num1 \\\\* num2 );  \\r\\n}\\r\\n\\r\\nYou can include it from another cloud code script very simply:\\r\\n\\r\\n\\"use strict\\";\\r\\n\\r\\nbridge.include(\\"MathFunctions.ccjs\\");\\r\\n\\r\\nfunction main() {\\r\\n\\tvar response = {};\\r\\n\\tresponse.answer = sumNums(data.number1, data.number2);\\r\\n\\treturn response;\\r\\n}\\r\\n\\r\\nmain();\\r\\n\\r\\nThe following rules apply:\\r\\n\\r\\n- A script can import multiple scripts (of course!)\\r\\n- The scripts must all be present within the app\u2026 (i.e. no including scripts from other apps)\\r\\n- `bridge.include()`\xa0calls must come first in a script. The only lines allowed to be before\xa0bridge.include()\xa0are\xa0_blank lines_,\xa0`//` comments, and/or the\xa0`\u201duse strict\u201d;`\xa0directive\\r\\n- The extension is ignored by the call - but we recommend you append\xa0`.ccjs`\xa0anyway \u2190 this may be helpful in the future (we have plans!)\xa0\\r\\n\\r\\nNote - we consider this a beta release. The syntax is safe (feel free to use it!) - but there are a few more kinks to work out in future releases, namely:\\r\\n\\r\\n- we don\u2019t yet support arranging the scripts into sub-folders (coming soon!)\xa0\\r\\n- we haven\u2019t yet determined the best way to adjust our cloud code pricing. This capability will change the way devs use our scripts - opening the door to larger, more powerful scripts. We will need to adjust our pricing to accommodate the changes to server resource utilization.\xa0_As always, anything we do will be cost-effective and elastic for our customers!_\\r\\n\\r\\n### Global Files V3 API (beta)\\r\\n\\r\\nWe\'ve got a new version of our Global Files API, with some significant improvements:\\r\\n\\r\\n- Support for\xa0_Folders_\\r\\n- Support for\xa0_Uploads_\xa0(i.e. migrating uploaded User Files\xa0\u2192 Global Files)\\r\\n- Full _File Management API_\\r\\n\\r\\nImportant notes:\\r\\n\\r\\n- Uploading of files is accomplished by Uploading a User File, and then migrating it to V3 Global Files. Note that we also included a method for migrating to the legacy Global Files as well.\\r\\n- The V3 API is a clean break from the older Global Files / S3 API - you can use either API (for now), but files are not shared between the two.\\r\\n- The V3 API does not have Design Portal support yet - so, for now, you would need to use the APIs to upload files, create directories, etc.\\r\\n- V3 Global Files are also not currently included in imports / exports and deploys.\\r\\n\\r\\nInformation\\r\\n\\r\\nPortal support for Global Files V3 is planned for the near future - though\xa0_after_\xa0we get portal support for Cloud Code folders.\\r\\n\\r\\n### Custom Entities - Official Release + Templates!\\r\\n\\r\\nCustom Entities are now fully live in brainCloud (**yay!**) - which unfortunately means that we will now begin charging for them **(boo!**). For pricing details, see our\xa0_[Deep Data Pricing](http://help.getbraincloud.com/en/articles/3967940-what-is-deep-data-usage)_\xa0article.\\r\\n\\r\\nNote - as part of this change, access to Custom Entities now requires a Plus plan. We needed to make this change due to the Custom Entity feature\'s ability to handle very large datasets (even in Development) - which could incur very large storage and backup costs.\xa0_Note that the $4.99 Development Plus plan does include support for Custom Entities._\\r\\n\\r\\nAs a refresher,\xa0_Custom Entities_\xa0are our new, super-charged improvement to both\xa0_Global Entities_\xa0and\xa0_User Entities_.\\r\\n\\r\\n_Custom Entities_\xa0offer:\\r\\n\\r\\n- Custom Indexes for super-fast lookups\\r\\n- Deployment support for easy migration of entities between Dev and Prod apps\\r\\n- Owned vs. Un-Owned variations\\r\\n- ACL support\\r\\n- Time-to-live (TTL) support\\r\\n- Import / Export Support\\r\\n- Both Global and User Data Editors\\r\\n\\r\\nAnd now - **JSON Templates**! You can now add a template for the data section of your type, along with a convenient field description. You can even use markdown! Super convenient when manually creating / editing entities!\\r\\n\\r\\n### Misc Changes\\r\\n\\r\\nBut wait - there is more! Release 4.5 also includes the following:\\r\\n\\r\\n- **Improved Unity and Unreal Room Server support** - Now with spiffy new S2S libraries. Check out the all-new docs for creating Room Servers using [Unity](http://help.getbraincloud.com/en/articles/3942761-custom-multiplayer-server-with-unity) and [Unreal](http://help.getbraincloud.com/en/articles/3808406-custom-multiplayer-server-with-unreal).\\r\\n- **Facebook Graph API upgrade**\xa0- we have updated our backend to utilize Facebook\xa0**Graph API v 3.2**\\r\\n- **Batch Improvements**\xa0- we have added a new Batch User Processing call that allows you to specify a script to run once all of the specified users have been processed.\\r\\n- **RTT Optimizations**\xa0- Improved Event and Disconnect handling\\r\\n- **Deep Data billing** - usage billing for advanced data usage. Details in [this](http://help.getbraincloud.com/en/articles/3967940-what-is-deep-data-usage) article.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nInformation\\r\\n\\r\\nNote - we have updated the way the **Design Portal** handles timezones. If you find weirdness in how the portal is displaying times for you, click on the _switcher menu_ in the _top-right corner_, choose\xa0**Edit Profile**, and go to the **Settings\xa0Tab** to set your\xa0Timezone (Region).\\r\\n\\r\\nWe\'ve made the following portal changes:\\r\\n\\r\\n### Design\\r\\n\\r\\n- **Core App Info | Application IDs**\\r\\n    - Removed the\xa0_[x] Enable Facebook Scores_\xa0setting from the Facebook Platform options. Facebook\'s APIs no longer support this functionality.\\r\\n- **Cloud Data | Custom Entities**\\r\\n    - Added the ability to define (and describe) custom JSON templates for entity data.\\r\\n    - Important: A\xa0_Plus Plan_\xa0is now required to access this screen.\\r\\n- **Gamification | Achievements**\\r\\n    - Removed the [Facebook Register Achievements] button from the main screen, as well as the Facebook specifics from the sub-screens. Facebook\u2019s APIs no longer support this functionality.\\r\\n\\r\\n### Monitoring\\r\\n\\r\\n- **Global Monitoring | Custom Entities**\\r\\n    - Updated the Create and Edit entity screens to support the new JSON templates.\\r\\n    - Important: A\xa0_Plus Plan_\xa0is now required to access this screen.\\r\\n- **User Monitoring | Custom Entities**\\r\\n    - Updated the Create and Edit entity screens to support the new JSON templates.\\r\\n    - Important: A\xa0_Plus Plan_\xa0is now required to access this screen**.**\\r\\n\\r\\n### Reporting\\r\\n\\r\\n- **Analytics**\\r\\n    - Split out and corrected the\xa0_Total Users_\xa0vs.\xa0_Total Dormant Users_\xa0stats.\\r\\n- **API Usage**\\r\\n    - Added a new\xa0_Deep Data Usage_\xa0section.\\r\\n\\r\\n### General\\r\\n\\r\\n- **Login / Registration**\\r\\n    - The Registration page is now more mobile-friendly.\\r\\n- **Personal Preferences**\\r\\n    - Timezones are now specified via a region/city - hopefully no more issues when Daylight Savings Time changes!\\r\\n- **Portal Version**\\r\\n    - We are now prefacing our Master Release versions with \u201cR\u201d.\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nAs mentioned in the executive summary, we found inconsistencies in the client-implementation of some of our time-based calls.\\r\\n\\r\\nThe following methods have thus been deprecated in the 4.5 libraries:\\r\\n\\r\\n- **Leaderboard**\\r\\n    - `PostScoreToDynamicGroupLeaderboard()` - deprecated in favor of `PostScoreToDynamicGroupLeaderboardUTC()`\\r\\n    - `PostScoreToDynamicLeaderboard()` - deprecated in favor of `PostScoreToDynamicLeaderboardUTC()`\\r\\n    - `PostScoreToDynamicLeaderboardDays()` - deprecated in favor of `PostScoreToDynamicLeaderboardDaysUTC()`\\r\\n- **Tournament**\\r\\n    - `PostTournamentScore()` - deprecated in favor of `PostTournamentScoreUTC()`.\\r\\n    - `PostTournamentScoreWithResults()` - deprecated in favor of `PostTournamentScoreWithResultsUTC()`\\r\\n- **Script**\\r\\n    - `ScheduleRunScriptUTC()` - deprecated in favor of `ScheduleRunScriptMillisUTC()`\\r\\n\\r\\nIn addition, the following new methods have been added to\xa0brainCloud\xa0API:\\r\\n\\r\\n- **Bridge**\\r\\n    - There is a new `GetAppVersion()` call in the bridge to retrieve the version of your app (as provided by your app to the client library). Handy!\\r\\n- **GlobalFile (New V3!)**\\r\\n    - Client APIs - `GetFileInfo()`, `GetFileInfoSimple()`, `GetGlobalCDNUrl()`, `GetGlobalFileList()`,\xa0\\r\\n    - The following methods are available from cloud-code only:\\r\\n        - File retrieval - `SysGetGlobalCDNUrl()`, `SysGetGlobalFileList()`, `SysGetFileInfo()`, `SysGetFileInfoSimple()`\\r\\n        - File management - `SysCopyGlobalFile()`, `SysDeleteGlobalFile()`, `SysDeleteGlobalFiles()`, `SysMoveGlobalFile()`\\r\\n        - Folder management - `SysCreateFolder()`, `SysDeleteFolder()`, `SysLookupFolder()`, `SysMoveFolder()`, `SysRenameFolder()`\\r\\n    - Special mention - the `SysMoveToGlobalFile()` method can be used to copy/move a UserFile to a GlobalFileV3 file.\\r\\n- **S3 Handling**\\r\\n    - We\u2019ve added `SysMoveToLegacyGlobalFile()` to support moving a User File to the Legacy Global File system.\\r\\n- **Script**\\r\\n    - There are 3 new S2S APIs for running batch scripts on users with a _completion script_ at the end:\\r\\n        - `RunBatchUserScriptAndCompletionScript()` targets all users\\r\\n        - `RunBatchUserScriptForProfilesAndCompletionScript()` targets specific users (specified via `profileId`)\\r\\n        - `RunBatchUserScriptForSegmentsAndCompletionScript()` targets the users in specific segments.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated Client Libraries\\r\\n    - All supported libraries have been updated with the latest API enhancements. Go get \'em!\\r\\n    - Important Client Library Fixes\\r\\n        - BCLD-5686 - Automatically remove the trailing \\"/\\" if set by the client in serverURL\\r\\n        - BCLD-5718 - UTC fixes for all libs\\r\\n        - BCLD-5772 - Change the comms packet timeouts from 15,10,10 to 15, 20, 35, 50\\r\\n- New S2S Libraries\\r\\n    - New [C#/Unity](https://github.com/getbraincloud/brainclouds2s-csharp) and [Unreal](https://github.com/getbraincloud/brainclouds2s-unreal) S2S Libraries\\r\\n- Documentation updates\\r\\n    - All new 4.5 APIs added to API Ref\\r\\n    - New Knowledgebase Articles:\\r\\n        - [Custom Multiplayer Server with Unity](http://help.getbraincloud.com/en/articles/3942761-custom-multiplayer-server-with-unity)\\r\\n        - [Custom Multiplayer Server with Unreal](http://help.getbraincloud.com/en/articles/3808406-custom-multiplayer-server-with-unreal)\\r\\n        - [Custom Entities](http://help.getbraincloud.com/en/articles/3754150-custom-entity-a-scalable-and-flexible-app-data-storage-and-querying-solution)\\r\\n- Important Server Fixes\\r\\n    - BCLD-5749 - Special characters in email or universal ID addresses were not being encoded correctly during URL creation\\r\\n    - BCLD-5748 - Both \u201cidentifier\u201d and index keys (keysJson keys) need to allow period (.) in the Custom Entity configs\\r\\n    - BCLD-5787 - \'Reference Price\' displayed in the Transaction screen is incorrect\\r\\n    - BCLD-5743 - Update APIServer containers to Tomcat 8.5.51 to fix Ghostcat vulnerability\\r\\n    - BCLD-5620 - Add cloud code support for various PushNotificationService methods\\r\\n    - BCLD-5779 - Remove double logging of tournament service errors\\r\\n    - BCLD-5763 - Optimized RTT Event Handling\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2020/02/19/release-4-4","metadata":{"permalink":"/braincloud-apiref/release/2020/02/19/release-4-4","source":"@site/release/2020-02-19-release-4-4/index.md","title":"Release 4.4","description":"brainCloud 4.4 kicks off a year of big updates to brainCloud. We hope you like where we\u2019re headed!","date":"2020-02-19T00:00:00.000Z","formattedDate":"February 19, 2020","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":5.505,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 4.4","date":"2020-02-19","tags":["release-history"]},"prevItem":{"title":"Release 4.5","permalink":"/braincloud-apiref/release/2020/04/25/release-4-5"},"nextItem":{"title":"Release 4.3.5","permalink":"/braincloud-apiref/release/2019/12/11/release-4-3-5"}},"content":"brainCloud 4.4 kicks off a year of big updates to brainCloud. We hope you like where we\u2019re headed!\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Custom Entities\\r\\n\\r\\nRelease 4.4 brings the\xa0_full power_\xa0of\xa0**Custom Entities**\xa0to brainCloud. As you may recall, Custom Entities are like Global Entities + User Entities combined, and then super-charged! You get all the features of our standard entity systems (with ownership, ACL, time-to-live, and concurrency versioning) - plus support for\xa0_Custom Indexes_\xa0(i.e. much faster!) and\xa0_Deployment Migration_\xa0(i.e. more convenient!).\xa0\\r\\n\\r\\nNew features in 4.4 include:\\r\\n\\r\\n- New\xa0**Custom Entity Editor**\xa0available under\xa0**Global Monitoring**\\r\\n    - With full searching and Import/Export functionality\\r\\n- _Bonus_\xa0**Custom Entity Editor**\xa0available under\xa0**User Monitoring**\\r\\n    - Easily view/edit the entities owned by a specific user!\\r\\n\\r\\nIn addition, you\u2019ll find the Custom Entity configuration screens have moved. We have created a new section called\xa0**Cloud Data**\xa0for them under\xa0**Design**\xa0- to give them better overall visibility.\\r\\n\\r\\n_Note - in the future Custom Entities will be a Plus Plan feature - but for now, Custom Entities are available to everyone!_\\r\\n\\r\\n### Cloud Code Improvements\\r\\n\\r\\nWe have big plans for Cloud Code in 2020 - but to start things off, we have a few small improvements:\\r\\n\\r\\n- _**Upgraded JavaScript Engine**_\xa0- we\u2019ve updated to Rhino Engine 1.7.12 for additional features, performance, and stability.\\r\\n- _**EcmaScript 6 Support**_ \\\\- the updated Rhino engine enables new language features. Rhino isn\u2019t fully ES6 compliant, but it\u2019s miles ahead of the level of support that we had before.\xa0\\r\\n\\r\\nNote - for compatibility reasons, the new ES6 support is disabled by default for existing apps. You can enable this feature by going to the new\xa0_Cloud Code_\xa0settings section of the\xa0**Design | Core App Info**\xa0page.\\r\\n\\r\\n### Sign in with Apple\\r\\n\\r\\n![](images/2020-02-20_11-05-38.png)\\r\\n\\r\\nWe have added\xa0**Sign in with Apple**\xa0support to brainCloud. This works similarly to all of our other authentication types.\\r\\n\\r\\nTo take advantage of this feature, be sure to grab the latest brainCloud 4.4 Client Libs.\\r\\n\\r\\n### Faster API Reference\\r\\n\\r\\nThis one is a big quality-of-life improvement.\\r\\n\\r\\nAs you know, as the brainCloud API has grown (over 400+ API calls and counting!) - the time to load our API Reference had gotten slower and slower.\\r\\n\\r\\nWe put the devs on it - and they were able to optimize it for a huge performance improvement. Now instead of taking 60+ seconds to load - it opens in 5-10 seconds from cold - even faster if you have it cached.\\r\\n\\r\\nCheck it out - you\u2019ll find it in the usual location\xa0[here](/api/introduction).\xa0\\r\\n\\r\\n### Misc\\r\\n\\r\\nAs usual, a few additional requests have made it into this release:\\r\\n\\r\\n- _Google OpenID Support_\xa0- we have added support for Google\u2019s new (modern) OpenID authentication system\\r\\n- _Item Catalog Deployment Option_\xa0- you can now\xa0_opt-out_ of updating your Item Catalog during an app deployment. This feature allows you to maintain a more dynamic marketplace where your Item Catalog is managed directly in your live app, instead of strictly publishing updates from dev \u2192 prod.\\r\\n- _New and fixed API calls_\xa0- we have fulfilled a bunch of customer requests for specific API calls. Check the API Changes sections - we hope your favorites are there!\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe\'ve made the following portal changes:\\r\\n\\r\\n### Design\\r\\n\\r\\n- **Core App Info | Advanced Settings**\\r\\n    - We have added a new\xa0_Cloud Code_\xa0section, where you can enable the new ES6-level JavaScript support\\r\\n    - We have also added a new compatibility flag,\xa0_Return legacy-format Multi Social Leaderboard results,_ to preserve the old behavior for the\xa0`GetMultiSocialLeaderboard()`\xa0call for existing apps.\\r\\n- **Cloud Data | Custom Entities**\\r\\n    - We\u2019ve moved the\xa0_Custom Entities_\xa0configuration screen out from under\xa0_Custom Config_.\\r\\n    - You can now specify an\xa0_identifier_\xa0field to use to label your objects when viewing them in the Entity Editor lists.\\r\\n    - There is also a new\xa0_Monitor_\xa0option on the\xa0_Action_\xa0menu, that jumps you into Global Monitoring to view the entities of that type.\\r\\n\\r\\n### Monitoring\\r\\n\\r\\n- **Global Monitoring | Custom Entities**\\r\\n    - The new\xa0_Custom Entity Editor_\xa0screens in\xa0_Global Monitoring_\xa0allow you to view and edit all of the custom entities of your application.\\r\\n    - You can\xa0_search_\xa0for entities using the\xa0_Filter_\xa0dropdown.\\r\\n    - You can\xa0_import_\xa0and\xa0_export_\xa0entities from JSON files.\\r\\n- **User Monitoring | Custom Entities**\\r\\n    - We also allow you to view\xa0_Custom Entities_\xa0at the\xa0_user_\xa0level\\r\\n    - In this view, you only see\xa0_owned_\xa0collections - and specifically, only entities that are\xa0_owned_\xa0by the\xa0_selected user_.\\r\\n\\r\\n### General\\r\\n\\r\\n- We have re-ordered the screens under\xa0**Global Monitoring**\xa0to be\xa0_alphabetical_.\xa0  \\r\\n    \\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following calls have been added to the brainCloud API:\\r\\n\\r\\n- **Authentication**\\r\\n    - New\xa0`AuthenticateApple()`\xa0call for Sign in with Apple support.\\r\\n    - New\xa0`AuthenticateGoogleOpenId()`\xa0call for Google\u2019s OpenID authentication.\\r\\n    - Improved Password Reset calls (with control over when the URL links expire)\\r\\n        - `ResetEmailPasswordWithExpiry()`\\r\\n        - `ResetEmailPasswordAdvancedWithExpiry()`\\r\\n        - `ResetUniversalIdPasswordWithExpiry()`\\r\\n        - `ResetUniversalIdPasswordAdvancedWithExpiry()`\\r\\n    - _Note that we have deprecated the older password reset calls where you do not explicitly set an expiry._\\r\\n- **CustomEntity**\\r\\n    - Added\xa0`SysUpdateEntityOwner()`\xa0call to migrate custom entities between users.\xa0\\r\\n- **GlobalApp**\\r\\n    - `SysUpdatePropertyString()`\xa0and\xa0`SysUpdatePropertyJSON()`\xa0have been added to both Client and S2S Cloud Code interfaces for devs building offboard tools.\\r\\n- **GlobalEntity**\\r\\n    - Added S2S\xa0_Cloud Code_\xa0implementations for the following missing calls\\r\\n        - `DeleteEntity()`\\r\\n        - `GetRandomEntitiesMatching()`\\r\\n        - IncrementGlobalEntityData()\\r\\n        - `MakeSystemEntity()`\\r\\n        - `UpdateEntity()`\\r\\n        - `UpdateEntityAcl()`\\r\\n        - `UpdateEntityOwnerAndAcl()`\\r\\n        - `UpdateEntityTimeToLive()`\\r\\n- **Identity**\\r\\n    - New\xa0`AttachAppleIdentity()`,\xa0`DetachAppleIdentity()`\xa0and\xa0`MergeAppleIdentity()`\xa0calls\\r\\n    - New\xa0`AttachGoogleOpenId()`,\xa0`DetachGoogleOpenId()`\xa0and\xa0`MergeGoogleOpenId()`\xa0calls\\r\\n- **Leaderboard**\\r\\n    - Fixed\xa0`GetMultiSocialLeaderboard()`\xa0so that it doesn\u2019t return friends that haven\u2019t played on any of the leaderboards requested.\xa0_There is a new compatibility flag to preserve the old behaviour._\\r\\n    - Added\xa0`SysResetNeverLeaderboard()`\xa0to arbitrarily reset/rotate leaderboards.\xa0\\r\\n- **PlayerState**\\r\\n    - New\xa0`UpdateTimeZoneOffset()`\xa0and\xa0`UpdateLanguageCode()`\xa0calls - useful in certain scenarios.\xa0\\r\\n- **PushNotifications**\\r\\n    - Added the following missing methods to the S2S Cloud Code proxy:\\r\\n        - `DeregisterPushNotificationDeviceToken()`\\r\\n        - `ScheduleNormalizedPushNotificationUTC()`\\r\\n        - `ScheduleNormalizedPushNotificationMinutes()`\\r\\n        - `ScheduleRawPushNotificationUTC()`\\r\\n        - `ScheduleRawPushNotificationMinutes()`\\r\\n        - `ScheduleRichPushNotificationUTC()`\\r\\n        - `ScheduleRichPushNotificationMinutes()`\\r\\n        - `SendNormalizedPushNotification()`\\r\\n        - `SendRawPushNotification()`\\r\\n        - `SendRichPushNotification()`\\r\\n        - `SendRichPushNotificationWithParams()`\\r\\n- **Script**\\r\\n    - Added\xa0`GetScheduledCloudScripts()`\xa0to the Client libs - it was previously Cloud Code only.\xa0\\r\\n    - Added\xa0`GetRunningOrQueuedCloudScripts()`\xa0call (to both Client and Cloud Code)\xa0\\r\\n- **User**\\r\\n    - New password reset calls with better control over when the URLs expire:\\r\\n        - `SysSendPasswordResetEmailWithExpiry()`\\r\\n        - `SysSendPasswordResetEmailAdvancedWithExpiry()`\\r\\n        - `SysSendPasswordResetUniversalIdWithExpiry()`\xa0\\r\\n        - `SysSendPasswordResetUniversalIdAdvancedWithExpiry()`\\r\\n\\r\\n### Bonus API\\r\\n\\r\\nIn addition, we\u2019ve added a new Cloud Code Utility method that can be used to efficiently create RSA signatures (since doing so through raw Javascript is pretty slow).\\r\\n\\r\\nThe new method can be found in the Bridge Utility service - i.e.\xa0`bridge.utils().signRSASha256()`.\xa0See the APIRef for more info!\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - We\u2019ve been busy adding our Relay Comms APIs to all the missing libraries. Unity/C#, Unreal, Java, and JavaScript are now good. C++ / Objective-C / Swift support is still outstanding, but coming soon.\\r\\n    - The libraries have otherwise been updated with the latest 4.4 APIs. Grab them while they\u2019re hot!\xa0\\r\\n- Documentation updates\\r\\n    - New Faster API Reference!\\r\\n    - Plus we\u2019ve documented all the latest APIs\\r\\n- Important Fixes\\r\\n    - To-be-compiled\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2019/12/11/release-4-3-5","metadata":{"permalink":"/braincloud-apiref/release/2019/12/11/release-4-3-5","source":"@site/release/2019-12-11-release-4-3-5/index.md","title":"Release 4.3.5","description":"This is a small release that addresses some specific customer requests.","date":"2019-12-11T00:00:00.000Z","formattedDate":"December 11, 2019","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":2.89,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 4.3.5","date":"2019-12-11","tags":["release-history"]},"prevItem":{"title":"Release 4.4","permalink":"/braincloud-apiref/release/2020/02/19/release-4-4"},"nextItem":{"title":"Release 4.3","permalink":"/braincloud-apiref/release/2019/11/13/release-4-3"}},"content":"This is a small release that addresses some specific customer requests.\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Quest Management API\\r\\n\\r\\nWe\u2019ve added an API for managing Quests. The API is available directly via S2S, and also via cloud-code.\\r\\n\\r\\nIn doing this work, we cleaned up two aspects of Quests:\\r\\n\\r\\n- We added a new\xa0`title` field to Quests - to make them easier to manage\\r\\n- We have also made the new APIs return the embedded\xa0_milestones_\xa0(which we call\xa0_tasks_) in an array field called\xa0`tasks` now instead of the old\xa0`milestones`\xa0field.\xa0\\r\\n\\r\\nTo prevent issues with existing apps, a new\xa0_compatibility flag_\xa0has been added to control this behavior (accessible from the\xa0**Design | Core App Info | Advanced Settings**) page. The compatibility flag defaults to\xa0_on_\xa0for existing apps.\\r\\n\\r\\nThe Quest Management API methods are part of the `Gamification` service.\\r\\n\\r\\n### Milestone Management API\\r\\n\\r\\nAnd, if you can edit Quests, it only makes sense that you can edit Milestones as well! So there is now an API for that as well.\\r\\n\\r\\nThe Milestone Management API methods are part of the `Gamification` service.\\r\\n\\r\\n### Reset Password APIs\\r\\n\\r\\nWe have added some new cloud-code accessible APIs for triggering password reset emails. These APIs are mostly useful if you are building a management portal for your app.\\r\\n\\r\\nYou\'ll find these new APIs in the `User` service.\\r\\n\\r\\n### Custom Entity Paging\\r\\n\\r\\nFinally, we\u2019ve tweaked our Custom Entity paging APIs to be more consistent with the other Entity APIs. They now take a single\xa0context\xa0object instead of requiring each of the component parts to be sent in separately.\\r\\n\\r\\n_Since Custom Entities are still in beta, we\u2019re being more aggressive than usual about replacing those old methods. The old methods are being removed immediately from the 4.3.5 libraries. That said, moving to the new versions is super simple, and the old libs will continue to work for you for now._\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nThere aren\u2019t a lot of portal changes in this release.\\r\\n\\r\\n### Design\\r\\n\\r\\n- **Core App Info | Advanced Settings**\\r\\n    - A new compatibility flag,\xa0_Return milestones field instead of tasks field for older client Quest APIs,_ has been added. As usual, this flag defaults to\xa0_enabled_\xa0for\xa0_existing apps_, and\xa0_disabled_\xa0for\xa0_new apps_.\\r\\n- **Gamification | Quests**\\r\\n    - Quests now have a separate\xa0_title_\xa0from the\xa0_description_\xa0field\\r\\n    - When editing pre-existing Quests, the\xa0_title_\xa0will default to the\xa0_questId_.\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the\xa0brainCloud\xa0API:\\r\\n\\r\\n- **CustomEntity**\\r\\n    - New Paging calls - `GetEntityPage()`, `GetEntityPageOffset()`, `SysGetEntityPage()`, `SysGetEntityPageOffset()`\\r\\n- **Gamification**\\r\\n    - New\xa0_Quest Management_\xa0API calls - `SysCreateQuest()`, `SysReadQuest()`, `SysUpdateQuest()`, `SysDeleteQuest()`, `SysAddQuestTask()`, `SysUpdateQuestTask()`, `SysDeleteQuestTask()`, `SysReorderQuestTasks()`, `SysGetQuestPage()`, `SysGetQuestPageOffset()`\\r\\n    - New\xa0_Milestone Management_\xa0APIs calls - `SysCreateMilestone()`, `SysReadMilestone()`, `SysUpdateMilestone()`, `SysDeleteMilestone()`, `SysGetMilestonePage()`, `SysGetMilestonePageOffset()`\\r\\n- **User Service**\\r\\n    - New APIs for\xa0_triggering Password Reset emails_\xa0- `SysSendPasswordResetEmail()`, `SysSendPasswordResetEmailAdvanced()`, `SysSendPasswordResetUniversalId()`, `SysSendPasswordResetUniversalIdAdvanced()`\\r\\n\\r\\nWe have deprecated the following methods:\\r\\n\\r\\n- **CustomEntity**\\r\\n    - `GetPage()`, `GetPageOffset()`, `SysGetPage()`, `SysGetPageOffset()` - replaced with the new versions described above, which are more consistent with our other Entity APIs.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - There are only two new Client-library API calls - the new `GetEntityPage()` and `GetEntityPageOffset()` calls of the CustomEntity service. All other calls are cloud-code only.\\r\\n- Documentation updates\\r\\n    - The new API calls have been added to the APIRef\\r\\n- Important Fixes\\r\\n    - **Uploaded File Types**\xa0- we have enhanced brainCloud to automatically assign content types based on file extensions when uploaded via the portal, instead of blindly setting everything to the generic\xa0application/octet-stream\xa0content type. The old behavior was problematic for some devs when dealing with apps running in Internet Explorer.\xa0\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2019/11/13/release-4-3","metadata":{"permalink":"/braincloud-apiref/release/2019/11/13/release-4-3","source":"@site/release/2019-11-13-release-4-3/index.md","title":"Release 4.3","description":"Release 4.3 fulfills a bunch of community requests - there is something for everyone!","date":"2019-11-13T00:00:00.000Z","formattedDate":"November 13, 2019","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":6.565,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 4.3","date":"2019-11-13","tags":["release-history"]},"prevItem":{"title":"Release 4.3.5","permalink":"/braincloud-apiref/release/2019/12/11/release-4-3-5"},"nextItem":{"title":"Release 4.2","permalink":"/braincloud-apiref/release/2019/09/18/release-4-2"}},"content":"Release 4.3 fulfills a bunch of community requests - there is something for everyone!\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Geo Matchmaking\\r\\n\\r\\nWe have enhanced our Online Matchmaking support to automatically match players up into lobbies in the best server regions (for them).\\r\\n\\r\\nThe process is simple, and works like this:\\r\\n\\r\\n- When a lobby is first created, it is assigned to the region closest to the user that initiated it\\r\\n- As users look for lobbies (i.e. online matchmaking), the lobby\'s rating and region location (i.e. ping data) are automatically considered\\r\\n\\r\\nEssentially, the best matching (rating-wise) lobby in an acceptable region will be automatically selected.\\r\\n\\r\\nTo utilize geo matchmaking:\\r\\n\\r\\n- Create lobby types with servers in multiple regions\\r\\n- Specify both ping data and rating in the compound matchmaking algorithm (see below)\\r\\n\\r\\nExample `algo` json object for geo matchmaking:\\r\\n\\r\\n{ \\r\\n  \\"strategy\\":\\"compound\\",\\r\\n  \\"algos\\":[ \\r\\n    { \\"criteria\\":\\"ping\\", \\"strategy\\":\\"absolute\\", \\"alignment\\":\\"absolute\\" },\\r\\n    { \\"criteria\\":\\"rating\\", \\"strategy\\":\\"ranged-percent\\", \\"alignment\\":\\"center\\" }\\r\\n  ],\\r\\n  \\"compound-ranges\\":[ \\r\\n    [ 40, [ 10, 20.5, 80 ] ],\\r\\n    [ 70, [ 20, 20.5, 80, 160 ] ],\\r\\n    [ 140, [ 80, 160 ] ],\\r\\n    [ 210, [ 80, 160 ] ]\\r\\n  ]\\r\\n}\\r\\n\\r\\n### Custom Entity (Beta) Migration\\r\\n\\r\\nWe continue to improve our support for custom entities.\\r\\n\\r\\nAs you may-or-may-not-know, Custom Entities are an improved version of\xa0_Global Entities_\xa0and are available to users of our\xa0_Plus Plans_.\xa0\\r\\n\\r\\nCustom Entities allow developers to build data-rich applications with much\xa0_larger_\xa0and\xa0_more complex_\xa0data-sets. The power comes from storing each entity type in its own database\xa0_collection_ and allowing the developer to define\xa0_custom indexes_ unique to that entity type.\\r\\n\\r\\nThis release adds several new features to the mix:\\r\\n\\r\\n- New screen under\xa0**Design | Custom Config | Custom Entities**\xa0for defining custom entity types, and the indexes associated with them. (Prior to this you had to use the API to do this)\\r\\n- You can now mark a Custom Entity to be\xa0**migrated**\xa0automatically during\xa0**app deployment**\xa0(i.e. when pushing an updated configuration from the development version of your app to the production version).\xa0_Note that only un-owned entities can be migrated._\\r\\n\\r\\n_Next up: we\u2019ll be editing a Custom Entity editor screen to Global Monitoring soon, so you\u2019ll be able to create and edit custom entities directly._\\r\\n\\r\\n### Set-top Handoff API\\r\\n\\r\\nWe have added a second, more flexible hand-off API that can be used for authenticating brainCloud apps on devices with limited inputs (like the Apple TV or a VR headset).\\r\\n\\r\\nThe API enables a use case where:\\r\\n\\r\\n- the user can log into a brainCloud app via a normal smartphone login\\r\\n- the smartphone app generates a simple set-top handoff code via\xa0`CreateSettopHandoffCode()`\xa0cloud code API. The handoff code\u2019s composition, length, and duration that it\u2019s enabled is specified by the app.\\r\\n- the user then enters the code into the Apple TV app or VR headset, which authenticates the user via the new\xa0`AuthenticateSettopHandoff()`\xa0API call\\r\\n\\r\\n### User Service\\r\\n\\r\\nBy popular request, we\u2019ve added a new\xa0`User`\xa0service to brainCloud.\\r\\n\\r\\nThis service provides the following advanced, cloud-code only APIs:\\r\\n\\r\\n- `SysCreateUser*()`\xa0- useful in certain app scenarios. Allows an app to dynamically pre-create a user account (separate from the normal account during user login/registration)\\r\\n- `SysGetPage()`\xa0/\xa0`SysGetPageOffset()`\xa0- allows a cloud code script to iterate through the users in an app.\\r\\n\\r\\nNote that for system performance reasons, we have restricted the fields that can be used when querying the users to iterate through. These restrictions can be lifted in special circumstances for apps that will have constrained user sets (i.e. a few thousand users or less).\\r\\n\\r\\n_Pro-tip: Apps with a need to iterate through larger groups of users in more interesting ways are encouraged to create an\xa0**owned Custom Entity**\xa0for each user._\\r\\n\\r\\n### Misc Additions\\r\\n\\r\\nThe following additional tweaks (mostly from customer requests) have made it into release 4.3:\\r\\n\\r\\n- **User Items screen**\xa0- we\u2019ve added a new screen to User Monitoring to view the contents of the user\u2019s inventory.\\r\\n- **Dynamic group leaderboards**\xa0- we\u2019ve added a new\xa0`PostScoreToDynamicGroupLeaderboard()`\xa0call to allow group leaderboards to be created on the fly\\r\\n- **Autojoin across multiple group types**\xa0- the new\xa0`AutoJoinGroupMulti()`\xa0call allows you to specify a list of group types to choose from\\r\\n- **Reset quests**\xa0- we\u2019ve added\xa0`ResetQuests()`\xa0and\xa0`ResetAllQuestsAndMilestones()`\xa0API calls\\r\\n- **Counts APIs**\xa0- we\u2019ve added two methods to the `GlobalApp` service to retrieve some raw metric data about your app (DAU, MAU, that sort of thing). These APIs are cloud-code only.\\r\\n- **Updated client timeouts**\xa0- the client libs automatically retry operations if they timeout - but the default timeouts were a bit low for some long-running scripts (which can go up to 60 seconds or more). So we have adjusted them to better we\u2019ve updated the default client library retry timeouts from `[15s, 10s, 10s]` to `[15s, 20s, 30s, 50s]`. This change should be transparent to your app.\\r\\n- **Bundle compression**\xa0- we have added optional bundle compression to our Unity libraries. It is currently off-by-default but can be enabled by the developer.\\r\\n- **OKTA authentication support**\xa0- you can now write apps that implement OKTA authentication via our External Auth mechanism. To validate the JWT token passed in, simply use the new\xa0`verifyOktaJwt()`\xa0method that we have added to the\xa0Identity\xa0service.\xa0\\r\\n- **Cloud code editor extension change**\xa0- we\u2019ve changed the default extension for our cloud code scripts from\xa0`.js`\xa0to\xa0`.ccjs`\xa0(i.e.\xa0\xa0**c**loud\xa0**c**ode\xa0**j**ava**s**cript) - this mostly makes it easier for our sites and support teams to share example script.\xa0_Pro-tip - configure your IDE to treat .ccjs files as javascript!_\\r\\n- **Facebook Graph API v 2.11**\xa0- support was added as a patch to 4.2 actually\u2026 (added previously as a 4.2.X patch)\\r\\n- **Google Play Service V3**\xa0- the system is now using latest (V3) APIs\u2026 (added previously as a 4.2.X patch)\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nThe following changes have been made to the portal:\\r\\n\\r\\n### General\\r\\n\\r\\n- **Branding/Themes**\\r\\n    - **Pretty!** We\u2019ve greatly improved the customizability of the working area of the portal. You will see the impact of this with more varied themes as we go from release to release\u2026 (and more branding flexibility for our private instance licensees)\\r\\n\\r\\n### Design\\r\\n\\r\\n- **Custom Config | Custom Entities**\\r\\n    - This new screen allows you to define Custom Entity types, and the custom indexes that go along with them.\\r\\n\\r\\n### Monitoring\\r\\n\\r\\n- **User Monitoring | User Items**\\r\\n    - New screen allows you to view and/or delete the items owned by a user\\r\\n- **User Monitoring | Logs**\\r\\n    - We\u2019ve added an\xa0_Elapsed Time_\xa0column to the user logs to show how much server-time was spent processing a request bundle\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the brainCloud API:\\r\\n\\r\\n- **Authentication**\\r\\n    - `AuthenticateSettopHandoff()`\xa0call added - allows users to login using simple codes\\r\\n- **Gamification**\\r\\n    - Added new\xa0`ResetQuests()`\xa0and\xa0`ResetAllQuestsAndMilestones()`\xa0calls to cloud code - helpful for testing and debugging\\r\\n- **GlobalApp**\\r\\n    - Added\xa0`SysGetDailyCounts()`\xa0call to return the counts for your app for a single day\\r\\n    - Added\xa0`SysGetMonthlyCounts()`\xa0call to return the counts for your app for the specified calendar month\xa0\\r\\n- **Group**\\r\\n    - `AutoJoinGroupMulti()`\xa0call added - enables joining a random group selected from multiple group types\\r\\n- **Identity**\\r\\n    - `CreateSettopHandoffCode()`\xa0call added - creates a code that can be used to log the user in via\xa0`AuthenticateSettopHandoff()`\\r\\n    - `VerifyOktaJWT()`\xa0call added for verifying OKTA JWT tokens\\r\\n- **Leaderboard**\\r\\n    - `PostScoreToDynamicGroupLeaderboard()`\xa0call added to allow group leaderboards to be dynamically allocated\\r\\n- **User**\\r\\n    - Create users in cloud-code via the new\xa0`SysCreateUserEmailPassword()`,\xa0`SysCreateUserUniversalId()`\xa0and\xa0`SysCreateUserExternalAuth()`\xa0calls\\r\\n    - Page through your app\u2019s users via the new\xa0`SysGetPage()`\xa0and\xa0`SysGetPageOffset()`\xa0calls\\r\\n\\r\\nWe have also deprecated the following methods:\\r\\n\\r\\n- **Gamification**\\r\\n    - Deprecated\xa0`ResetMilestones()`\xa0in the client libs - this method is now cloud-code only, like the new\xa0`ResetQuests()`\xa0and\xa0`ResetAllQuestsAndMilestone()`\xa0calls\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - **All libraries** have the new **4.3 client APIs**\\r\\n    - **All libraries** also have the **new connection timeout** values\\r\\n    - The **Java** and **C++** libs have been updated with geo/ping-data support - meaning that all libs except Objective-C/Swift and AS3 support this now.\\r\\n    - The **Unity library** now supports **bundle compression** for sends and receives. _It is disabled by default_.\\r\\n- Documentation updates\\r\\n    - The docs have been enhanced with the latest API calls.\\r\\n- Important Fixes\\r\\n    - <to-be-compiled\\\\>\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2019/09/18/release-4-2","metadata":{"permalink":"/braincloud-apiref/release/2019/09/18/release-4-2","source":"@site/release/2019-09-18-release-4-2/index.md","title":"Release 4.2","description":"Release 4.2 contains the first versions of some new heavy-hitter features. Read on for details!","date":"2019-09-18T00:00:00.000Z","formattedDate":"September 18, 2019","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":6.84,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 4.2","date":"2019-09-18","tags":["release-history"]},"prevItem":{"title":"Release 4.3","permalink":"/braincloud-apiref/release/2019/11/13/release-4-3"},"nextItem":{"title":"Release 4.1","permalink":"/braincloud-apiref/release/2019/06/25/release-4-1"}},"content":"Release 4.2 contains the first versions of some new heavy-hitter features. Read on for details!\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Item Management\\r\\n\\r\\nWe are very pleased to introduce the first iteration of brainCloud\'s new\xa0**Item Management**\xa0system - which incorporates both an `ItemCatalog` service to manage the master catalog of items, and a\xa0`UserItems`\xa0service to manage the list of items that users own.\\r\\n\\r\\n![](images/2019-09-13_16-25-56-1-1024x645.png)\\r\\n\\r\\nTogether with a new\xa0**Catalog Editor**, these services make it easy to create experiences where users can be awarded, purchase, sell, trade and consume a rich variety of items (with custom behaviours).\\r\\n\\r\\nKey features of this system include:\\r\\n\\r\\n- Localizable names and descriptions\\r\\n- Item categories and tags for organization\\r\\n- Item pricing (in multiple virtual currencies)\\r\\n- Custom item meta-data\\r\\n- Item \\"use\\" management\\r\\n- Activate-able status effects\\r\\n- Cool-down and recovery times\\r\\n- Stackable items\\r\\n- Upload images and assign resource/asset tags\\r\\n- Publishing states - draft, published, retired and revoked\\r\\n- Deployment integration\\r\\n- And with brainCloud\'s new Blockchain Framework, you can even trade items on the Blockchain! (_see below!_)\\r\\n\\r\\n### Custom Entities (beta!)\\r\\n\\r\\nbrainCloud already has some great APIs for managing data in your apps - but due to the challenges of keeping things light and scalable, none of them offer the true flexibility needed for heavy data-oriented applications.\\r\\n\\r\\nOur existing Global Entity system, for example, only indexes entities by the fixed\xa0`entityIndexedId`. Although fine for simple applications - in most scenarios this means that Global Entities don\'t scale efficiently past 1000 objects.\\r\\n\\r\\nOur Custom Entities system is different, in that it allows the developer to define multiple, custom indexes per entity type. This totally opens the door to much richer applications, with more intense data needs.\\r\\n\\r\\nNote - because it\'s brainCloud, Custom Entities still include:\\r\\n\\r\\n- ACL ownership\\r\\n- TTL\\r\\n- `createdAt`,\xa0`updatedAt`\xa0timestamps\\r\\n- concurrency versioning\\r\\n\\r\\nNote - this is a beta release, so there are some limitations:\\r\\n\\r\\n- **We don\'t have a web UI yet - so you cannot view /** **edit / delete** **custom entities in our Design Portal.** _You can access them via the API Explorer, of course._\\r\\n- **We don\'t yet support importing / exporting / pushing of custom entities.** So basically custom entities are currently trapped within the apps that created them (for now).\\r\\n\\r\\nWe plan to address these limitations very soon.\xa0_And also note, when Custom Entities is released it will be a premium feature with additional data storage charges. Details coming soon._\\r\\n\\r\\nAnd that\'s not all. We have big plans for Custom Entities going forward - so stay tuned!\\r\\n\\r\\n### Timed Status Effects\\r\\n\\r\\nWhen building our Item Management system we thought it would be nice to include status effects - as in, when you\xa0_use_\xa0an item, you might trigger a status effect like \\"double-xp\\" or \\"invulnerability\\" for a period of time.\\r\\n\\r\\nOnce we got to implementing things though, we realized that this status system would be useful on its own as well - so we\'ve made it accessible via new APIs in the\xa0`PlayerState`\xa0service.\\r\\n\\r\\nIt\'s super-simple to use. Just apply a \\"named\\" status effect to the user via the\xa0`SetUserStatus()`\xa0call - specifying a duration that it should be applied for, and optionally some custom JSON. We\'ll save that state - and return it if you call\xa0`GetUserStatus()`\xa0- as well as automatically when the user logs in.\\r\\n\\r\\n_Note - brainCloud won\'t pro-actively notify you that a status has expired. The app should set it\'s own timers based on the data returned by the APIs._\\r\\n\\r\\n### Blockchain Integration\\r\\n\\r\\nWe\'ve been busy adding blockchain support deep into the heart of brainCloud.\\r\\n\\r\\nThis is part of our continuing efforts to ensure that brainCloud is the best foundation for your apps - both today and for the future!\xa0\\r\\n\\r\\nElements of the blockChain integration in 4.2 include:\\r\\n\\r\\n- _Blockchain Integration Framework (BIF)_\xa0- brainCloud has been enhanced with a new framework to allow connections to multiple blockChain technologies. Currently EOS integration is in place (more will come soon!)\\r\\n- _Blockchain configuration_\xa0- attach a blockchain configuration to an app. Currently limited to a single blockchain per app, but we may enhance that in the future.\\r\\n- _Blockchain Identities_\xa0- attach a users public key to a user\'s profile - used to identify and modify items that the user owns on the blockchain\xa0\u2190\xa0_note, it\'s up to the client app to ensure that the user is who they say they are!_\\r\\n- _Item Management Blockchain Sync_\xa0- items can be published to and traded on the blockchain - with updates automatically synced in brainCloud\\r\\n- _Blockchain Entity Support_\xa0- brainCloud\'s new Custom Entities are built to support integration with the BIF for blockchain-based ownership management\\r\\n- _Blockchain Purchase Support_\xa0- with the key Blockchain Integration and Blockchain Identity components now in place, brainCloud is now ready to support custom blockchain-based purchases (either via Item Trades or custom AppStores)\\r\\n\\r\\nObviously, this is just the beginning. Stay tuned as we evolve our blockchain support in future releases!\\r\\n\\r\\n### Kafka Integration\\r\\n\\r\\nbrainCloud now offers Kafka integration in addition to our pre-existing Segment integration for DataStream events.\\r\\n\\r\\nWith Kafka and Segment both supported out-of-the-box, there are literally hundreds (if not thousands) of systems that you can hook up to your brainCloud apps for deeper data analytics, data mining, etc.\xa0\\r\\n\\r\\n### Other Features\\r\\n\\r\\nBut wait - there is more! brainCloud 4.2 also includes these goodies:\\r\\n\\r\\n- _Crash Reporting_\xa0-\xa0new API calls for sending crash reports to DataStream services like Segment and Kafka.\\r\\n- _New platforms!_\xa0-\xa0brainCloud private instances now support both\xa0_Google Cloud Platform_\xa0and\xa0_Microsoft Azure_.\\r\\n- _External lookups!_\xa0- ability to lookup users via the External ID in User Monitoring\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe\'ve made the following portal changes:\\r\\n\\r\\n### Design\\r\\n\\r\\n- **Integrations | Blockchain**\\r\\n    - A new screen where you can configure the blockchain integration settings for your app\\r\\n- **Integration | Manage Integrations**\\r\\n    - Kafka has been added as a new DataStream destination\\r\\n- **Item Management | Catalog**\\r\\n    - New screen for creating your app\'s item catalog\\r\\n\\r\\n### Monitoring\\r\\n\\r\\n- **Group Monitoring | Group Entities**\\r\\n    - The group entity editor has been greatly improved!\\r\\n- **User Monitoring | Select User**\\r\\n    - You can now look-up users via their External Auth id (if they have one)\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the\xa0brainCloud\xa0API:\\r\\n\\r\\n- **Authentication**\\r\\n    - AuthenticateExternal - We\'ve added the ability for External Auth scripts to override the externalId that will be stored, and to even provide the specific profileId to load. More details in the\xa0_Advanced_\xa0section of the\xa0[External Authentication](/learn/key-concepts/authentication/external-authentication/)\xa0overview page in API Docs.\\r\\n- **DataStream**\\r\\n    - New CrashReporting API has been added. Send crash reports to your back-end system for further analysis.\\r\\n    - For more information, see the DataStream service documentation\\r\\n- **[New!] Item Catalog**\\r\\n    - These APIs allow devs to read and modify the central item catalog\\r\\n    - Purchases and other operations are handled via the User Items Service (below)\\r\\n    - For more information, see the ItemCatalog service documentation\\r\\n- **Player State**\\r\\n    - New Timed Status Effect API methods have been added to the Player State service\\r\\n    - For more information, see the PlayerState service documentation\\r\\n- **[New!]\xa0User Items**\\r\\n    - This service provides the functionality for purchasing, selling, trading, and using items\\r\\n    - For more information, see the UserItem service documentation\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - The 4.2 libraries have the latest APIs - and will be release very soon - stay tuned!\\r\\n    - C#/Unity\\r\\n        - Updated HTTP libraries (note, wrapped in the Braincloud namespace, so they shouldn\'t conflict with anything)\\r\\n        - Added BC\\\\_DEBUG\\\\_LOG\\\\_ENABLED macro for better log control, and improved profiler performance\\r\\n        - **Important: Unity folder structure has been changed.** _Clients will need to delete their brainCloud plug-in and re-import it to properly update the folder structure on older projects._ The brainCloud Folder needs to be directly in the Assets folder. Changes were made because the plugin\'s Resources folder was conflicting with the Unity Resources folder, and messing with some build systems. Thus we have restructured our assets and renamed our resources folder to BCResources to compensate.\\r\\n    - Javascript\\r\\n        - Ping data APIs now supported (for geo matchmaking)\\r\\n    - AS3\\r\\n        - 4.2 version coming soon.\\r\\n- Documentation updates\\r\\n    - Check out the APIDocs for information on the latest APIs -\xa0[https://getbraincloud.com/api/introduction](/api/introduction)\xa0\\r\\n    - Don\'t forget to check out our expanded knowledge base -\xa0[http://help.getbraincloud.com](http://help.getbraincloud.com/)\xa0\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2019/06/25/release-4-1","metadata":{"permalink":"/braincloud-apiref/release/2019/06/25/release-4-1","source":"@site/release/2019-06-25-release-4-1/index.md","title":"Release 4.1","description":"Note - you can also view the highlights in our new Roadmap!","date":"2019-06-25T00:00:00.000Z","formattedDate":"June 25, 2019","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":7.615,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 4.1","date":"2019-06-25","tags":["release-history"]},"prevItem":{"title":"Release 4.2","permalink":"/braincloud-apiref/release/2019/09/18/release-4-2"},"nextItem":{"title":"Release 4.0 is live!","permalink":"/braincloud-apiref/release/2019/05/23/release-4-0"}},"content":"Note - you can also view the highlights in our new [Roadmap](https://portal.productboard.com/braincloud/1-braincloud-roadmap/tabs/4-coming-in-4-1)!\\r\\n\\r\\n# Release Highlights\\r\\n\\r\\n## Group Leaderboards\\r\\n\\r\\nAlthough brainCloud has long supported filtering leaderboards to group members, it has not supported true Group Leaderboards - where each entry in the leaderboard represent\'s a Group\'s (not a Player\'s) score. Until now that is.\\r\\n\\r\\nNow, when creating a leaderboard, you will first choose whether it is a\xa0**Player** or a\xa0**Group** Leaderboard.\xa0\\r\\n\\r\\n![](images/2019-06-20_09-58-35.png)\\r\\n\\r\\nImportant notes regarding Group Leaderboards:\\r\\n\\r\\n- Any member of a group can post a score on behalf of their team\\r\\n- Post group scores via the new [PostScoreToGroupLeaderboard()](/api/capi/leaderboard/postscoretogroupleaderboard) method. Additional new calls are described in the API section (below).\\r\\n- Group Leaderboards\xa0_cannot_\xa0be used as the basis for Tournaments or Divisions\\r\\n\\r\\n_Note - we are considering adding Group Tournament and Division support in the future. If it is important to you, vote for it in our\xa0[Roadmap](https://getbraincloud.com/roadmap)!_\\r\\n\\r\\n## Group Enhancements\\r\\n\\r\\nWe have made a bunch of enhancements to Groups and the Group APIs to go along with the new leaderboard support:\\r\\n\\r\\n- _Group Summary Data_ - we have added the concept of _summary data_ to groups. This is an additional bit of custom JSON, associated with your groups, that can be read by non-members. This is useful when _searching_ for groups with specific qualities and also when _viewing group leaderboards_\xa0\u2190 the summary data gets returned in the leaderboard calls\\r\\n- _Enhanced Searching_ - when searching for groups, you can now include additional fields (`isOpenGroup`, `updateAt`, `createdAt`, and `summaryData`) in the filter and sorting clauses.\\r\\n- _Get Random Groups_ - we have added a new API call for retrieving a random selection of groups that fit the specified criteria. See [GetRandomGroupsMatching()](/api/capi/group/getrandomgroupsmatching).\\r\\n\\r\\n## Voting Leaderboards\\r\\n\\r\\nSince we were already in the Leaderboard code, we thought we would cover another customer request.\\r\\n\\r\\nVoting Leaderboards are special leaderboards where the user doesn\'t post their _own_ score - rather, a player increments the score of _another player_.\xa0This makes the most sense for a\xa0`CUMULATIVE` leaderboard (where posts from players increment a total).\xa0You can imagine using this system to allow players to vote on custom content created by other players - like custom maps layouts, etc.\\r\\n\\r\\nImportant notes:\\r\\n\\r\\n- This technically isn\'t a new type of leaderboard - it\'s merely a new leaderboard call - [PostScoreToLeaderboardOnBehalfOf()](/api/capi/leaderboard/postscoretoleaderboardonbehalfof). Note that this call be made from Cloud Code only.\\r\\n- The API does not prevent users from voting (i.e. posting on behalf of another user) multiple times. We leave that enforcement up to the app (if desired, of course).\\r\\n\\r\\n## Multi-Region Support\\r\\n\\r\\nIn V4 we introduced\xa0the ability to host Relay and Room Servers. When configuring your servers, you had the ability to choose\xa0_which_ region to host them in.\\r\\n\\r\\nThis was a good start, but for global coverage developers would need to create individual server configurations for each of the regions they want to support. And if they\'re using our matchmaking and lobby services, they would need to set up separate lobby configurations for each region as well.\\r\\n\\r\\nRelease 4.1 greatly improves things:\\r\\n\\r\\n- You can now select\xa0_multiple regions_ for a\xa0_Room or Relay Server_ configuration in\xa0**My Servers**\\r\\n- There are new\xa0**Client APIs** that allow you to retrieve the\xa0_list of regions_ associated with lobby type(s), and calculate the latency (i.e. _ping times)_ to them\\r\\n- When launching a\xa0_Room or Relay Server_ from a lobby, the\xa0**Lobby Service** will now automatically choose the\xa0_best region_ for the members of that lobby\\r\\n\\r\\n## Dynamic Chat Channels\\r\\n\\r\\nAnd last but not least, this release introduces a new type of chat channel.\\r\\n\\r\\nDynamic chat channels are special channels that any user can create and/or join. They exist only for as long as there is activity. Once the channel inactivity timeout expires (typically 30 days), the history (and the channel itself) are automatically deleted and cleaned up.\\r\\n\\r\\nNote that developers need to manage the \\"membership\\" to the channels themselves. If a user of an app connects to a dynamic channel during a session, and you want them to reconnect the next time the app launches as well - you\'ll need to save that information somewhere in your app (likely in a user entity).\\r\\n\\r\\n* * *\\r\\n\\r\\n# Portal Changes\\r\\n\\r\\nWe have made the following portal changes:\\r\\n\\r\\n## Design\\r\\n\\r\\n- **Core App Info | Application IDs**\\r\\n    - Renamed \\"Facebook Secret\\" to \\"Facebook App Secret\\" to better clarify what it is\\r\\n- **Core App Info | Admin Tools**\\r\\n    - Added new options to the\xa0**Deployment** section to prevent overwriting the\xa0**Lobbies** and\xa0**MyServers** page settings. This is important because you very likely want to configure different performance + availability settings for dev vs. prod environments\\r\\n- **Cloud Code | My Servers**\\r\\n    - Enhanced the Room Server and Relay Server configuration screens to support multiple regions\\r\\n    - Note that each region can use the default configuration settings (server size, # containers, etc); or you can override those settings on a region-by-region basis\\r\\n- **Leaderboards | Leaderboard Configs**\\r\\n    - When creating a new Leaderboard config, you can now choose between\xa0**Player** and\xa0**Group** entry types (default is Player).\\r\\n    - Once the entry type has been set, it cannot be changed\\r\\n    - Tournaments and Division Templates cannot be enabled for Group leaderboards\\r\\n    - The entry type has been added to the Leaderboard Config list screen as well\\r\\n\\r\\n## Monitoring\\r\\n\\r\\n- **Global Monitoring | Leaderboards**\\r\\n    - Have been enhanced to show the results of\xa0**Group Leaderboards**\\r\\n    - The column displayed now automatically change depending upon the leaderboard type being displayed\\r\\n    - Clicking on a\xa0**group id** will bring you to the group.\\r\\n\\r\\n## General\\r\\n\\r\\n- **DOCS** menu\\r\\n    - Added a link to the new\xa0[Roadmap](https://getbraincloud.com/roadmap) site\\r\\n\\r\\n* * *\\r\\n\\r\\n# API Changes\\r\\n\\r\\nThe following changes/additions have affected the\xa0brainCloud\xa0API:\\r\\n\\r\\n- **Chat Service**\\r\\n    - **[SysCreateChannel()](/api/capi/chat/syscreatechannel)** can be used to create a new dynamic chat channel.\xa0Cloud code only.\\r\\n    - **[SysDeleteChannel()](/api/capi/chat/sysdeletechannel)** is used to delete the specified chat channel.\xa0Cloud code only.\\r\\n- **Group Service**\\r\\n    - **[New!] CreateGroupWithSummaryData()** allows the creation of a group with summary data.\\r\\n    - **[New!] [GetRandomGroupsMatching()](/api/capi/group/getrandomgroupsmatching)**\xa0returns a list of random groups that match the supplied criteria\\r\\n    - **[New!] [SysChangeGroupType()](/api/capi/group/syschangegrouptype)** changes the group type of a group. Useful for leveling up the maximum number of players in a group.\xa0Cloud code only.\\r\\n    - **[New!] [UpdateGroupSummaryData()](/api/capi/group/updategroupsummarydata)**\xa0allows a member to update the summary data of the app. Note that the user must be the owner of the group; or the group\'s data ACL must be set to \\"member\\": 2 to perform the update.\\r\\n    - **[Update]\xa0ReadGroup(), GetMyGroups(), ListGroupsPage()**, and\xa0**ListGroupsPageByOffset()** will now return the `summaryData` associated with groups\\r\\n    - **[Update]** Additional fields (`updatedAt`, `createdAt`,\xa0`isOpenGroup`, and\xa0`summaryData`) can now be used as filter and sort criteria in group calls.\\r\\n- **Leaderboard Service**\\r\\n    - **[New!] [GetGroupLeaderboardView()](/api/capi/leaderboard/getgroupleaderboardview)** and\xa0**[GetGroupLeaderboardViewByVersion()](/api/capi/leaderboard/getgroupleaderboardviewbyversion)**\xa0for retrieving the leaderboard results, relative to the specified group\\r\\n    - **[New!] [PostScoreToGroupLeaderboard()](/api/capi/leaderboard/postscoretogroupleaderboard)**\xa0for posting scores to group leaderboards. Note that the user must be a member of the specified group.\\r\\n    - **[New!] [PostScoreToLeaderboardOnBehalfOf()](/api/capi/leaderboard/postscoretoleaderboardonbehalfof)** for posting scores to a leaderboard on behalf of another player.\xa0Cloud code only.\\r\\n    - **[New!] [RemoveGroupScore()](/api/capi/leaderboard/removegroupscore)**\xa0for removing a group score.\\r\\n- **Lobby Service**\\r\\n    - **[New!] [GetRegionsForLobbies()](/api/capi/lobby/getregionsforlobbies)** retrieves a list of super-set of regions for the specified list of lobbies. Is used by the client app to determine with regions to ping test.\\r\\n    - **[New!] [PingRegions()](/api/capi/lobby/pingregions)** tells the client to ping the retrieved set of regions. Should be called after GetRegionsForLobbies() has completed.\\r\\n    - **[New!] [CreateLobbyWithPingData()](/api/capi/lobby/createlobbywithpingdata), [FindLobbyWithPingData()](/api/capi/lobby/findlobbywithpingdata), [FindOrCreateLobbyWithPingData()](/api/capi/lobby/findorcreatelobbywithpingdata)** and\xa0**[JoinLobbyWithPingData()](/api/capi/lobby/joinlobbywithpingdata)** are enhanced versions of the regular calls, with the obvious addition of ping data that the server will use to select the best region when launching a Room or Relay Server. Note that the library will automatically provide the ping data for those calls (there are no additional parameters)\\r\\n    - **[New!] [SysSendSignal()](/api/capi/lobby/syssendsignal)** allows cloud code scripts to send signals to members of a lobby.\\r\\n    - **[New!] [SysDisbandLobby()](/api/capi/lobby/sysdisbandlobby)** allows cloud code scripts to disband a lobby.\\r\\n- **Tournament Service**\\r\\n    - **[New!] [PostTournamentScoreOnBehalfOf()](/api/capi/tournament/posttournamentscoreonbehalfof)**\xa0for posting scores to a leaderboard on behalf of another player.\xa0Cloud code only.\\r\\n\\r\\n_Note that we have also made a small change to [GetGlobalLeaderboardViewByVersion()](/api/capi/leaderboard/getgloballeaderboardviewbyversion) and [GetGlobalLeaderboardPageByVersion()](/api/capi/leaderboard/getgloballeaderboardviewbyversion) to allow you to once again pass in -1 as the version id. That_ _behaviour_ _had regressed in 4.0. Apologies for the inconvenience!_\\r\\n\\r\\n* * *\\r\\n\\r\\n# Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All libraries have been updated for the 4.1 release! Go get \'em!\\r\\n    - The Unreal Library now includes beta-level support for our Relay Communications protocol!\\r\\n    - **Warning - there is a known issue with Unity 2019 on IOS devices that affects brainCloud (and really any app making web requests).** [More info here!](/blog/2019/06/17/warning-unity-2019-x-ios-issues)\\r\\n- Documentation updates\\r\\n    - New Roadmap Site - check it out at\xa0[https://getbraincloud.com/roadmap](https://getbraincloud.com/roadmap)\\r\\n    - Significant updates to the S2S sections of the API Reference\xa0\\r\\n    - Docs updated with all 4.1 APIs\\r\\n- Important Fixes\\r\\n    - BCLD-4714 Mismatch of Service and Operation on API Explorer after quick authenticate\\r\\n    - BCLD-4833 Importing an invalid script zip file and choosing \\"Full Sync\\" deletes all existing scripts\\r\\n    - BCLD-4832 Facebook transactions - some transactions are being displayed as \\"null\\"\\r\\n    - BCLD-4812 Need ability to preserve My Servers and Lobby configurations on Deploy and Import\\r\\n    - BCLD-3193 SendEvent operations gives a positive response without entering profileID\\r\\n    - BCLD-4751 Descriptive text on \\"Edit Lobby Type\\" popup is out-of-date\\r\\n    - BCLD-4737 Can\'t delete a group after using \\"Delete Users\\"\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2019/05/23/release-4-0","metadata":{"permalink":"/braincloud-apiref/release/2019/05/23/release-4-0","source":"@site/release/2019-05-23-release-4-0/index.md","title":"Release 4.0 is live!","description":"RTT Official Launch!","date":"2019-05-23T00:00:00.000Z","formattedDate":"May 23, 2019","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":10.3,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 4.0 is live!","date":"2019-05-23","tags":["release-history"]},"prevItem":{"title":"Release 4.1","permalink":"/braincloud-apiref/release/2019/06/25/release-4-1"},"nextItem":{"title":"Release 3.11","permalink":"/braincloud-apiref/release/2019/02/12/release-3-11"}},"content":"## RTT Official Launch!\\r\\n\\r\\nWith 4.0, we\xa0_officially_ take the\xa0_beta_ label off of RTT, and release it to the world!\\r\\n\\r\\nAs you know, RTT adds a bi-directional channel for\xa0**real-time communications** to the brainCloud platform, greatly expanding the types of experiences that can be delivered without additional tech.\\r\\n\\r\\n![](images/rtt_architecture.png)\\r\\n\\r\\nThe list of great new features that RTT has already enabled includes:\\r\\n\\r\\n- **Real-time Events**\\r\\n- **Online Chat**\\r\\n- **Real-time Messaging**\\r\\n- **Online Matchmaking**\\r\\n- **Lobbies**\\r\\n\\r\\nFor 4.0 we are pleased to add:\\r\\n\\r\\n- **Async Matches**\\r\\n    - we\'ve RTT-enabled Async Matches. So now you can use the Async API in real-time! (Don\'t worry, you can still use it offline if you would like).\\r\\n    - Oh, and while we were at it, we\'ve made async matches automatically delete themselves after 90 days. So your apps no longer have to do the cleanup manually if they don\'t want to.\\r\\n- **Integrated Hosting**\\r\\n    - we have integrated our new Hosting features with our RTT Lobby service\\r\\n\\r\\nPlus we have officially launched our RTT-enabled\xa0_**Plus**_\xa0subscription plans that make these great features available at all usage levels.\\r\\n\\r\\n## Hosting (beta)\\r\\n\\r\\nDid we mention hosting?\\r\\n\\r\\nIn brainCloud 3.8, we introduced support for custom\xa0**Room Servers**\xa0(i.e. game or experience servers) that integrate with our Lobby Service for matching up users.\\r\\n\\r\\nThe cool thing is that you have full freedom to custom code your Room Server yourself, in any technology. The not-as-cool thing was that you had to host (or arrange for hosting) of the servers yourself, plus you also had to code up a Room Server Manager, for us to integrate with (it was responsible for spinning up your servers and managing them). Suffice to say, that\'s a bit more complicated than most people want.\\r\\n\\r\\nSo for 4.0 we\'re pleased to announce that we can host your custom\xa0**Room Servers** for you - all managed by our built-in\xa0_Room Server Manager_. It\'s truly as simple as giving us the name of the Docker image to use for your service. We handle the rest, spinning up servers and containers as needed - and charging you for the server cycles used.\\r\\n\\r\\n## Relay Servers (beta)\\r\\n\\r\\nEven simpler than hosting a custom-built Room Server, is hosting our new built-in\xa0**Relay Servers**!\\r\\n\\r\\nWe have used our new RTT + Hosting infrastructure to add built-in\xa0**Relay Server** support to brainCloud.\\r\\n\\r\\nNow building a real-time or near-real-time multiplayer experience on brainCloud is as simple as:\\r\\n\\r\\n- Configure the relay servers on the new\xa0**Design | Cloud Code | My Servers** page\\r\\n- Connect the relay server to your lobby via the\xa0**Design | Multiplayer | Lobbies** page\\r\\n- Utilize our new\xa0**Relay Communications APIs** in your\xa0**Unity** apps! \xa0(note - Unreal and other libraries will be supported soon!)\xa0\\r\\n\\r\\n## New Billing Plans\\r\\n\\r\\nWith all this new infrastructure, there has to be\xa0_some_ way to pay for them! Sorry! :)\\r\\n\\r\\nBut it\'s not all bad news. Not only have we launched new\xa0**_Plus_** plans that add support for RTT and Hosting, but we are also introducing new\xa0_lower-cost_ **_Lite_** plans! Plus we have significantly\xa0_lowered the API usage costs (as you scale up) across all plans!_\\r\\n\\r\\nAlso note that we have added a new\xa0_Development Plus_plan, which is a $5 / month plan that gives your apps in development access to Hosting features (i.e. hosted Room Servers and Relay Servers).\\r\\n\\r\\nFor full details on our updated billing plans, see our\xa0[billing announcement](/blog/2019/05/18/braincloud-4-billing-plans).\\r\\n\\r\\n## And a bunch more!\\r\\n\\r\\nAnd\xa0_that\'s_ not even all of it. brainCloud 4 also brings:\\r\\n\\r\\n- **[New!] brainCloud Bombers RTT**\\r\\n    - Our new example game fully demonstrates RTT and Relay Servers\\r\\n    - Play it on Steam!\\r\\n- **[New!] Forums!**\\r\\n    - brainCloud now has forums for our development community. Check them out\xa0[here](https://forums.getbraincloud.com/)!\\r\\n- **[Updated!] Tic-Tac-Toe example**\\r\\n    - Now supports the new RTT-enabled Async Match API\\r\\n- **DataStream Enhancements**\\r\\n    - Our DataStream service now pushes more events, including:\\r\\n        - Tournament events\\r\\n        - Group events\\r\\n        - Chat events\\r\\n        - Lobby Events\\r\\n- **Updated Facebook Integration**\\r\\n    - We now support Graph API 2.9\\r\\n\\r\\nAnd be sure to check the API Changes below for a smattering of new APIs. \xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n# Portal Changes\\r\\n\\r\\nWe\'ve made the following updates to the portal:\\r\\n\\r\\n## Team\\r\\n\\r\\n- **Home | Start**\\r\\n    - We\'ve added a link to the new\xa0[brainCloud Forums!](http://forums.getbraincloud.com/)\\r\\n- **Manage | Apps**\\r\\n    - **Go Live!**\xa0reworked to support the new V4 billing plans\\r\\n    - New **Change Plan**\xa0action menu item allows you to dynamically swap the plan for your app at any time\\r\\n    - To terminate service for your app, just choose\xa0**Delete** from the action menu. The system will now automatically expire your subscription. You will be invoiced at the end of the month, on a pro-rated basis, for the amount of service your app used.\\r\\n    - We have also added a new\xa0**Plan** column to the display to make it easier to tell exactly which plan your app is using\\r\\n\\r\\n## Design\\r\\n\\r\\n- **Core App Info | Advanced**\\r\\n    - **Restore Checkpoints -** brainCloud creates a checkpoint each time you deploy to an app and/or import to it. This new feature allows you to easily restore an app\'s meta-data to a recent checkpoint.\\r\\n- **Authentication | Email Authentication**\\r\\n    - brainCloud can now send confirmations to users after they have successfully changed their passwords. Configure the emails here. \xa0\\r\\n- **Cloud Code | My Servers**\\r\\n    - This is the screen formerly known as \\"S2S Config\\"\\r\\n    - The screen has been expanded to support the configuration of multiple server types:\\r\\n        - **Custom Servers** - these are the old\xa0**S2S Configs**\\\\-style servers\\r\\n        - **Relay Servers** - deploy your own set of brainCloud Relay Servers\\r\\n        - **Room Servers** - configure brainCloud to host your custom Room Server images\\r\\n        - **Room Server Managers** - for integrating with a custom-developed, externally-hosted Room Server Manager\\r\\n- **Multiplayer | Lobbies**\\r\\n    - Room Server selection updated to use the new\xa0**My Servers** configurations (instead of referring to servers from Web Services, which 3.X did)\xa0\\r\\n\\r\\n## Monitoring\\r\\n\\r\\n- **User Monitoring | User Summary**\\r\\n    - You can now trigger the sending of a password reset email to Universal Identity users (if they have a contact email stored against their profile). Click the mail button to send.\\r\\n- **User Monitoring | Recent Users**\\r\\n    - The New column has been replaced by a new \\"Logins\\" column - which shows the number of times that user had logged in. Much more informative!\\r\\n\\r\\n## Reports\\r\\n\\r\\n- **Reporting | Analytics**\\r\\n    - We have added a new section that reports the # of Dormant Users in your app. Dormant Users are defined as users who have not logged into your app in 180 days.\\r\\n- **Reporting | API Usage**\\r\\n    - We have added new\xa0**RTT**and\xa0**Hosting** usage statatistics\\r\\n\\r\\n## General\\r\\n\\r\\n- **DOCS top menu**\\r\\n    - We\'ve added a\xa0[Forums](http://forums.getbraincloud.com/) link to the DOCS menu. Hmm, maybe we should rename the menu to HELP?\\r\\n\\r\\n* * *\\r\\n\\r\\n# API Changes\\r\\n\\r\\n_Important:\xa0**The 4.0 libraries (especially Unity) contain changes that will be breaking for some apps.** See this\xa0[blog post](https://medium.com/@braincloudbaas/braincloud-v4-client-changes-7a3ff59ef44f?source=friends_link&sk=0f5d799a422c1f051b0b511dc911ee89) for migration instructions. As always, the older libs continue to work for existing apps. We recommend all devs upgrade at their earliest convenience._ \\r\\n\\r\\nThe following changes/additions have affected the\xa0brainCloud\xa0API:\\r\\n\\r\\n- **Authentication**\\r\\n    - New\xa0[ResetUniversalIdPassword()](/api/capi/authentication/resetuniversalidpasswordwithexpiry) and\xa0[ResetUniversalIdPasswordAdvanced()](/api/capi/authentication/resetuniversalidpasswordadvancedWithExpiry) calls allow users to reset the passwords for their Universal IDs (via an email sent to them). Note that the\xa0[contactEmail](/api/capi/playerstate/updatecontactemail) of the user must be set for this to work.\\r\\n- **Cloud Code Bridge**\\r\\n    - Added new\xa0[GetSessionCacheObject()](/api/cc/bridge/getsessioncacheobject) and\xa0[SetSessionCacheObject()](/api/cc/bridge/setsessioncacheobject) methods for saving custom objects in the user session. This is quite helpful if you want to cache frequently accessed data for use by multiple cloud code scripts.\\r\\n- **Global Statistics**\\r\\n    - Support for new MIN and MAX operations. Very useful for keeping track of the personal high scores of a player. For details, see the updated\xa0[Statistics Grammar](/api/appendix/statisticsgrammar) page.\\r\\n- **Lobby**\\r\\n    - New\xa0[CancelFindRequest()](/api/capi/lobby/cancelfindrequest)\xa0cancels an asynchronous FindLobby request.\\r\\n    - New\xa0[JoinLobby()](/api/capi/lobby/joinlobby) call allows a user to skip matchmaking and immediately join the specified lobby instance (potentially with party members).\\r\\n- **Player Statistics**\\r\\n    - Support for new MIN and MAX operations.\xa0For details, see the updated\xa0[Statistics Grammar](/api/appendix/statisticsgrammar) page.\\r\\n- **RTTService**\\r\\n    - Migrated the RTT Initialization methods ([EnableRTT()](/api/capi/rtt/enablertt),\xa0[RegisterRTTChatCallback()](/api/capi/rtt/registerrttchatcallback), etc.) to the RTTService for better API coherency\\r\\n\\r\\nWe have also deprecated the following methods:\\r\\n\\r\\n- **Wrapper**\\r\\n    - Removed the deprecated\xa0_singleton_mode\\r\\n    - Removed EnableRTT(), RegisterRTTChatCallback(), etc. - and moved them to the RTT Service\\r\\n- **Client**\\r\\n    - Removed EnableRTT(), RegisterRTTChatCallback(), etc. - and moved them to the RTT Service\\r\\n\\r\\nFinally, a few miscellaneous changes have been made:\\r\\n\\r\\n- We are now wrapping all 3rd party libraries in a brainCloud namespace in the Unity / C# libraries\\r\\n- We have renamed the Settings plugin in the Unity library\\r\\n\\r\\nFor more details and migration steps, see the\xa0[V4 Client Changes](https://medium.com/@braincloudbaas/braincloud-v4-client-changes-7a3ff59ef44f?source=friends_link&sk=0f5d799a422c1f051b0b511dc911ee89) blog post.\\r\\n\\r\\n* * *\\r\\n\\r\\n# Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All libraries have been updated to include all 4.0 APIs, with the exception of the Relay Service\\r\\n    - The new Relay Service APIs are currently available in the Unity / C# libraries only. Unreal + other libraries will follow soon.\\r\\n- Documentation updates\\r\\n    - TBC\\r\\n- Important Fixes\\r\\n    - BCLD-4679 - Duplicate leaderboard config issues (leaderboard Duplicate, new \\"MOCK\\" division set instance creation) if Enrol or Announcement minutes and called when rotation minutes remaining < (Enrol + Announce + Buffer) minutes\\r\\n    - BCLD-4651 - Permissions issue with groups - ReadGroup() vs. ReadGroupData() with other=1\\r\\n    - BCLD-4415 - [Documentation] - More documentation support for the parameter \'isOpenGroup\' for the \'AutoJoin\' operation\\r\\n    - BCLD-4650 - Issue in the UpdateGroupACL cloud code proxy\\r\\n    - BCLD-4645 - UK Area code is missing from Authy\\r\\n    - BCLD-4494 - Add documentation for \'UpdateEntityIndexedId\' call in both API and S2S Explorer in the API Reference Docs.\\r\\n    - BCLD-4524 - Add Server Session support for Leaderboard Service operations that are currently only supported for Player Session\\r\\n    - BCLD-4337 - Sending null match state on create Async Match should not clobber the summary!\\r\\n    - BCLD-3192 - \'GetSharedEntityForProfileId\' returns positive log response without entering the profileID\\r\\n    - BCLD-4307 - Improve speed of ChildEntity - UpdateEntity using updateFields instead of update\\r\\n    - BCLD-4293 - Operations are not alphabetized on the APIHooks screen - should be\\r\\n    - BCLD-3250 - PostScoreToLeaderboard has wrong name in Javascript example\\r\\n    - BCLD-3232 - Client API - \'ReadServerTime\' Operation returns a definite response, despite entering incorrect app ID\\r\\n    - BCLD-4483 - DataStream Push Notifications - new safe mode to reduce excessive DataStream-related usage charges\\r\\n    - BCLD-4499 - PostTournamentScoreWithResults is missing in the Unreal Client\\r\\n    - BCLD-4503 - resetCurrency is missing from the virtual currency service\\r\\n    - BCLD-4448 - Defect being seen in async match profile urls\\r\\n    - BCLD-4498 - If a company is in a Suspended state, they are unable to edit their billing information to get out of that state\u2026\\r\\n    - BCLD-4488 - User can create Leaderboards with spaces and special characters using the \'CreateLeaderboard\' API call\\r\\n    - BCLD-4449 - User can create Leaderboard with spaces and special characters using the \'PostScoreToDynamicLeaderboard\' API call.\\r\\n    - BCLD-4454 - StartTime matches Registration time for Monthly Tournament in \'GetTournamentStatus\' call\\r\\n    - BCLD-4228 - API: Updated player names and picture urls not reflected in turn-by-turn match summary\\r\\n    - BCLD-4358 - Inconsistency between comms initialize parameter order and wrapper order for java android and desktop\\r\\n    - BCLD-3200 - JSON error when saving a quest with an already existing name\\r\\n    - BCLD-4268 - Attaching an email identity overwrites an exisiting contact email\\r\\n    - BCLD-3470 - Monitoring -> Global Entities -> Bulk options -> Export should be disabled when there are no global entites for the app\\r\\n    - BCLD-4294 - Missing data in the new AppStore VerifyPurchase() call\u2026\\r\\n    - BCLD-2788 - Portal: deleting an image in [Achievements] without saving the achievement causes a missing image\\r\\n    - BCLD-3968 - Errors handing $and in Where clauses\\r\\n    - BCLD-3969 - getRandomEntitiesMatching sometimes returns 0 items for max 1, even when items match\\r\\n    - BCLD-3977 - Log processor is incorrectly attributing mongo log collection write failures (too to large log sizes) to a particular app\\r\\n    - BCLD-3927 - Clicking on resetpassword email link twice gets user to a valid looking reset password screen\\r\\n    - BCLD-4111 - Design Portal should not be able to configure invalid Steam product info\\r\\n    - BCLD-4105 - Add the missing readUserStatsSubset() cloud code method\\r\\n    - BCLD-4108 - Global Entities: allow filtering and sorting on `entityId`, `version`, and `expiresAt`\\r\\n    - BCLD-3989 - File Storage being reported on the API Usage page appears to always show 0.0\\r\\n    - BCLD-4118 - When we do a SwitchToChildProfile(), we should add a login log entry for the child profile\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2019/02/12/release-3-11","metadata":{"permalink":"/braincloud-apiref/release/2019/02/12/release-3-11","source":"@site/release/2019-02-12-release-3-11/index.md","title":"Release 3.11","description":"Release 3.11 provides some key feature requests with some under-the-hood improvements that will be delivered upon in Release 4.0 (coming soon!).","date":"2019-02-12T00:00:00.000Z","formattedDate":"February 12, 2019","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":6.375,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 3.11","date":"2019-02-12","tags":["release-history"]},"prevItem":{"title":"Release 4.0 is live!","permalink":"/braincloud-apiref/release/2019/05/23/release-4-0"},"nextItem":{"title":"Release 3.10","permalink":"/braincloud-apiref/release/2018/12/05/release-3-10"}},"content":"Release 3.11 provides some key feature requests with some under-the-hood improvements that will be delivered upon in Release 4.0 (coming soon!).\\r\\n\\r\\n# Release Highlights\\r\\n\\r\\n## SendGrid Dynamic Templates\\r\\n\\r\\nWe have updated our Mail APIs and integration code to work with Sendgrid\'s new Dynamic Template format, which includes support for\xa0[Handlebars](https://sendgrid.com/docs/ui/sending-email/using-handlebars/) syntax.\\r\\n\\r\\nThis means that you can:\\r\\n\\r\\n- Use Dynamic Templates for brainCloud\'s Email Authentication and Tournament Notification\xa0\\r\\n- Use Dynamic Templates with brainCloud\'s\xa0`SendAdvancedEmail*()`\xa0APIs\\r\\n- Take advantage of the Handlebars syntax (with substitution, conditions and iterations) in your templates\\r\\n- Even send\xa0_attachments_!\\r\\n\\r\\nAnd of course, Sendgrid\'s legacy templates still work.\\r\\n\\r\\n_Please note - the substitution parameter format of SendGrid\'s API for new dynamic templates is different. So if you are using the SendAdvancedEmail\\\\*() calls and are changing from legacy \u2192 dynamic templates, you\'ll need to modify the\xa0`serviceParams` JSON that is provided with the call._\\r\\n\\r\\n## UniversalId Wildcard Searching\\r\\n\\r\\nIf your app supports looking up other users (for friends, challenges, etc), we highly recommend that you identify and lookup users by UniversalId instead of by user name.\\r\\n\\r\\nUniversalIds are better than user name because:\\r\\n\\r\\n- They guarantee uniqueness\\r\\n- They are case insensitive\\r\\n- Searching is 3 - 5 times faster! (because they are unique, case insensitive, and we anchor all searches at the beginning)\\r\\n\\r\\nBut... until now we really weren\'t providing you with enough search flexibility. Which is why we have added some new methods:\\r\\n\\r\\n- `FindUserByUniversalIdStartingWith()`\xa0- use for wildcard-like searches\\r\\n- `FindUserByExactUniversalId()`\xa0- use for exact searches\\r\\n\\r\\nAnd remember, we do provide a handy method that allows your app to use UniversalId\'s (to identify/lookup users) without using them as authentication methods - check out\xa0`AttachNonLoginUniversalId()`.\\r\\n\\r\\nA few notes:\\r\\n\\r\\n- We have deprecated the old\xa0`FindUserByUniversalId()`\xa0- its spec was pretty misleading (looked like an exact search - but performed like a wildcard search - and an unoptimized one at that!). Note - it will still work if your app was already using it.\\r\\n- For those of you stuck with already-implemented\xa0_user name searching_, we\'ve added some improvements as well:\\r\\n    - `FindUsersBySubstrName()`\xa0is now 10-20% faster\xa0\\r\\n    - `FindUsersByNameStartingWith()` (new!) is ~50% faster than\xa0`FindUsersBySubstrName()`\xa0- so switch to this one if you can!\\r\\n\\r\\n## Improved Cloud Code Debugging\\r\\n\\r\\nGood news for you cloud code developers - we\'ve added some new smarts to the API Explorer and Cloud Code Editor that makes it a lot easier to trace and debug your scripts!\\r\\n\\r\\nThe two big additions are:\\r\\n\\r\\n- _Activity Window Logs_\xa0- log entries that your script creates are now visible in the activity window on the right-hand-side of the Cloud Code Editor and API Explorers\\r\\n- _Debug Log-level_ \\\\- we have also added a new debug log level that only prints to the Activity Window log. This is perfect for analyzing and debugging your scripts, without unnecessarily clogging up your logs otherwise.\\r\\n- _New JSON context methods_\\\\- we have also expanded to provided Logging APIs to provide new methods that allow you to log JSON contexts directly (without stringifying them first)\\r\\n- _Bridge access_\\\\- finally, we have added all these new logging methods directly to the\xa0`bridge`for maximum convenience!\\r\\n\\r\\nCheck out the GIF below to get a feeling for how the new script logging works.\\r\\n\\r\\n![](images/debuglogs_custom.gif)\\r\\n\\r\\n## Miscellaneous\\r\\n\\r\\nPlus a few more shiny features, including:\\r\\n\\r\\n- Lobby Event Optimizations - a bunch of the data in the Lobby RTT events was unnecessary - we\'ve trimmed it down to be more efficient\\r\\n- Faster user name lookups in the Design Portal\\r\\n- View WebHooks calls in the Server Logs\\r\\n- Filter the Server Logs\\r\\n- Export a user\'s data from the User Summary page\\r\\n- and more!\\r\\n\\r\\n* * *\\r\\n\\r\\n# Portal Changes\\r\\n\\r\\n## Design\\r\\n\\r\\n- **Cloud Code | API Explorer**\\r\\n    - Activity pane now shows log messages\\r\\n- **Cloud Code | Scripts | Script Editor**\\r\\n    - Activity pane now shows log messages\\r\\n- **Segmentation | Segments**\\r\\n    - Page should load faster now\\r\\n\\r\\n## Monitoring\\r\\n\\r\\n- **Global Monitoring | Server Logs**\\r\\n    - Incoming WebHooks calls are now captured here\\r\\n    - Added ability to Filter the logs shown by\xa0_type_,\xa0_source_,\xa0_date_, etc.\\r\\n- **User Monitoring | User Summary**\\r\\n    - **Select User**\\\\-\xa0_faster searching by user name!_\xa0\u2190\xa0**Popular Customer Request!**\\r\\n    - (beta!) **Debug data export** -\xa0new ability to export a user\'s data. Very useful for debugging!\\r\\n\\r\\n* * *\\r\\n\\r\\n# API Changes\\r\\n\\r\\n## Client API\\r\\n\\r\\nThe following changes/additions have affected the client API:\\r\\n\\r\\n- **Client**\\r\\n    - `isRTTEnabled()`\xa0convenience method added to allow apps to check their RTT state\\r\\n- **Entity**\\r\\n    - `GetSharedEntityListForProfileId()`and\xa0`GetSharedEntitiesForProfileId()`now return\xa0`entityListCount`\xa0for convenience\xa0\\r\\n- **Friend**\\r\\n    - New Universal ID searches:\xa0\\r\\n        - `FindUserByExactUniversalId()`\\r\\n        - `FindUsersByUniversalIdStartingWith()`\\r\\n    - New name search methods\\r\\n        - `FindUsersByNameStartingWith()`\\r\\n- **Group**\\r\\n    - `ReadGroupMembers()`\xa0- now returns the profile picture URL (if present) for each member\\r\\n- **Identity**\\r\\n    - `SwitchToChildProfile()`\xa0and `SwitchToSingletonChildProfile()` cloud code methods have been simplified to align with the client versions of these calls. To clarify, the new methods no longer require you to pass in values for platform, language, etc - these values are all inherited from the current session.\\r\\n\\r\\n## Cloud Code\\r\\n\\r\\n- **Bridge**\\r\\n    - Added logging calls to the bridge for convenience -\xa0`LogInfo()`,\xa0`LogInfoJson()`,\xa0`LogWarning()`,\xa0`LogWarningJson()`,\xa0`LogError()`and\xa0`LogErrorJson()`\\r\\n    - Also added new debug log calls -\xa0`LogDebug()`and\xa0`LogDebugJson()`.\xa0_Note these calls are not available on the logging service itself, because they do write to the persistent logs._ \\r\\n    - Added new context calls -\xa0`getScriptName(),`\xa0`getAppName()`, and\xa0`getEnvironmentName()`.\\r\\n- **HttpClient**\\r\\n    - Added new\xa0`PostJsonOffboard()`\xa0call - for efficient posting of HTTP requests in scenarios where it isn\'t necessary to wait for the result\\r\\n- **Logging**\\r\\n    - Added new JSON-context calls -\xa0`LogInfoJson()`,\xa0`LogWarningJson()`, and\xa0`LogErrorJson()`\\r\\n\\r\\n## RTT (Beta) Events\\r\\n\\r\\nWe have made some small changes to the Lobby events being returned - essentially just removing some redundant / unnecessary fields.\\r\\n\\r\\nWe largely removed:\\r\\n\\r\\n- Nested and redundant id information (i.e. nested fields like\xa0`id`,\xa0`seq`,\xa0`appId`, etc.)\\r\\n- `lobbyTypeDev`,\xa0`settings`,\xa0`connectData`and occasionally\xa0`members`\xa0fields from events that didn\'t require them\xa0\\r\\n\\r\\n_For full\xa0details on Lobby Event composition, check out the details\xa0[here](/api/capi/lobby)._\\r\\n\\r\\n_Note - although RTT is still in beta, we don\'t take changes like this lightly. Rest assured, we have reached out to our live RTT customers separately to give them a heads up re: these changes._ \\r\\n\\r\\n* * *\\r\\n\\r\\n# Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All client libraries have been updated for this release. Be sure to grab them!\\r\\n    - We have added additional\xa0_killswitch_ code to prevent errant apps from endlessly spamming our servers on authentication failures. As a rule folks, retrying an operation in an endless loop is bad form! Do not do that! :)\xa0\\r\\n- Updated examples\\r\\n    - Unity assets - we have recently updated\xa0[brainCloud Space Shooter](https://assetstore.unity.com/packages/templates/tutorials/braincloud-space-shooter-50279) and\xa0[brainCloud Bombers for Photon](https://assetstore.unity.com/packages/templates/tutorials/braincloud-bombers-for-photon-50657)\xa0on the Unity Asset Store\\r\\n- Documentation updates\\r\\n    - Improvements to content and accuracy of code examples\\r\\n- Important Fixes\\r\\n    - BCLD-4163 - Presence cloud code proxies missing some methods\\r\\n    - BCLD-4989 - File storage being reported on API Usage page as 0.0 or NaN\\r\\n    - BCLD-4139 - Import script issue\\r\\n    - BCLD-4105 - Added missing `readUserStatsSubset()` cloud code method\\r\\n    - BCLD-4112 - Portal not editing / saving Steam IAP products properly in some cases\\r\\n    - BCLD-4160 - lobbyService.switchTeam() can result in an NPE\\r\\n    - BCLD-4159 - Improve speed of Use Monitoring - Select User - Search by Name\\r\\n    - BCLD-4147 - Unable to save rewards in tasks (milestones) embedded in Quests in some circumstances\\r\\n    - BCLD-4148 - Deleting an embedded task (milestone) from a Quest results in an orphaned Milestone\\r\\n    - BCLD-4108 - Global Entities should allow filtering and sorting on `entityId`, `version` and `expiresAt`\\r\\n    - BCLD-4118 - When performing `SwitchToChildProfile()`, a login log entry is now added for the child profile\\r\\n    - BCLD-3969 - `getRandomEntitiiesMatching()` sometimes returns 0 items for max 1, even when items match - fixed.\\r\\n    - BCLD-3267 - `getChannelId()` should confirm that a channel exists before returning the constructed id\\r\\n    - And many, many more!\\r\\n- Plus miscellaneous fixes and performance improvements"},{"id":"/2018/12/05/release-3-10","metadata":{"permalink":"/braincloud-apiref/release/2018/12/05/release-3-10","source":"@site/release/2018-12-05-release-3-10/index.md","title":"Release 3.10","description":"Release 3.10 is a modest release that fulfills a number of customer requests before the holidays. We hope that you find something you like!","date":"2018-12-05T00:00:00.000Z","formattedDate":"December 5, 2018","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":7.73,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 3.10","date":"2018-12-05","tags":["release-history"]},"prevItem":{"title":"Release 3.11","permalink":"/braincloud-apiref/release/2019/02/12/release-3-11"},"nextItem":{"title":"Release 3.9.0","permalink":"/braincloud-apiref/release/2018/10/04/release-3-9-0"}},"content":"Release 3.10 is a modest release that fulfills a number of customer requests before the holidays. We hope that you find something you like!\\r\\n\\r\\n# Release Highlights\\r\\n\\r\\n## Chat Profanity Filter\\r\\n\\r\\nWe have added profanity filter support to our chat service. With it, you can automatically filter profane words (across multiple languages), as well as email and web urls from chat conversations. Offending word segments will be replaced with the character that you specify.\\r\\n\\r\\nYou can configure this via the **Design | Messaging | Chat** page in the [Design Portal](https://portal.braincloudservers.com). Note that you must have signed up for [WebPurify](https://www.webpurify.com/) and configured it via the **Design | Integrations | Manage Integrations** page first.\\r\\n\\r\\n[![](images/2018-12-03_13-06-33-300x275.png)](images/2018-12-03_13-06-33.png)\\r\\n\\r\\n## Email Validation Enhancements\\r\\n\\r\\nWe have added two new features to make incorporating email verification into your apps easier.\\r\\n\\r\\n- **_Validation hooks_** \\\\- brainCloud can now automatically trigger a cloud code script to run when a user clicks on the validation URL included in the verification email. The script to be called is configured with the **Design | Cloud Code | API Hooks** page - just choose the EmailAuth service and assign scripts to `Post`\xa0and/or `PostFail`.\\r\\n- _**Continue button**_ \\\\- we have also added a configurable\xa0**[Continue]** button to the web screen that pops up for email validation. This button is configured to send the user to the web URL of your choice when clicked. Very useful if you want to bring the user to your site login (or back into your app) after validating their email.\\r\\n\\r\\nThe _continue button_ is enabled by configuring a validation hook script (see above) that returns results in the following format when run:\\r\\n\\r\\n{\\r\\n  \\"action\\": \\"continue\\",\\r\\n  \\"label\\": \\"Continue\\",\\r\\n  \\"hover\\": \\"Return to Login\\",\\r\\n  \\"targetUrl\\": \\"http://myapp/login\\"\\r\\n}\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Hand-off API\\r\\n\\r\\nThere are times when it is handy to share a brainCloud login when traversing across multiple software systems (or apps) in real-time. For example, a user logs into _App A_, but to perform some action needs to be passed to a separate user flow in _App B_.\\r\\n\\r\\nAccomplishing this in brainCloud is possible, but challenging. All three potential solutions have drawbacks:\\r\\n\\r\\n1. Passing the user\'s credentials from one system to another <- major security concern\\r\\n2. Asking the user to login again <- usability issue\\r\\n3. Passing the active brainCloud sessionId to the other system <- doesn\'t work due to packetId synchronization\\r\\n\\r\\nSo - we have created a new way to do this, which we call _Handoff_. The idea is pretty simple:\\r\\n\\r\\n1. App A: The user is logged into brainCloud normally, and a session created\\r\\n2. App A: The app calls the new\xa0[CreateHandoffId()](/api/capi/identity/createhandoffid)\xa0method, that creates a temporary `handoffId`and `securityToken`that can be used to remotely log that user in. This _id + token_ is only valid for a short period (~ one hour) and can only be used once.\\r\\n3. App A: The handoffId + securityToken is passed to the other app/system. How that is done is app-specific. It could be as simple as passing it along in a URL. You could even separate the data - send the id in an email with a clickable link, but text the user the token so that they have to manually enter it <- useful for more security intensive use cases\\r\\n4. App B: The app calls the new\xa0[AuthenticateHandoff()](/api/capi/authentication/authenticatehandoff)\xa0API call to log the user into brainCloud\\r\\n\\r\\nVoila!\\r\\n\\r\\n_Pro-tip: Hand-off can be combined with the Email Validation Enhancements above to redirect the user back into your app\'s registration flow!_\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Non-login Universal IDs\\r\\n\\r\\nThe brainCloud profile\xa0`name`property is a handy way for users to identify themselves. It is used throughout brainCloud (and brainCloud apps) for displaying player names in leaderboards, chat, lists of friends, etc.\\r\\n\\r\\nAlthough handy, the\xa0`name`property does have some inherent limitations:\\r\\n\\r\\n1. Names are not unique. Like in the real world, multiple people can have the same name.\\r\\n2. Searches can be slow. Searching through non-unique collections is slower.\\r\\n\\r\\nWe have long-advocated that developers assign Universal Identities to user accounts to easily enforce uniqueness and make them more searchable. To keep users from being able to inadvertently login via these ids, a generated GUID can be used as the password.\\r\\n\\r\\nWe have now taken the next step and implemented direct support for non-login Universal IDs.\\r\\n\\r\\nUsage is simple:\\r\\n\\r\\n- Call [AttachNonLoginUsername( <username\\\\> )](/api/capi/identity/attachnonloginuniversalid) to create a _Universal Identity_ and attach it to the current profile. It will return an error if the username is not unique.\\r\\n- Later you can call [UpdateUniversalIdLogin()](/api/capi/identity/updateuniversalidlogin) to update the username if the user desires\\r\\n- To search for the user via the api, use [GetProfileInfoForCredential( \\"anId\\", \\"Universal\\")](/api/capi/friend/getprofileinfoforcredential)\\r\\n- Finally, in the Design Portal search by Universal ID -- not by Name! --\xa0to find the user.\\r\\n\\r\\n_Pro-tip: brainCloud just uses a string for universal identities. They are pretty free-form (i.e. can have spaces, in front, in back, special characters, etc.) If you want to be more restrictive, be sure to filter them and apply your restrictions before creating them!_\\r\\n\\r\\n\xa0\\r\\n\\r\\n## S2S Library\\r\\n\\r\\nWe have always had a handy https-based S2S (Server-to-Server) API - but up until now we\'ve left the heavy lifting of calling it to your custom server code.\\r\\n\\r\\nEnter our new S2S Client Javascript libraries! You can grab them from our [GitHub](https://github.com/getbraincloud/brainclouds2s-node) repo, or from [npm](https://www.npmjs.com/package/brainclouds2s).\\r\\n\\r\\nThey are fairly minimal - you still need to specify raw `service`\xa0and `operation`, together with a properly constructed `data`\xa0object for the parameters (use the S2S Explorer as your guide to how to format things). We just handle the drudgery of forming the actual requests and sending them to brainCloud servers. And we use the more optimal S2S session-based protocol - so your communications are more efficient and cost you less! It\'s win-win!\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Server Logs\\r\\n\\r\\nFinally, we are working to make brainCloud\'s server-to-server interactions a lot more understandable / debuggable. \xa0As a first step in that, we are now logging all incoming S2S requests to a new log that can be viewed on the **Monitoring | Global Monitoring | Server Logs** page.\\r\\n\\r\\nThis page is currently limited to only a maximum of the last 100 requests. It will be enhanced significantly in upcoming releases.\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n# Portal Changes\\r\\n\\r\\n## Design\\r\\n\\r\\n- **Cloud Code | API Explorer**\\r\\n    - There are new API Calls available in the `Authentication`, `Identity`, and\xa0`HttpClient` services.\\r\\n- **Cloud Code | API Hooks**\\r\\n    - Added the new `EmailAuth`\xa0hook for automatically triggering scripts when a user clicks on the link in the validation\xa0email.\\r\\n- **Messaging | Chat**\\r\\n    - Added new _Profanity Filtering_ config settings. Note that you need to configure the _WebPurify integration_ from the **Integrations | Manage Integrations** screen first.\\r\\n- **Segmentation | Segments**\\r\\n    - Improved the performance of retrieving the list of Segments\\r\\n\\r\\n## Monitoring\\r\\n\\r\\n- **[New!] Global Monitoring | Server Logs**\\r\\n    - New page collects S2S requests and responses for easier debugging of server scenarios\\r\\n    - Note - currently a beta page - will be enhanced soon with pagination features (and later with filtering!)\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n# API Changes\\r\\n\\r\\n## Client API\\r\\n\\r\\nThe following changes/additions have affected the client API:\\r\\n\\r\\n- **Authentication**\\r\\n    - New Handoff Authentication call added:\xa0[AuthenticateHandoff()](/api/capi/authentication/authenticatehandoff)\\r\\n- **Identity**\\r\\n    - New API for creating handoff ids:\xa0[CreateHandoffId()](/api/capi/identity/createhandoffid)\\r\\n    - New [AttachNonLoginUniversalId()](/api/capi/identity/attachnonloginuniversalid) API has been added.\\r\\n- **HttpClient**\\r\\n    - Added a new [PostJsonResponseText()](/api/cc/httpclient/postjsonresponsetext)\xa0method for those weird APIs <cough> _slack_ </cough> that post in JSON but return the result as a string? _I mean really - who does that? :)_\\r\\n    - The existing [PostJsonResponseJson()](/api/cc/httpclient/postjsonresponsejson)\xa0method also more gracefully handles text-only returns - enclosing them in a JSON object with the text in a field called `jsonString`.\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n# Miscellaneous Changes / Fixes\\r\\n\\r\\n- _**Updated Client libraries**_\\r\\n    - The following libraries have been updated with the new 3.10 feature set:\\r\\n        - Unity + C# libraries\\r\\n        - Java libraries\\r\\n        - Javascript libraries\\r\\n        - Objective-C + Swift libraries\\r\\n        - Unreal\\r\\n        - ActionScript (minus RTT features)\\r\\n    - Additional notes\\r\\n        - Javascript\\r\\n            - We have combined our two node.js packages (one for node.js server, one for react) into a single package!\\r\\n            - Our Javascript library now directly supports NPM. Include \\"braincloud-js\\" to grab it!\\r\\n        - C++ (PS4)\\r\\n            - FileUploader in place.\\r\\n        - Objective-C\\r\\n            - Chat and Lobby services updated.\\r\\n        - Unreal\\r\\n            - Unreal wrapper handling smart switching better.\\r\\n    - _We highly recommend that all apps update to the latest libs!_\\r\\n- Miscellaneous changes\\r\\n    - _Improved handling of anonymous device ids_\\r\\n        - Certain scenarios, like profile merges, result in dormant anonymous ids being associated with a user\'s profile.\\r\\n        - brainCloud will now limit the maximum # of device ids per profile, and if there are more, delete then oldest <n\\\\> of them at each login \u2013\xa0eventually returning the user to the proper maximum.\\r\\n        - The default maximum has been set to 10.\\r\\n    - _Page performance_\\r\\n        - Improved the performance of the **Design | Segmentation | Segments** and **Design | Core App Info | Admin** pages.\\r\\n- Documentation updates\\r\\n    - Improvements to content and accuracy of code examples.\\r\\n- Important Fixes\\r\\n    - BCLD-3715 - Fix to SendMessage to allow passing in full jsonContext\\r\\n    - BCLD-3860 - Scripts: Double-slashes in example parameters were not being preserved during export/import\\r\\n    - BCLD-3737 - Chat service NPE when attempting to retrieve group chat listeners for a group\\r\\n    - BCLD-3861 - NPE in lobby service runMatchmaker() API\\r\\n    - And many, many more!\\r\\n- Plus miscellaneous fixes and performance improvements."},{"id":"/2018/10/04/release-3-9-0","metadata":{"permalink":"/braincloud-apiref/release/2018/10/04/release-3-9-0","source":"@site/release/2018-10-04-release-3-9-0/index.md","title":"Release 3.9.0","description":"brainCloud 3.9 is here! Check out the new hotness!","date":"2018-10-04T00:00:00.000Z","formattedDate":"October 4, 2018","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":10.215,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 3.9.0","date":"2018-10-04","tags":["release-history"]},"prevItem":{"title":"Release 3.10","permalink":"/braincloud-apiref/release/2018/12/05/release-3-10"},"nextItem":{"title":"Release 3.8.0 - RTT is here!","permalink":"/braincloud-apiref/release/2018/07/11/release-3-8"}},"content":"_brainCloud 3.9 is here! Check out the new hotness!_\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Online Presence\\r\\n\\r\\nOnline Presence allows an app\'s users to know which of their friends are currently online and available for collaboration.\\r\\n\\r\\nPresence builds upon brainCloud RTT to deliver a rich solution which communicates:\\r\\n\\r\\n- _online status_ - which users (friends, group members) are currently online\\r\\n- _activity_ - customizable, rich activity data\\r\\n\\r\\nIn addition, presence supports:\\r\\n\\r\\n- _real-time_ notification of status changes\\r\\n- ability of subjects to\xa0_appear invisible (i.e. offline)_\\r\\n\\r\\nFor more information, see the [Presence Service API Reference](/api/capi/presence).\\r\\n\\r\\n_Note - Online Presence requires brainCloud RTT._\\r\\n\\r\\n### Tournament Divisions\\r\\n\\r\\nbrainCloud already allows games to increase player engagement through global tournaments, which reward prizes (currency, xp, etc.) to users for their play in recurring and/or adhoc tournaments.\\r\\n\\r\\nUnfortunately, the lure of tournaments diminish as the number of participants grow and the player\'s chance of winning decreases. It is tough to motivate players when they need to rank at the top of a leaderboard with thousands of players.\\r\\n\\r\\nThat is where _Divisions_ come in. Divisions horizontally divide your players into separate leaderboards (which we call division instances) of a set size - say 100 players each.\\r\\n\\r\\nThe advantages are significant:\\r\\n\\r\\n- _Greater engagement_ - players are playing against a smaller set of opponents, and are more motivated because they have a greater chance of winning\\r\\n- _Greater control_ - there is a greater ability to tune the risk / reward structure of the contest, since the numbers are constrained\\r\\n- _Greater liquidity_ - divisions hide the actual size of your tournament pool, which can be advantageous when your app is still growing\\r\\n\\r\\nFor more information, see the new _Division_ APIs in the [Tournament Service API Reference](/api/capi/tournament).\\r\\n\\r\\n_Note - Divisions are available to Business Plan customers and above._\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Refactored Currency and In-App Purchase APIs\\r\\n\\r\\nWe have completely refactored the Currency, Purchase, and Product / Pricing / Promotions APIs that were previously jammed together in our old Product Service.\\r\\n\\r\\nWe\'ve created two shiny new services to contain the new goodness:\\r\\n\\r\\n- **AppStore Service** \\\\- houses the new purchase and Product / Pricing / Promotions APIs. The Purchase APIs have been completely re-designed for the new service.\\r\\n- **VirtualCurrency Service** \\\\- handles all the currency APIs (other than the move, the APIs are barely changed).\\r\\n\\r\\n_Have no worries - we will ensure that the legacy **Product Service** continues to work until **July 1, 2020**, but we strongly suggest that new apps move to the new APIs now, and older apps migrate when they can._\\r\\n\\r\\nFor more information, see the new [AppStore Service](/api/capi) and [VirtualCurrency Service](/api/capi/virtualcurrency) API References.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Customer Requests\\r\\n\\r\\nWe have also added a handful of features to satisfy key customer requests. Hopefully you\'ll find yours here!\\r\\n\\r\\n- _**Global Pre-hooks**_\\r\\n    - You can now set up a single pre-hook that gets invoked before any API call - which is especially useful if you want to significantly restrict the calls that can be made from the client, without having to individually configure the hook for each service + operation combination.\\r\\n- _**Global Properties**_\\r\\n    - **New JSON support** \\\\- you can now directly add/edit JSON in your properties!\\r\\n    - **Deployment Enhancements** \\\\- you can now preserve the values of select Global Properties though deploys. This is especially useful if you need to accomodate alternate property values in development vs. production, for example. _(Admittedly, using a JSON structure for the value, indexed by AppId is a decent solution for that as well!)_ \\r\\n- **_Facebook_**\\r\\n    - We\'ve updated our Facebook libraries to support **Graph API v 2.8**\\r\\n- **_Improved Script Engine_**\\r\\n    - Turns out our cloud code implementation had an issue where objects being passed and returned from scripts were being set to _read-only_ - even though they were copies. This resulted in issues invoking certain methods on the objects, and of course not being able to modify them without performing another deep-copy within your script. This has been resolved. This result is fully back-wards compatible.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Miscellaneous\\r\\n\\r\\nLast but not least, we have a few more improvements under-the-hood:\\r\\n\\r\\n- Improved Cloud Code performance\\r\\n    - we\'ve improved the caching of cloud code scripts for even better performance!\\r\\n- Improved Leaderboard caching\\r\\n    - as part of our Tournament Division work, we improved the caching of leaderboard configuration data. The improvement will be most noticeable for apps with lots of leaderboards.\\r\\n- Improved Design Portal performance\\r\\n    - We\'ve been reworking our core Design Portal tech. You should notice improved zippiness all around when using the portal!\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe have made the following portal changes:\\r\\n\\r\\n### Design\\r\\n\\r\\n- **Core App Info | Application IDs**\\r\\n    - Added a new _Bundle Id_ field in Apple platform settings, which if filled in, is used to perform additional receipt validation in the new **AppStore Service.**\\r\\n- **Core App Info | Advanced Settings**\\r\\n    - A new compatibility flag, _[x] Enable legacy Purchase Collection support,_ has been\xa0added. It defaults to\xa0_enabled_ for both new and existing apps.\\r\\n        - Apps with existing purchases should keep this enabled - it will allow the new purchase APIs and old purchase APIs to coexist nicely\\r\\n        - New apps can feel free to disable this and use the new APIs only.\\r\\n- **Cloud Code | API Hooks**\\r\\n    - We have added new _Dispatcher_ and _S2SDispatcher_ support for pre-hooks.\\r\\n    - Configuring a pre-hook against those services will cause the pre-hook script to run before any _client_ or _S2S_ call respectively.\\r\\n- **Custom Config | Global Properties**\\r\\n    - When creating / editing a property, you can now configure the editor for _String_ or _JSON_ editing.\xa0Note that the underlying value is still stored as a _String_.\\r\\n    - You can also choose whether the property value should be protected from being overwritten during deploys. This is useful for values that are set uniquely per brainCloud app instance (i.e. the profileId of a system user, a to tell the client that this is a prod vs. debug instance, that sort of thing).\\r\\n    - Note that during deployment, the deploy process obeys the configuration specified in the _source_ app, not the\xa0_target_ app.\\r\\n- **Leaderboards | Leaderboard Configs**\\r\\n    - You can now flag tournament-enabled leaderboards to act as _templates_ for Divisions. Template tournament/leaderboards do not appear in the regular leaderboard lists, and cannot be joined.\\r\\n    - You can also now quickly clone leaderboards by choosing the\xa0_Duplicate_ option from the action menu.\\r\\n- **Loaderboards | Tournament Templates**\\r\\n    - Quickly clone tournament templates by choosing the _Duplicate_ option from the action menu.\\r\\n- **Leaderboards | Division Sets**\\r\\n    - Jump into our new _Tournament Divisions_ feature by defining _Division Sets_!\\r\\n    - _Division Sets_ allow you to break tournaments into random sub-tournaments for greater engagement.\\r\\n    - To configure a division:\\r\\n        1. First create a tournament-enabled Leaderboard to act as a template (setting the template flag to enabled)\\r\\n        2. Then create the division set, selecting the Leaderboard template and configuring the maximum # of players per division instance\\r\\n        3. Use the new [Tournament Division APIs](/api/capi/tournament) to join the tournament!\\r\\n- **Marketplace | Products**\\r\\n    - We have made a bunch of under-the-hood changes to allow for easier integration of new AppStores in the future\\r\\n    - The screen should work largely as before - let us know if you experience any issues!\\r\\n- **Messaging | Presence**\\r\\n    - New screen for configuring the new _**Presence**_ service\\r\\n    - Once enabled, any RTT connection established by a client will contain basic presence info (i.e. online/offline) as well\\r\\n    - From there, rich activity and real-time updates can be enabled as well\\r\\n\\r\\n### Monitoring\\r\\n\\r\\n- **Global Monitoring | Leaderboards**\\r\\n    - We have added a \\"Choose a division...\\" option to the Leaderboard selection menu (for apps that are using Divisions). Use it to view the leaderboard results for a Division instance.\\r\\n    - Rationale - division instances are hidden from the Leaderboard lists (because there may be hundreds of them).\\r\\n    - Pro-tip - You can use the API explorer to find the division instances related to a particular player\\r\\n        - Go to **Monitoring | User Monitoring**, and find the player in question\\r\\n        - If the _Live Lock_ banner is showing, click the lock to unlock it\\r\\n        - Click on\xa0**[Login as User]** to login as this user in the API explorer\\r\\n        - Choose the _Tournament service_, and the _GetMyDivisions() operation,_ and click\xa0_**[Run]**._\\r\\n        - Voila - a list of the division ids instances for that player. Note that each id contains both the division set code, and the instance id (a number).\\r\\n- **User Monitoring**\\r\\n    - We\'ve added a new **Recent Users** tab to make it easier to find users that have recently logged into your app\\r\\n    - Note that this is a log, so you may see the same user listed multiple times (only really noticeable at low activity counts)\\r\\n- **User Monitoring | Transactions**\\r\\n    - Updated to support the new purchase services and transaction formats\\r\\n    - You can now view purchase receipts, and even _delete_ purchases if you would like (useful during testing)\\r\\n\\r\\n### General\\r\\n\\r\\n- **Improved Portal Tech**\\r\\n    - We\'ve been doing some work under-the-covers to improve our Portal technology\\r\\n    - The first thing you should notice is a performance boost - yay!\\r\\n    - You may also notice a few CSS-related bugs. Feel free to report those so that we can stamp them out!\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the\xa0brainCloud\xa0API:\\r\\n\\r\\n- **AppStore Service**\\r\\n    - New [AppStore Service](/api/capi/appstore) for querying products / pricing / promotions, and performing in-app purchases.\\r\\n    - The product / pricing / promotions APIs are identical to the Product Service versions - but the IAP APIs are all new!\\r\\n- **Group Service**\\r\\n    - Users can now call [RejectGroupJoinRequest()](/api/capi/group/rejectgroupjoinrequest) to reject a join request that they have made\\r\\n    - New APIs for managing groups: [SetGroupOpen()](/api/capi/group/setgroupopen) and [UpdateGroupACL()](/api/capi/group/updategroupacl)\\r\\n- **Leaderboard Service**\\r\\n    - New versioned social leaderboard calls - [GetSocialLeaderboardByVersion()](/api/capi/leaderboard/getsocialleaderboardbyversion), [GetPlayersSocialLeaderboardByVersion()](/api/capi/leaderboard/getplayerssocialleaderboardbyversion)\\r\\n- **Product Service**\\r\\n    - _Important: The Product Service is being **deprecated** in\xa0favour of the new AppStore and\xa0VirtualCurrency services._\\r\\n    - The service and its APIs will continue to work until **July 1st, 2020**.\\r\\n    - There is a new compatibility flag in the portal under **Design | Core App Info | Advanced Settings**, which controls how purchase transactions are written to the database. Keep\xa0[x] Enable legacy Purchase Collection support checked if your app uses the old Product APIs, or a mixture of the old **Product**and new **AppStore**APIs. New apps that will only use the new AppStore APIs can feel free to clear that flag.\\r\\n    - Although deprecated, we did add the missing cloud-code version of the [VerifyItunesReceipt()](/api/capi/product/verifyitunesreceipt) back to the service (for those who need it!)\\r\\n- **Presence Service**\\r\\n    - There is an all-new [Presence](/api/capi/presence) service. Check it out!\\r\\n- **Tournament Service**\\r\\n    - New Division Set calls have been added - mostly used when querying and joining a Division Set instance.\\r\\n    - The new calls are: [GetDivisionInfo()](/api/capi/tournament/getdivisioninfo), [GetMyDivisions()](/api/capi/tournament/getmydivisions), [JoinDivision()](/api/capi/tournament/joindivision) and [LeaveDivisionInstance()](/api/capi/tournament/leavedivisioninstance)\\r\\n- **VirtualCurrency Service**\\r\\n    - New [VirtualCurrency Service](/api/capi/virtualcurrency) for currency operations. The operations are largely the same, with a bit of clean-up.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All libraries have been updated with the latest API enhancements (with a few exceptions). Go get \'em!\\r\\n        - C# / Unity - fully up-to-date for 3.9\\r\\n        - Unreal - fully up-to-date for 3.9\\r\\n        - C++ - fully up-to-date for 3.9 (though UWP and Nuget packages are outstanding)\\r\\n        - Java - fully up-to-date for 3.9\\r\\n        - JavaScript - fully up-to-date for 3.9\\r\\n        - Objective-C / Swift - fully up-to-date for 3.9\\r\\n        - AS3 - does not include RTT or RTT-related features (Chat, Presence, Lobbies) but otherwise supports all 3.9 APIs\\r\\n- Documentation updates\\r\\n    - API references have been updated for 3.9\\r\\n- Important Fixes\\r\\n    - BCLD-3513 - Calling RemoveMember on a lobby instance that only has 1 member causes a null pointer exception\\r\\n    - BCLD-3388 - When receiving a peer currency reward from an xp upgrade, the peer currency balances were not being returned\\r\\n    - BCLD-3321 - Wrong error code returned for invalid lobby id\\r\\n    - BCLD-3265 - Unreal and objective-C - fix set profileId after merge call\\r\\n    - BCLD-3348 - \'View tutorials\' link in Portal was broken\\r\\n    - BCLD-3217 - Improved RETRY and PACKET\\\\_IN\\\\_PROGRESS handling for Unity client library\\r\\n    - BCLD-3211 - Improved\xa0RETRY and PACKET\\\\_IN\\\\_PROGRESS handling for JavaScript client library\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2018/07/11/release-3-8","metadata":{"permalink":"/braincloud-apiref/release/2018/07/11/release-3-8","source":"@site/release/2018-07-11-release-3-8/index.md","title":"Release 3.8.0 - RTT is here!","description":"brainCloud 3.8 marks the beta release of our new Real-time Tech, which we ingeniously call brainCloud RTT.","date":"2018-07-11T00:00:00.000Z","formattedDate":"July 11, 2018","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":8.615,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 3.8.0 - RTT is here!","date":"2018-07-11","tags":["release-history"]},"prevItem":{"title":"Release 3.9.0","permalink":"/braincloud-apiref/release/2018/10/04/release-3-9-0"},"nextItem":{"title":"Release 3.7.0","permalink":"/braincloud-apiref/release/2018/03/08/release-3-7-0"}},"content":"[![](images/braincloudrtt.500x120.png)](images/braincloudrtt.500x120.png)\\r\\n\\r\\nbrainCloud 3.8 marks the _beta_ release of our new _Real-time Tech_, which we ingeniously call **brainCloud RTT**.\\r\\n\\r\\nThe brainCloud Platform is built upon a request + response foundation - which provides great flexibility and reliability, together with incredible performance and scalability. There are times, however, when more adhoc communications are desirable (online gaming, chat, monitoring, etc) - and that is where RTT comes in.\\r\\n\\r\\nbrainCloud RTT adds a real-time channel to our client API. This channel allows clients to _listen for_ and _react to_\xa0real-time events - without polling.\\r\\n\\r\\nThis enables a whole suite of new brainCloud features - the first of which you\'ll see in brainCloud 3.8!\\r\\n\\r\\n_Note - brainCloud RTT is available to customers using the Business Plan and above\xa0<- this has changed - see below! Usage pricing above the initial set of included concurrent users will be announced soon!_\\r\\n\\r\\n_To enable RTT, check\xa0**[x] Real-time Tech (RTT) Enabled** on the **Design | Core App Info | Advanced Settings** page._ \\r\\n\\r\\n_Update - As of 4.0, brainCloud now supports Plus Plans - which provide RTT features across a variety of usage levels. For more information on Plus Plans, see our [4.0 plan announcement](/blog/2019/05/18/braincloud-4-billing-plans)._\\r\\n\\r\\n# Release Highlights\\r\\n\\r\\n## Chat\\r\\n\\r\\nThanks to RTT, brainCloud now supports online chat!\\r\\n\\r\\nWe have focused primarily on supporting chat for _groups_, but we also provide support for\xa0_global_ chat channels - which are available to all users of an app.\\r\\n\\r\\nChat offers the following features:\\r\\n\\r\\n- _global_ and _group_ channel types\\r\\n- _simple_ or _rich_ content messages (developer defined)\\r\\n- _caching_ of recent chat history\\r\\n- support for _system_ messages (from the app, instead of an end-user)\\r\\n- support for _hidden_ (semantic) messages\\r\\n- ability to _edit / delete_\xa0chat messages\\r\\n\\r\\n_Note - Chat requires brainCloud RTT to be enabled for the app._\\r\\n\\r\\nFor more info, check out the [Chat API](/api/capi/chat) page, and try out our example chat app - [bcChat](https://github.com/getbraincloud/BCChat)!\\r\\n\\r\\n## Messaging\\r\\n\\r\\nbrainCloud now provides a Messaging service as well. Messaging is different from chat, in that:\\r\\n\\r\\n- recipients are addressed directly (i.e. not via channels)\\r\\n- message history is managed on a user-by-user basis (i.e. not by channel)\\r\\n- RTT is _optional_; if enabled, users will receive real-time notification of new messages\\r\\n\\r\\nMessaging features:\\r\\n\\r\\n- Support for multiple recipients\\r\\n- Messages are organized into incoming (\\"inbox\\") and sent (\\"sent\\") messageboxes\\r\\n- Support for _read_vs. _unread_messages\\r\\n- Support for system messages (from the app, instead of an end-user)\\r\\n- Automatic clean-up / deletion of expired messages (important to keep storage utilization low)\\r\\n\\r\\nFor more info, check out the [Messaging API](/api/capi/messaging) page.\\r\\n\\r\\n## RTT Online\\r\\n\\r\\nWith RTT, brainCloud now directly supports the development and integration of custom servers for shared experiences - such as online games (async or otherwise), online meetings, shared document editing, etc.\\r\\n\\r\\n[![](images/Online-Multiplayer-Process.png)](images/Online-Multiplayer-Process.png)\\r\\n\\r\\n### Room Servers\\r\\n\\r\\nRoom Servers are custom servers used to provide a shared experience (i.e. an online game, online meeting, etc.) to a set of users.\\r\\n\\r\\nThese servers are light-weight and simple to develop, and can easily integrate with brainCloud\'s new Lobby and Online Matchmaking services.\\r\\n\\r\\nIn 3.8, Custom Room Servers must be hosted outside of brainCloud, but future brainCloud releases will support hosting the services directly under brainCloud via Docker containers.\\r\\n\\r\\n### Lobbies\\r\\n\\r\\nLobbies are used to gather up users prior to launching Room Servers. They provide an online matchmaking service (as opposed to the offline strategy provided by our existing Matchmaking service).\\r\\n\\r\\nLobbies provide:\\r\\n\\r\\n- support for multiple teams - with min / max # of users\\r\\n- automatic assignment of users to teams (users can switch afterwards)\\r\\n- management of _user settings_and _ready_status\\r\\n- support for multiple lobby types\\r\\n- support for calling an external _room server manager_to launch a _room server_when the lobby is _ready_\\r\\n\\r\\n### Lobby Matchmaking\\r\\n\\r\\nOnline matchmaking is used to match up users with lobbies, in preparation for entering Room Servers.\\r\\n\\r\\nThe Lobby Matchmaking APIs allow the developer to:\\r\\n\\r\\n- specify the type of lobby / room to match with\\r\\n- specify the player rating to target\\r\\n- specify an algorithm to use when _escalating_the search\\r\\n- provide a custom filter script to use to filter out candidates\\r\\n\\r\\nFor more info, check out the [Lobby API](/api/capi/lobby) page.\\r\\n\\r\\n## On Demand Tournaments\\r\\n\\r\\nWe have greatly enhanced our Leaderboard and Tournament systems to make the scheduling of tournaments more flexible.\\r\\n\\r\\nbrainCloud previously supported only _regularly recurring_ tournaments - which are tournaments that happen daily, weekly, monthly, etc... (i.e. at preset intervals). brainCloud 3.8 introduces new\xa0_On Demand / Adhoc Tournaments_ \\\\- to support irregularly scheduled tournaments (i.e. major holidays, new releases, etc.)\\r\\n\\r\\n_To create an adhoc tournament, create a leaderboard and choose the \\"Adhoc Tournaments\\" rotation type. Then manually add each tournament period._\\r\\n\\r\\n## Cloud Code Import / Export\\r\\n\\r\\nFinally, we are reworking our cloud code management sytems. As part of this, we\xa0have created a new serialization format for cloud code scripts, that makes it easier to export the scripts, edit them locally on your workstation, and upload them back to us.\\r\\n\\r\\nThe handy cloud-code method below allows you to post a score to multiple leaderboards:\\r\\n\\r\\nvar result = {};\\r\\nresult.posted = 0;\\r\\nresult.errors = 0;\\r\\nresult.errorsList = [];\\r\\n\\r\\n// Grab the parameters\\r\\nvar leaderboards = data.leaderboards;\\r\\nvar score = data.score;\\r\\nvar extras = data.extras;\\r\\n\\r\\nvar \\\\_leaderboard = bridge.getLeaderboardServiceProxy();\\r\\nvar postResult = {};\\r\\n\\r\\n// Loop through the leaderboards\\r\\nfor (var i = 0; i < leaderboards.length; i++ ) {\\r\\n    \\r\\n    // Post the score\\r\\n    postResult = \\\\_leaderboard.postScoreToLeaderboard(leaderboards[i], score, extras);\\r\\n    if (postResult.status == 200) {\\r\\n        result.posted++;\\r\\n    } else {\\r\\n        result.errors++;\\r\\n        result.errorsList.push(postResult);\\r\\n    }\\r\\n    \\r\\n}\\r\\n\\r\\n// Return the results\\r\\nresult;\\r\\n//\\\\*\\\\*\\\\* ------------- brainCloud meta-data begins now - do not hand-edit -----------------\\r\\n// \\"scriptName\\":\\"PostToLeaderboards\\",\\r\\n// \\"clientCallable\\":true,\\r\\n// \\"s2sCallable\\":false,\\r\\n// \\"peerCallable\\":false,\\r\\n// \\"scriptTimeout\\":10,\\r\\n// \\"description\\":\\"Posts a score to multiple leaderboards\\",\\r\\n// \\"parms\\":\\"{\\\\\\\\n  \\\\\\\\\\"leaderboards\\\\\\\\\\": [\\\\\\\\\\"weekly\\\\\\\\\\", \\\\\\\\\\"alltime\\\\\\\\\\"],\\\\\\\\n  \\\\\\\\\\"score\\\\\\\\\\": 1000,\\\\\\\\n  \\\\\\\\\\"extras\\\\\\\\\\": {}\\\\\\\\n}\\",\\r\\n// \\"version\\":3,\\r\\n// \\"updatedAt\\":1530799500264\\r\\n\\r\\nTo import it into your app:\\r\\n\\r\\n- Click [here](/learn/cloud-code-central/handy-cloud-code-scripts/example-posttoleaderboards-script/) to download the serialized version of the cloud code script to your workstation\\r\\n- Launch the _Design Portal_, and go to **Design | Cloud Code | Scripts**, and choose the _Import Script_ option from the **Import / Export** menu button\\r\\n- Navigate to your download directory, and choose the `PostToLeaderboards.cloudcode.js.zip`\xa0script\\r\\n- Click okay - and voila, you should now have the script, with all setting intact.\\r\\n\\r\\nThis new serialization format is the first step to a bunch of new features that we hope will make creating and managing cloud code scripts a lot easier for devs. We hope you like it!\\r\\n\\r\\n* * *\\r\\n\\r\\n# Portal Changes\\r\\n\\r\\nThe following additions and changes have made to the Design Portal:\\r\\n\\r\\n## Design\\r\\n\\r\\n- **Core App Info | Advanced Settings**\\r\\n    - Added a new setting to _enable RTT_ to the App Settings section.\\r\\n- **Cloud Code | Scripts**\\r\\n    - Added new options for _importing_ and _exporting_ Cloud Code scripts.\\r\\n- **Leaderboards | Leaderboard Configs**\\r\\n    - This dialog has been _completely re-designed_ to better handle Tournament scenarios, including new _On Demand Tournaments._\\r\\n    - One tournaments are enabled, a new _Tournament Periods_ section appears - allowing the developer to select and edit the settings of a specific tournament rotation.\\r\\n    - Recurring tournaments will always show the _current period,_ followed by the _next (recurring) period._ Changes to either period will affect all periods that follow_._\\r\\n    - Adhoc tournaments will show the the current period (if there is one) and any future periods. Adhoc tournament periods do not repeat - you must individually schedule each one.\\r\\n- **Messaging | Chat**\\r\\n    - Used to enable and configure the new _Chat_ service.\\r\\n    - The settings determine how much chat history is preserved.\\r\\n- **Messaging | Chat Channels**\\r\\n    - Used to configure the list of _Global Chat Channels_ for the app.\\r\\n- **Messaging | Messaging**\\r\\n    - Used to enable and configure the _Messaging_ service.\\r\\n    - The settings determine message retention, and whether outgoing copies of messages are saved.\\r\\n- **Multiplayer | Lobbies**\\r\\n    - Used to enable the _Lobby_ service, and configure the list of _Lobby Types_.\\r\\n    - Lobby type settings include:\\r\\n        - _team definitions_ - including min / max number of partipants\\r\\n        - _progression rules_ - including timing and ready-up percentages\\r\\n        - _matchmaking filter_ - used to customize matchmaking beyond the built-in skill, lobby-type and team space algorithm\\r\\n        - _room server manager_ - the web call to make to allocate a room server for the experience\\r\\n        - _custom config_ - custom json parameters to pass onto the room server at the start of the experience\\r\\n\\r\\n[![](images/2018-07-17_21-06-03.gif)](images/2018-07-17_21-06-03.gif)\\r\\n\\r\\n## Monitoring\\r\\n\\r\\n- **Global Monitoring | Leaderboards**\\r\\n    - Updated the leaderboard viewer to view On Demand / Adhoc Tournaments\\r\\n\\r\\n* * *\\r\\n\\r\\n# API Changes\\r\\n\\r\\nThe following changes/additions have been made to the brainCloud API:\\r\\n\\r\\n- **[New!] Chat**\\r\\n    - Add _online chat_ to your app\xa0quickly and easily!\\r\\n    - Check out the [Client](/api/capi/chat) and [S2S](/api/s2s/chat)\xa0Chat APIs.\\r\\n- **Client**\\r\\n    - **[New!]** [EnableRTT()](/api/capi/rtt/enablertt) - Used to establish the RTT connection from the client.\\r\\n    - **[New!]** [DisableRTT()](/api/capi/rtt/disablertt) - Disconnect from RTT.\\r\\n    - Plus methods for registering and de-registering RTT listeners for Chat, Events, Messaging and Lobbies. See [Client](/api/capi/client) service for details.\\r\\n- **Event**\\r\\n    - No more polling! [SendEvent()](/api/capi/event/sendevent) now sends a realtime event to the recipient if they are currently online, and RTT is enabled.\\r\\n    - See the [RegisterRTTEventCallback()](/api/capi/rtt/registerrtteventcallback) API for details.\\r\\n- **GlobalEntity**\\r\\n    - Made the following system entity calls available from client session cloud-code scripts (they were previously S2S only)\\r\\n        - [CreateSystemEntity()](/api/capi/globalentity/createsystementity), [GetSystemEntityList()](/api/capi/globalentity/getsystementitylist), [GetSystemEntityListCount()](/api/capi/globalentity/getsystementitylistcount), [GetSystemEntityPage()](/api/capi/globalentity/getsystementitypage), [GetSystemEntityPageOffset()](/api/capi/globalentity/getsystementitypageoffset), and [ReadSystemEntity()](/api/capi/globalentity/readsystementity).\\r\\n    - [GetListByIndexedId()](/api/capi/globalentity/getlistbyindexedid) now returns `entityListCount`\xa0in addition to the list of items.\\r\\n- **[New!] Lobby**\\r\\n    - Add online matchmaking, full lobby support and easy custom server integration to your app.\\r\\n    - Check out the [Client](/api/capi/lobby) and [S2S](/api/s2s/lobby) Lobby APIs.\\r\\n- **[New!] Messaging**\\r\\n    - Add _user-to-user messaging_ to your app, with optional real-time delivery via RTT.\\r\\n    - Check out the [Client](/api/capi/messaging) and [S2S](/api/s2s/messaging) Messaging APIs.\\r\\n- **Product**\\r\\n    - Added the missing [VerifyItunesReceipt()](/api/capi/product/verifyitunesreceipt) call to Cloud Code.\\r\\n\\r\\nIn addition, all brainCloud file downloads (global and user) are now resumable (we have added the \\"Accept-Ranges\\" header).\\r\\n\\r\\n* * *\\r\\n\\r\\n# Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - RTT support, with Chat, Messaging and Lobby APIs, have been added to the _Unity_, _Java_ and _Javascript_ libraries. More libraries will follow soon!\\r\\n    - All libraries have been updated with improved\xa0_retry_ and _packet-in-progress_ handling\\r\\n    - Our Javascript library now directly supports NPM. Include `braincloud-js` to grab it.\\r\\n- Documentation updates\\r\\n    - We have updated the docs to reflect the new brainCloud services\\r\\n- Plus miscellaneous fixes and performance improvements"},{"id":"/2018/03/08/release-3-7-0","metadata":{"permalink":"/braincloud-apiref/release/2018/03/08/release-3-7-0","source":"@site/release/2018-03-08-release-3-7-0/index.md","title":"Release 3.7.0","description":"We are happy to present Release 3.7.0. It\'s a mid-sized update that satisfies some key customer requests and incorporates some foundational changes that we will be leveraging in upcoming releases!","date":"2018-03-08T00:00:00.000Z","formattedDate":"March 8, 2018","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":3.985,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 3.7.0","date":"2018-03-08","tags":["release-history"]},"prevItem":{"title":"Release 3.8.0 - RTT is here!","permalink":"/braincloud-apiref/release/2018/07/11/release-3-8"},"nextItem":{"title":"Release 3.6.6","permalink":"/braincloud-apiref/release/2018/01/29/release-3-6-6"}},"content":"We are happy to present Release 3.7.0. It\'s a mid-sized update that satisfies some key customer requests and incorporates some foundational changes that we will be leveraging in upcoming releases!\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Inherited Friends!\\r\\n\\r\\nThe [Shared Accounts](/learn/key-concepts/authentication/shared-accounts/) feature in brainCloud allows developers to build relationships between apps - so that users can log into a single master account (i.e. parent profile), and utilize that account (and data) across a suite of related apps. The user data from each app is still stored independently (allowing independent save state, achievements, scores/leaderboards, etc.) in a separate sub-account (i.e. child profile).\\r\\n\\r\\nWe have now extended this mechanism to better support social relationships between users. So, instead of having to manage a set of friends individually for each app, child apps can now _inherit_ friends from their parents. This is a great boon for social leaderboards - and means that new entrants in a suite of apps can easily extend the social graph of related apps.\\r\\n\\r\\nIf you are already using _Shared Accounts_, you can enable\xa0_Inherited Friends_ by going to the\xa0**Design | Authentication | Shared Accounts** page and checking the\xa0_[x] Include Friends of Parents_ option.\\r\\n\\r\\nThe [ListFriends()](/api/capi/friend/listfriends), [GetSocialLeaderboard()](/api/capi/leaderboard/getsocialleaderboard), [GetPlayersSocialLeaderboard()](/api/capi/leaderboard/getplayerssocialleaderboard) and [GetMultiSocialLeaderboard()](/api/capi/leaderboard/getmultisocialleaderboard) APIs have all been enhanced to utilize inherited friends.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### More Flexible Matchmaking\\r\\n\\r\\nOur matchmaking service has been enhanced to offer more flexibility - namely support for overriding the player\'s ranking that is the basis of the search, and the ability to substitute in a different matchmaking filter.\\r\\n\\r\\nThe new API methods are: [FindPlayersUsingScript()](/api/capi/matchmaking/findplayersusingscript) and [FindPlayersWithAttributesUsingScript()](/api/capi/matchmaking/findplayerswithattributesusingscript).\\r\\n\\r\\n_Note - for security purposes, these new calls are cloud-code only._\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Updated Developer Roles / Permissions\\r\\n\\r\\nWe have tweaked the permissions associated with the default development roles of the system to incorporate customer feedback.\\r\\n\\r\\nThe following changes have been applied:\\r\\n\\r\\n- _Support_ role\\r\\n    - Removed write access to all of\xa0**Global Monitoring**, except for **Leaderboards**. \\r\\n    - Removed access to **Reporting | API Usage** - leaving only access to **Reporting | Error Analytics**\\r\\n    - Full read+write access to **User Monitoring** remains\\r\\n    - Limited read+write access to **Design** remains as is\\r\\n\\r\\n- _Read-only_ role \\r\\n    - Removed access to **Design | Core App Info** (all sections) and **Design | Integrations** \\r\\n\\r\\n\xa0\\r\\n\\r\\n### Change E-mail Identity\\r\\n\\r\\nWe\'ve added a new api that allows you to change the email address associated with a user\'s EmailIdentity.\\r\\n\\r\\nThe new [ChangeEmailIdentity()](/api/capi/identity/changeemailidentity) call takes as parameters the existing email and password (for security purposes), and the new email address to use. You can also optionally tell the method to update the user\'s contact email as well (recommended).\\r\\n\\r\\n_Note - this method does not currently support our email verification system, so no verification email (with link to confirm) is sent. We plan to add that support in a future release._\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe\'ve made the following portal changes:\\r\\n\\r\\n### Design\\r\\n\\r\\n- **Authentication | Shared Accounts**\\r\\n    - Added the new\xa0_[x] Include Friends of Parents_ option\\r\\n- **Leaderboard | Leaderboard Configs**\\r\\n    - You can no longer add Tournaments to the active rotation of a leaderboard if it already has scores. The tournament will be queued to activate on the next rotation\\r\\n\\r\\n### Monitoring\\r\\n\\r\\n- **Global Monitoring | Leaderboards**\\r\\n    - Now showing the status of the Tournament auto-claim and auto-join settings per leaderboard rotation\\r\\n\\r\\n### Team\\r\\n\\r\\n- **Home | Audit Log**\\r\\n    - We now log any password reset requests for security purposes...\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the brainCloud API:\\r\\n\\r\\n- **Identity**\\r\\n    - New [ChangeIdentityEmail()](/api/capi/identity/changeemailidentity)\xa0method for changing the email address that a user uses to login.\\r\\n- **Matchmaking**\\r\\n    - Two new cloud code APIs allow you to override the player rating and filter script used in matchmaking - [FindPlayersUsingScript()](/api/capi/matchmaking/findplayersusingscript) and [FindPlayersWithAttributesUsingScript()](/api/capi/matchmaking/findplayerswithattributesusingscript)\\r\\n\\r\\n_Plus the [ReadProperties()](/api/capi/globalapp/readproperties) method is now available from the S2S API._\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All libraries have been updated with the new APIs. We recommend that all apps upgrade!\\r\\n- Documentation updates\\r\\n    - We have updated the docs to reflect the new API calls\\r\\n- Important Fixes\\r\\n    - BCLD-2777 -\xa0Portal: when adding to the [Job Queue], the \\"Save\\" button becomes available without selecting a script\\r\\n        \\r\\n    - BCLD-2783 -\xa0Changing apps while on the script page causes the Peer Script Service not to update in the API Explorer\\r\\n    - BCLD-2790 -\xa0Portal: [Monitoring] --\x3e [Group Entities]: the data for a group entity is shown as an escaped JSON string, not nicely printed\\r\\n        \\r\\n    - BCLD-2904 -\xa0User Attributes don\'t reset on reset\\r\\n        \\r\\n    - BCLD-2927 - fixed duplicate HTML ids across all pages\\r\\n    - BCLD-2985 -\xa0User Monitoring | Friends - need space between friend name and email\\r\\n        \\r\\n    - BCLD-3003 -\xa0Team Select Screen - When the User adds a new team it does not appear in the select team drop down\\r\\n        \\r\\n- Plus miscellaneous fixes and performance enhancements\u2026"},{"id":"/2018/01/29/release-3-6-6","metadata":{"permalink":"/braincloud-apiref/release/2018/01/29/release-3-6-6","source":"@site/release/2018-01-29-release-3-6-6/index.md","title":"Release 3.6.6","description":"This release is a minor update with some key optimizations and defect fixes.","date":"2018-01-29T00:00:00.000Z","formattedDate":"January 29, 2018","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":2.485,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 3.6.6","date":"2018-01-29","tags":["release-history"]},"prevItem":{"title":"Release 3.7.0","permalink":"/braincloud-apiref/release/2018/03/08/release-3-7-0"},"nextItem":{"title":"Release 3.6.5","permalink":"/braincloud-apiref/release/2017/12/12/release-3-6-5"}},"content":"This release is a minor update with some key optimizations and defect fixes.\\r\\n\\r\\n## Feature Highlights\\r\\n\\r\\n### Faster Leaderboards and Tournaments\\r\\n\\r\\nWe\'ve spent considerable time profiling and optimizing key tournament and leaderboard APIs - we think you\'ll like the results:\\r\\n\\r\\n- [GetGlobalLeaderboardView()](/api/capi/leaderboard/getgloballeaderboardview) is now up to **25X faster!** This is especially apparent for leaderboards of 50K or more users where the player doing the retrieval is near the end of the leaderboard\\r\\n- PostTournamentScoreWithResults() is also up to **50X faster!** We had recently pulled that call out-of-service due to performance issues - we hope to reinstate it in a few days after we\'ve got more real-world data\\r\\n\\r\\n### Miscellaneous Fixes\\r\\n\\r\\nThe following defects have been addressed in 3.6.6:\\r\\n\\r\\n- BCLD-2782 - Portal: Trying to \\"View Team\\" from Super > Users switches to random team instead of the selected team\\r\\n- BCLD-2777 - Portal: When adding to the Job Queue, the \\"Save\\" button becomes available without selecting a script\\r\\n- BCLD-2793 - Portal: Super - System Properties\' Categories drop-down does not function properly once a category is selected\\r\\n- BCLD-2847 - Portal: Part of WebHook URL changes to \\"null\\" after saving and re-opening it\\r\\n- BCLD-2821 - Portal: User Monitoring | Statistics - always shows \\"0 records\\"\\r\\n- BCLD-2802 - Portal: dropdown/context menu on Design | Custom Config | Files appears partly off the right side of screen\\r\\n- BCLD-2861 - Portal: Core App Info | Admin Tools - Deployment: Checkbox of second option gets checked while clicking on the text of the third option.\\r\\n- BCLD-2786 - Portal: Mouse-over texgt is either missing or incorrect (multiple locations)\\r\\n- BCLD-2856 - API: In some cases, non-shareable files can be downloaded without a session\\r\\n- BCLD-2826 - API: Leaderboard: GetGlobalLeaderboardView ranges now working properly with duplicate scores\\r\\n- BCLD-2830 - API: PostTournamentScoreWithResults reports the wrong error if a player is not registered\\r\\n- BCLD-2813 - Portal: Super user cannot perform \\"Sys Enable\\" action to enable an app that has been previously disabled\\r\\n- BCLD-2824 - Portal: Design | Integrations - the first three fields for SendGrid integration should have \\\\* next to titles to indicate required\\r\\n- BCLD-2825 - API: PostScoreToLeaderboard fails on any leaderboard that\xa0_ever_ had a tournament attached\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nThere are no changes to the portal in this release.\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the\xa0brainCloud\xa0API:\\r\\n\\r\\n- **Tournament**\\r\\n    - `PostTournamentScoreWithResults()`\xa0- we have removed the\xa0`previousLeaderboard` section of the returned JSON. It was debugging information that mistakenly got left in the response during initial development.\\r\\n- **Client Library**\\r\\n    - We have added a new `IGNORE_SSL_CHECK`\xa0compiler directive to the C# library. Useful for when connecting an app to a developer-deployed brainCloud instance.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All libraries have been updated with the refactoring and latest API enhancements. We recommend that all apps upgrade!\\r\\n- Important Fixes\\r\\n    - See the list in the Feature section\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2017/12/12/release-3-6-5","metadata":{"permalink":"/braincloud-apiref/release/2017/12/12/release-3-6-5","source":"@site/release/2017-12-12-release-3-6-5/index.md","title":"Release 3.6.5","description":"We are pleased to present release 3.6.5 - just in time for the holidays!","date":"2017-12-12T00:00:00.000Z","formattedDate":"December 12, 2017","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":7.5,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 3.6.5","date":"2017-12-12","tags":["release-history"]},"prevItem":{"title":"Release 3.6.6","permalink":"/braincloud-apiref/release/2018/01/29/release-3-6-6"},"nextItem":{"title":"Release 3.6.0","permalink":"/braincloud-apiref/release/2017/10/07/release-3-6"}},"content":"We are pleased to present release 3.6.5 - just in time for the holidays!\\r\\n\\r\\n_Note that there are some breaking changes in the client libraries - but they are pretty simple to accomodate, and of course will not affect your app until you update. For more details, see the **Refactored Client Libraries** section below._\\r\\n\\r\\n* * *\\r\\n\\r\\n## Feature Highlights\\r\\n\\r\\n### Fresher Matchmaking\\r\\n\\r\\nWe have added a new expiry feature to keep your matchmaking fresh. It is implemented via a nightly process that will disable the matchmaking flag for users that haven\'t logged into the app within the specified number of days.\\r\\n\\r\\n[![](images/2017-12-11_13-07-46.png)](images/2017-12-11_13-07-46.png)\\r\\n\\r\\n\xa0\\r\\n\\r\\nEnabling this feature will ensure that players don\'t get matched with opponents who haven\'t recently logged into your game.\\r\\n\\r\\nImportant notes:\\r\\n\\r\\n- The nightly process only runs for **Live** apps. This feature does not affect apps still in development. (This saves server cycles, plus while in development it is tough to get enough players to match against already!)\\r\\n- Auto-Expiry is turned **OFF** by default for _existing_ apps.\\r\\n- Auto-Expiry is turned **ON** by default for _new_ apps (with expiry set to 30 days).\\r\\n- _Important: brainCloud will not automatically re-enable matchmaking for a disabled user once they login_. Apps using this feature should directly call\xa0`EnableMatchmaking()` whenever a user launches the app.\\r\\n\\r\\n### Batch Scripts\\r\\n\\r\\nA common customer request has been a way to iterate through the population of an app\'s users, performing some operations on each user\'s account. It has taken some time to find a proper way to do this that is scalable and safe - but we are pleased to announce that the first evolution of this is now in place.\\r\\n\\r\\nWe have introduced a new S2S Script Service method called `RunBatchUserScript()`. This script can be called via the S2S Explorer or from an external server - and queues the specified script to be run against each of the users in a app (or optionally, against particular segments). Although the `RunBatchUserScript()`\xa0is triggered from the S2S context, each individual script is run in the context of the current player - so it is as if the script was called by that user\'s logged-in session - greatly simplifying the script code.\\r\\n\\r\\nHere\'s an example script that writes a global entity (singleton) for each player it is run upon:\\r\\n\\r\\nvar result;\\r\\n\\r\\n\\\\_globalEntityService = bridge.getGlobalEntityServiceProxy();\\r\\n\\r\\nvar acl = { \\"other\\": 1 };\\r\\nvar customData = { \\"test\\": \\"info\\" };\\r\\n\\r\\nresult = \\\\_globalEntityService.createEntity(data.entityType, null, acl, customData );\\r\\n\\r\\nresult;\\r\\n\\r\\nYou can call it via the S2S Explorer like this:\\r\\n\\r\\n[![](images/2017-12-11_13-39-51.png)](images/2017-12-11_13-39-51.png)\\r\\n\\r\\nNote that the scripts get queued to run on the users in the background - and depending upon the app\'s population may take several minutes or potentially several hours to complete.\\r\\n\\r\\n### Refactored Client Libraries\\r\\n\\r\\nThe brainCloud client libraries have been refactored for greater simplicity and flexibility. Key improvements with these changes are:\\r\\n\\r\\n- Support for multiple connections per device \u2190 useful for devices that require multiple concurrent user logins - couch co-op, anyone?\\r\\n- Saved wrapper data is now differentiated with a wrapperName value\xa0\u2190 necessary to support multiple connections\\r\\n- Access to all client services from the wrapper\xa0\u2190 means the wrapper becomes largely invisible\\r\\n- Simpler client code\xa0\u2190 yay!\\r\\n\\r\\n#### Key API changes\\r\\n\\r\\nThe key change that allows this is the _deprecation of the singleton behaviour of the brainCloud client libraries_. As you may or may not know, for convenience the brainCloud client libraries declared singletons for both the BrainCloudWrapper and BrainCloudClient library classes. This provided a bit of convenience for developers - but at considerable costs to flexibility (and frankly, some code readability issues). We are hereby deprecating this behaviour.\\r\\n\\r\\nIn addition, we are making the _client services callable directly from the wrapper_ - which greatly simplifies calling them (and abstracts whether you are calling via the wrapper or directly from the client).\\r\\n\\r\\nFor comparison - here are what two calls to the leaderboard API look like - before and after this API change:\\r\\n\\r\\n// Old: Call leaderboard API via the wrapper singleton, to the leaderboard service via the BrainCloudClient object\\r\\nBrainCloudWrapper.GetBC().getLeaderboardService.ListAllLeaderboards( ApiSuccess, ApiError);\\r\\n\\r\\n// New: Same call. Note that whether \\\\_bc is an instance of BrainCloudWrapper or BrainCloudClient, this code looks the same. Simpler, eh?\\r\\n\\\\_bc.LeaderboardService.ListAllLeaderboards( ApiSuccess, ApiError );\\r\\n\\r\\n\xa0\\r\\n\\r\\nThese improvements mean that some client code has to change - but the changes are pretty simple, and we believe well worth-it (see below).\\r\\n\\r\\nExisting apps have the following options available to them:\\r\\n\\r\\n- _No changes_ - stay with brainCloud libraries earlier than 3.6.5\\r\\n- _Minimal changes_ - move to brainCloud library 3.6.5, but turn the legacy singleton mode on\\r\\n- _Full changes_ - move to brainCloud library 3.6.5, initialize the brainCloud wrapper to your own global(s), and adjust your calling code accordingly\\r\\n\\r\\nWe highly recommend that new apps use the new paradigm - your code will be simpler for it.\\r\\n\\r\\nFor more information, see our [blog post](/blog/2017/12/12/wrappers-clients-and-inconvenient-singletons/) with the full details and rationale.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe\'ve made the following portal changes for this release:\\r\\n\\r\\n### Team\\r\\n\\r\\n- Navigation\\r\\n    - We have restructured the **Team** navigation menu to better group the features. In particular, all of the Admin-management features are now located under the **Manage** menu.\\r\\n\\r\\n### Design\\r\\n\\r\\n- Core App Info | Advanced Settings\\r\\n    - _**Disable**_\xa0_**Live Lock**_\xa0- Live Lock helps to protect your live apps by forcing you to unlock them before editing. You can now disable this behaviour if you would like (_Note - not recommended for production apps!_)\\r\\n- Integrations |\xa0Sendgrid\\r\\n    - Fixed an issue where test emails were no longer being sent when the\xa0**[Test]** button was pressed.\\r\\n- Multiplayer | Matchmaking\\r\\n    - **_Expire matchmaking_** - Automatically expire (disable) a user\'s eligibility for matchmaking after <x\\\\> days without logging in. Helps to ensure that your players are matched with fresh opponents, instead of players who may no longer be active in your app!\\r\\n\\r\\n### Monitoring\\r\\n\\r\\n- User Monitoring | Logs\\r\\n    - New **Export** feature exports requests and responses in their entirety... (before was limited to request and response summaries)\\r\\n\\r\\n### **General**\\r\\n\\r\\n- User Settings\\r\\n    - _Language_ and _Timezone_ settings are now stored to the developers account profile (instead of local web storage). Also addressed an issue with daylight savings time.\\r\\n- Entity Editors\\r\\n    - _Global Entity Editor_, _Group Entity Editor_ and _User Entity Editor_ have all been updated to handle `Long`\xa0values better.\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the\xa0brainCloud\xa0API:\\r\\n\\r\\n- **Client**\\r\\n    - `EnableSingletonMode`\xa0setting - if you wish to use the brainCloud singleton mode, it is still available, but it must be explicitely enabled. You can do so by setting\xa0`BrainCloudClient.EnableSingletonMode = true` in your app.\\r\\n- **Multiplayer**\\r\\n    - <**New!**\\\\>\xa0`IncrementShield()` - allows you to increment the shield setting without reading it first. Especially useful when extending a shield that is already in place.\\r\\n- **Script Service**\\r\\n    - <**New!**\\\\> `RunBatchUserScript()`\xa0- allows you to queue a script to be run against all of your apps\'s users! (or select segments)\\r\\n- **Wrapper**\\r\\n    - Singleton behaviour is now deprecated, but can be re-enabled using the\xa0`EnableSingletonMode` setting of the Client.\\r\\n    - All of the brainCloudClient service accessors (except AuthenticationService) have been added to the wrapper.\\r\\n    - Unity: Removed static class method `Client()` (which returned the client singleton) and replaced it an instance-level `Client()`\xa0get / set accessor (which returns the client object associated with this wrapper instance).\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All libraries have been updated with the refactoring and latest API enhancements. We recommend that all apps upgrade!\\r\\n- Documentation updates\\r\\n    - We have updated the docs to reflect the new client calling conventions\\r\\n- Miscellaneous updates\\r\\n    - We have updated brainCloud to use **version 2.7 of the Facebook Graph API**\\r\\n- Important Fixes\\r\\n    - BCLD-2756 - Losing verification code on merging Email account into another account\\r\\n    - BCLD-2746 - PostTournamentScore/WithResults should auto-join player if Auto Join enabled for leaderboard config\\r\\n    - BCLD-2742 - Rank added to postTournamentScoreWithResults\\r\\n    - BCLD-2739 - Fix to before and after handling of postTournamentScoreWithResults\\r\\n    - BCLD-2721 - When attaching an Email identity and app email feature Send Verification Email is checked , we aren\'t updating player emailAddress when should be\\r\\n    - BCLD-2710 - PostTournamentScore(WithResults) - Null pointer exception when posting score to a leaderboard with tournament configured but not active until Next Cycle\\r\\n    - BCLD-2699 - GlobalEntity Raw Export fails to import when <timeToLive\\\\> is 0 (Integer vs. Long)\\r\\n    - BCLD-2696 - Portal - If you switch apps while editing a web service the page does not update\\r\\n    - BCLD-2662 - Non Admin Users see the Remove option in the actions menu of the Members page\\r\\n    - BCLD-2607 - Disable the\xa0[Go Live] button once the user clicks it\\r\\n    - BCLD-2597 - Portal - If data field for an Entity contains an integer that is too high show a proper error dialog\\r\\n    - BCLD-2594 - Segment country-code not standardized as UPPERCASE\\r\\n    - BCLD-2593 - BigInteger web defect - GlobalEntity, ChildEntity, Group and GroupEntity editors\\r\\n    - BCLD-2646 - Fix the banner in Safari\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2017/10/07/release-3-6","metadata":{"permalink":"/braincloud-apiref/release/2017/10/07/release-3-6","source":"@site/release/2017-10-07-release-3-6/index.md","title":"Release 3.6.0","description":"brainCloud 3.6 is a mid-sized release with a few key improvements. It also includes a lot of refactoring under the hood as we prepare for bigger features that are coming down the pipes.","date":"2017-10-07T00:00:00.000Z","formattedDate":"October 7, 2017","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":4.495,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 3.6.0","date":"2017-10-07","tags":["release-history"]},"prevItem":{"title":"Release 3.6.5","permalink":"/braincloud-apiref/release/2017/12/12/release-3-6-5"},"nextItem":{"title":"(Minor) Release 3.5.5","permalink":"/braincloud-apiref/release/2017/07/05/minor-release-3-5-5-coming-soon"}},"content":"**brainCloud 3.6** is a mid-sized release with a few key improvements. It also includes a lot of refactoring under the hood as we prepare for bigger features that are coming down the pipes.\\r\\n\\r\\n_Upgrade notes:\xa0There are no breaking API changes in this release. Do be careful of importing older Global Entity export files into this release, as the default entityIndexedId field has changed (\\\\_eid -> \\\\_eiid) - just ensure that the correct field is selected during the import. Finally, as always, it is advised the customers update to the latest libraries for maximum performance and stability._\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### New Unity Plugin\\r\\n\\r\\nWe have an all-new Unity Plug-in for you.\\r\\n\\r\\nThe new plug-in has been totally re-written, and offers the following cool new features:\\r\\n\\r\\n- Automatically retrieves your appId and secret - no more cutting and pasting!\\r\\n- Easily switch between brainCloud app configurations - e.g. _develop_ vs. _production_, etc.\\r\\n- Quickly create new application configurations - right from the plug-in!\\r\\n- Actively aid in debugging your brainCloud app - displays the currently logged in end-user\'s _profileId_, as well as most recent server _request_ and _response_\\r\\n- Provides quick access to the new bcConsole client log pane\\r\\n- Quick access to the brainCloud Portal and documentation pages\\r\\n- Unity dark theme support!\\r\\n\\r\\nTo install the new plug-in, simply go to our [GitHub site](https://github.com/getbraincloud/Unity-Csharp) and follow the instructions!\\r\\n\\r\\n[![](images/unity_plugin_1-2.png)](images/unity_plugin_1-2.png)\\r\\n\\r\\n### [Popular Request \u2764\ufe0f] Global Entity Import/Export Enhancements\\r\\n\\r\\nWe have expanded our support for importing and exporting the Global Entities of your apps.\\r\\n\\r\\nMost importantly, we ha\'ve added support for what we call Raw JSON Object format files - which in addition to serializing the custom _data_ portion of your objects, also serialize the _meta-data_ portion of the Global Entity - which includes the object\'s\xa0`entityId`, `owner`, `ACL`, etc.\\r\\n\\r\\nThis means that a Raw Global Entity export is really an exact representation of your entities - and is much more suitable for backing up your entities, as well as migrating those entities to another app (i.e. moving from development\xa0\u2192 production).\\r\\n\\r\\nYou will find more details about the Global Entity file formats here.\\r\\n\\r\\n### [Popular Request \u2764\ufe0f] User Export Enhancements\\r\\n\\r\\nWe\'ve added two popular requests to your User Export functionality:\\r\\n\\r\\n- **Better end-user filtering** - you can now select whether to include test users or not in your exports\\r\\n- **User statistics in CSV format exports** - we now allow User Statistics to be included in CSV format exports. \xa0(Previously they were only supported for JSON-format exports.)\\r\\n\\r\\nYou are welcome!\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nYou will notice changes to the following portal screens:\\r\\n\\r\\n### Design\\r\\n\\r\\n- **Gamification | Achievements**\\r\\n    - Improved support for Google Play achievements\\r\\n\\r\\n### Monitoring\\r\\n\\r\\n- **Global Monitoring | Global Entities**\\r\\n    - Added support for additional import/export file formats\\r\\n    - Includes new Raw JSON Object format, which includes full brainCloud meta-data\\r\\n    - Improved Import UI to better walk the user through the process\\r\\n    - Added progress dialog to show activity during larger imports\\r\\n    - Expanded the maximum # of entities allowed to be imported at a time\\r\\n    - Updated Bulk Actions menu to better organize the various import, export and deletion options\\r\\n\\r\\n### Reports\\r\\n\\r\\n- **Dashboard**\\r\\n    - Greatly improved presentation and loading behaviour\\r\\n- **Export Users**\\r\\n    - Can now choose the _Types of Users_ to export - end-users, test users, or both.\\r\\n    - Can now choose to include _user statistics_ in the CSV export\\r\\n\\r\\n### Team\\r\\n\\r\\n- **Team Members** \\r\\n    - Dialog for inviting a new team member has been improved. You no longer have to fill in the user\'s name if they already have a brainCloud account\\r\\n\\r\\n### General\\r\\n\\r\\n- **Banners**\\r\\n    - Greatly improved banner / notice presentation - now behaves across a wider variety of content and screen resolutions.\\r\\n    - Also we _finally_ found the corrupt banner defect that would occasionally show up on the login screen. Yay!\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the\xa0brainCloud\xa0API:\\r\\n\\r\\n- **GlobalEntity service**\\r\\n    - `GetRandomEntitiesMatching()`\xa0- new API to return a random set of entities matching the specified criteria.\\r\\n\\r\\nWe have also made the following missing methods available via Cloud Code:\\r\\n\\r\\n- **PlayerState service**\\r\\n    - `readUserState()`\\r\\n    - `deleteUser()`\\r\\n    - `resetUser()`\\r\\n    - `updateUserName()`\\r\\n    - `updateUserPictureUrl()`\\r\\n- **PlayerStatistics service**\\r\\n    - `incrementUserStats()`\\r\\n    - `readAllUserStats()`\\r\\n    - `readUserStatsForCategory()`\\r\\n    - `resetAllUserStats()`\\r\\n- **PlayerStatisticsEvent service**\\r\\n    - `triggerStatsEvent()`\\r\\n    - `triggerStatsEvents()`\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All libraries have been updated with the latest API enhancements. Go get \'em!\\r\\n- Documentation updates\\r\\n    - Upgrading our API Documentation tech to the latest version of Slate - squashing some bugs!\\r\\n- Important Fixes\\r\\n    - BCLD-2436 - Scheduled scripts timing out. Fixed issue associated with timeouts of sub-scripts.\\r\\n    - BCLD-2447 - Product prices in the product list are different from product details\\r\\n    - BCLD-2451 -\xa0User Entities - The total number of records does not update - fixed!\\r\\n    - BCLD-2453 - Google play support achievement ids now supported in Achievement service\\r\\n    - BCLD-2475 - added missing renamed cloud code methods (ReadUserState(), etc.)\\r\\n    - BCLD-2541 -\xa0Removed several instances where errors where server errors were being logged multiple times\\r\\n- Additional changes/fixes\\r\\n    - Removed obsolete \\\\_GAME\\\\_LOGINS stat from the Global Stats page\\r\\n    - Changed the entityIndexedId property included in Simplified Global Entity exports from \\\\_eid to \\\\_eiid\\r\\n    - Updated to **Facebook Graph API v 2.6** (technically in patch 3.56 prior to this release, but included here for completeness)\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2017/07/05/minor-release-3-5-5-coming-soon","metadata":{"permalink":"/braincloud-apiref/release/2017/07/05/minor-release-3-5-5-coming-soon","source":"@site/release/2017-07-05-minor-release-3-5-5-coming-soon/index.md","title":"(Minor) Release 3.5.5","description":"This is a minor\xa0update - primarily to upgrade brainCloud\'s Facebook support to Graph API v2.4. Of course we couldn\'t resist slipping a few extras\xa0in as well.","date":"2017-07-05T00:00:00.000Z","formattedDate":"July 5, 2017","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":2.395,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"(Minor) Release 3.5.5","date":"2017-07-05","tags":["release-history"]},"prevItem":{"title":"Release 3.6.0","permalink":"/braincloud-apiref/release/2017/10/07/release-3-6"},"nextItem":{"title":"Release 3.5.0","permalink":"/braincloud-apiref/release/2017/06/15/release-3-5"}},"content":"This is a minor\xa0update - primarily to upgrade brainCloud\'s Facebook support to Graph API v2.4. _Of course we couldn\'t resist slipping a few extras\xa0in as well._\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Facebook 2.4 API Support\\r\\n\\r\\nFacebook\xa0is forcing a [transition of all apps from Graph API v2.3 to v2.4 on July 10th](https://developers.facebook.com/blog/post/2017/06/12/transitioning-to-graphapi-v2.4/). The release updates all of brainCloud\'s services to the new Graph v2.4 minimum API level.\\r\\n\\r\\n### Global Entity Import/Export\xa0Improvements\\r\\n\\r\\nWe\'ve made exporting and importing of Global Entities even simpler!\xa0Now exports automatically include the entity indexed id (\\\\_eid) in the exported data,\xa0and the system recognizes that field automatically during imports. This\xa0saves you from having to\xa0specifically select the field to index by during import, and allows for datasets where the indexed value is not duplicated\xa0in the custom data section.\\r\\n\\r\\n### Leaderboard Entry Editing\\r\\n\\r\\nYou can now edit the _Score_ and _Extra Data_ fields of leaderboard entries. Useful for support, debugging and nerfing cheaters!\\r\\n\\r\\n### Error Logs Display\\r\\n\\r\\nWe\'ve made improvements to how log entries are displayed to make higher severity log entries pop more than lesser entries.\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe\'ve made the following portal changes:\\r\\n\\r\\n**Design**\\r\\n\\r\\n- **Cloud Code | API Explorer**\\r\\n    - Now allows you to execute API calls and run scripts even if you have disabled your app (via the Design | Core App Info | Advanced Settings page)\\r\\n    - Usage: Allows devs to temporarily disable their apps and run scripts for maintenance purposes\\r\\n- **Cloud Code | Scripts**\\r\\n    - Scripts can\xa0now be run even when the App has been disabled (see above)\\r\\n\\r\\n**Monitoring**\\r\\n\\r\\n- **Global Monitoring\xa0|\xa0Global Entities**\\r\\n    - Export - now explicitely exports the entityIndexedId as \\\\_eid\\r\\n    - Import - now looks for \\\\_eid field, and if found, automatically maps it to entityIndexedId for import\\r\\n    - Editor - details page now shows the Created At and Updated At time+date fields for entities\\r\\n- **Global Monitoring | Leaderboards**\\r\\n    - Score - click on a player\'s score to edit\xa0it\\r\\n    - Extra Data - click on the Extra Data \\"eye\\" to view and now optionally\xa0_edit_ the JSON-format data\\r\\n\\r\\n- **Global Monitoring | Recent Errors**\\r\\n    - Improved formating of log entries to ensure that higher severity items \\"pop\\" more\\r\\n    - Removed the \\"total pages\\" pagination - the portal was sometimes timing out when iterating through all entries to perform the count (which isn\'t that necessary anyway)\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThere are no API changes in this release.\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - _The libraries have not been updated specifically for 3.5.5._\\r\\n- Documentation updates\\r\\n    - n/a\\r\\n- Important Fixes\\r\\n    - Updated Facebook modules to use Facebook Graph API v2.4+\\r\\n    - Improved logging of errors for Android, Windows and Steam purchases\\r\\n    - Improved pre-condition checking before unnecessarily registering products with Facebook\\r\\n    - Improved logging of \\"input too large\\" exceptions\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2017/06/15/release-3-5","metadata":{"permalink":"/braincloud-apiref/release/2017/06/15/release-3-5","source":"@site/release/2017-06-15-release-3-5/index.md","title":"Release 3.5.0","description":"Logging Overhaul!","date":"2017-06-15T00:00:00.000Z","formattedDate":"June 15, 2017","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":14.63,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 3.5.0","date":"2017-06-15","tags":["release-history"]},"prevItem":{"title":"(Minor) Release 3.5.5","permalink":"/braincloud-apiref/release/2017/07/05/minor-release-3-5-5-coming-soon"},"nextItem":{"title":"Release 3.4.0","permalink":"/braincloud-apiref/release/2017/04/06/release-3-4-0-coming-soon"}},"content":"### Logging Overhaul!\\r\\n\\r\\nWe are revamping our\xa0logging facilities. We are not quite complete, but we have some great improvements to share - we hope you like them!\\r\\n\\r\\n- **[Improved!]**\xa0**Recent Errors** page - we have totally reworked our error log to improve its usability. We\'ve removed unnecessary info and condensed the important details\xa0on the list screen, leaving more room for the error message itself. And we have a new combined\xa0_Details_ screen replaces the separate _Context_ and _Stack_ details screens from the old log.\\r\\n- **[New!]** **Error Analytics** page - a quick one-page summary of the errors your app is encountering, with one-click access to a filtered view of the error log with just those errors highlighted.\xa0Go to **Reporting | Error Analytics** to view.\\r\\n- **[New!]**\xa0**Unreadable Requests** log\xa0- a new log for messages that brainCloud was unable to process due to JSON-formatting errors. These errors occur if large multi-packet requests timeout, or if there are errors in constructing the message in the client app. Go to\xa0**Global Monitoring | Unrecognized Requests**\xa0to view.\\r\\n- **[New!]**\xa0**Audit Log**\xa0[beta] - brainCloud now tracks and logs the changes to your app\'s metadata - what was changes, and by whom. Note that this facility is currently in beta [we are still completing the instrumentation of some operations]. \xa0Go to\xa0**Team | Audit Log**\xa0to view.\\r\\n\\r\\nPlus we\'ve greatly expanded the size of the shared log storage, so more history will be available before the logs rotate away!\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Entity Editor\xa0Enhancements!\\r\\n\\r\\nWe have also continued\xa0improving our\xa0Entity Editors - specifically the Global Entity Editor and User Entity Editor. The improvements for this release include:\\r\\n\\r\\n- _**Filter / Search View**_ - filter the entity view using our JSON query syntax. Makes it easy to search across thousands of entities to find the one that you are looking for. To start filtering, first choose an\xa0entity type, and then click the new **[Refine]** button that appears.\xa0Click [here](/api/appendix/mongodbwherequeries) for details on the filter syntax.\\r\\n- _**Bulk Export**_ -\xa0you can now export both Global Entities and User Entities to JSON files. Note that the file formats between the two are somewhat different:\\r\\n    - **_User Entity Export (raw)_** \\\\- limited to the User Entities of a single user. The system serializes _all_ the data of the user entities - not just the custom data payload of the entities themselves. This output format is mostly intended for debugging purposes.\\r\\n    - **_Global Entity Export (simplified)_** - the Global Entity export format\xa0focuses on exporting the payload portion of the global entities only. This\xa0format matches up with the import format - and allows for easy round-trip editing of Global Entities in an external tool.\\r\\n- _**Bulk Import [Global Entities only]**_\xa0- you can now more easily import your Global Entities.\xa0We now accept a more robust JSON format, that allows for multiple entity types to be included in the same import file.\\r\\n    - and export Global Entities. The JSON used has been \\"simplified\\" for easy compatibility with external tools - like Google Sheets!\\r\\n- _**Bulk Delete [Global Entities only]**_ - need to quickly clear out all entities of a type? Just filter by the entity type, and then choose the **Delete** option from the **[Bulk Actions]** menu.\\r\\n- _**Data Helpers**_ - when editing filters and/or entity contents, the brainCloud enter will attempt to help you complete the names of fields (based on the contents of other entities of the same type).\\r\\n\\r\\n\xa0\\r\\n\\r\\n### High Priority Google Push!\\r\\n\\r\\nGoogle has recently added support for specifying the priority of push notifications. Under the new system, regular priority messages won\'t be delivered or displayed on a sleeping device - so for certain types of apps, it is essential to use their new High Priority notifications feature.\\r\\n\\r\\nbrainCloud now supports\xa0FCM, Google\'s next-generation push service, in addition to the older GCM service we have always supported.\xa0\xa0FCM gives us access to the new Priority messaging feature, and any future features that Google adds.\\r\\n\\r\\nIn addition, we have created\xa0a new _Raw Push Notifications API._ This API\xa0gives the developer full access to the notifications payload\xa0that is sent to the platform push services. Think of it as\xa0DirectX for Push Notifications.\\r\\n\\r\\n_For more information, see the Push Notifications section on API Changes._\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Important Note - Auto Deletion of Playback Streams\\r\\n\\r\\n- _As of\xa0Release 3.5, brainCloud will take steps to ensure that old playback streams are automatically deleted._\\r\\n- It was previously\xa0the responsibility of the app developer to do so - but there are significant limitations to that approach - so we have built\xa0a new system to help\\r\\n- From 3.5 onwards, playback streams will automatically be deleted after 30 days. App developers are still free to delete them earlier if they would like\\r\\n- To ensure minimal impact to existing apps, brainCloud will initially start deleting streams older than 180 days. We will reduce the expiry by 30 days each week\xa0until\\r\\n- We don\'t envision this being an issue for any of our existing apps - but if it is, please reach out to us!\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe continue to\xa0iterate upon and improve the Design Portal and the tools that it provides. This update brings:\\r\\n\\r\\n### Overall\\r\\n\\r\\n- Improved table presentation - alternating row shading\xa0for greater visibility\\r\\n- Some changes to the menu icons used throughout the portal\\r\\n- Added a **Team Info & Billing** option to the Quick menu\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Team Section\\r\\n\\r\\n- **[New!] Audit Log**\\r\\n    - The new audit log tracks changes to\xa0your apps\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Design Section\\r\\n\\r\\n- **Core App Info**\\r\\n    - **Advanced Settings - Compatibility Options**\\r\\n        - [New]\xa0_Include redundant legacy app Ids in some API results_ flag. See API section for more details.\\r\\n        - [New]\xa0_Use legacy GCM for Google Push Notifications -_ enable this if for some reason you want to stay using Google\'s GCM, instead of the new FCM service for push notifications.\\r\\n- **Authentication**\\r\\n    - **Email Authentication**\\r\\n        - brainCloud now supports sending Password Reset Emails even if you haven\'t linked in a SendGrid account.\xa0This screen has been updated to allow\xa0editing of the\xa0text of the message that will be sent.\\r\\n- **Cloud Code**\\r\\n    - **API Explorer**\\r\\n        - **Improved Authenticate** \\\\- Authenticate operation has been enhanced to automatically choose a supported releasePlatform and sufficient appVersion for successful login (these can still be over-ridden).\\r\\n        - **Keyboard Shortcut -** Press **Ctrl+Enter**\xa0to run the selected API when you have completed editing the parameters.\\r\\n        - **Jump to User** - Click on the _Profile Id_ on the page\xa0to jump to that user\'s profile in User Monitoring.\\r\\n    - **Scripts Editor**\\r\\n        - **Keyboard Shortcut** - press **Ctrl+S**\xa0(Windows) or **\u2318-S**\xa0(Mac) to quickly save your script\\r\\n        - **Previous Versions** - now shows the data and time that previous versions of the script were saved\\r\\n        - **Improved Authenticate** - the Quick Authenticate button will now automatically select an appropriate platform and app version to ensure a successful login\\r\\n    - **API Hooks**\\r\\n        - **Authentication Post-Hook** - By popular request, you can now attach a cloud code script to\xa0successful Authentication requests!\\r\\n- **Integrations**\\r\\n    - **Manage Integrations**\\r\\n        - We have removed the Parse Integration section since Parse is no more.\\r\\n- **Multiplayer**\\r\\n    - **Matchmaking**\\r\\n        - **Concurrent Attacks** - There is a new option to allow players to _be_ attacked by multiple players concurrently -\xa0requested by the most heartless\xa0designers! :)\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Monitoring Section\\r\\n\\r\\n- **Global Monitoring**\\r\\n    - **Global Entities**\\r\\n        - **Advanced Filtering** - use JSON to specify complex queries for filtering your objects. Syntax details [here](/api/appendix/mongodbwherequeries).\\r\\n        - **Improved Import process** - supports more generic JSON formats, including formats with multiple entityTypes in the same JSON file. Note - still compatible with the\xa0Parse import format.\\r\\n        - **Bulk Actions**\xa0- new actions for operating on all of your entities, or all entities of a particular type\\r\\n            - Delete - delete all entities of the specified type. Note that you\\r\\n            - Export - export all entities of the specified scope. The export format is simplified to match the import format, and more easily work with external tools.\\r\\n        - **Owner Field** - we\'ve added the Owner field to the list object, so that system objects (which aren\'t owned by an individual user) are easier to identify\\r\\n    - **Recent Errors**\\r\\n        - **New Look-and-Feel** - we\'ve totally revamped the errors screen for greater usability\\r\\n        - **Simplified Error Types** - you now just choose between Errors, Warnings and Info messages to view.\\r\\n        - **Quick Filters** - We\'ve added Filter options to the Action menu on each log entry. Quickly choose to filter the log to\xa0see similar errors (i.e. errors involving the same API call) or relating to the same user.\\r\\n        - **More Sources** - we are also now showing you messages from more sources. Errors and warning from Client API calls are displayed with a smartphone idon, while errors from the API Explorer show a\xa0Compass icon, etc. Hover over any of the source icons for\xa0the text name of the error source.\\r\\n        - **Error Details** - we have a simpler, more informative Error Details screen - complete with a [Copy All] button\xa0conveniently captures the error details (including message, context and stack) into a pretty-printed JSON snippet.\\r\\n    - **[NEW!] Unreadable Requests**\\r\\n        - **Purpose** - Sometimes brainCloud is process a request sent to it.\xa0This is normally because the request is:\\r\\n            - _Incomplete_ - we didn\'t receive the full request. This can happen with larger multi-part messages on the internet.\\r\\n            - _Badly formed_ -\xa0the request is complete, but our servers cannot parse it as proper JSON.\\r\\n            - _Bad signature_ - the message signature does not match the message content. This indicates that the message may have been tampered with.\\r\\n        - **Utility** - Gathering these messages in their own log makes it easier to diagnose what is causing these errors - and hopefully more quickly address the problem.\\r\\n\\r\\n- **User Monitoring**\\r\\n    - **User Entities**\\r\\n        - **Advanced Filtering** - use JSON to specify complex queries for filtering your objects. Syntax details [here](/api/appendix/mongodbwherequeries).\\r\\n        - **Export** - export the user entities with full details. Intended for use by developers in debugging.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Reporting\\r\\n\\r\\n- **API Usage**\\r\\n    - **Unreadable requests** - a count of\xa0the unreadable requests received by your app. For details, go to the **Global Monitoring | Unreadable Requests** page\\r\\n    - **Unprocessed requests** - requests that were otherwise valid, but were not processed because they failed a pre-condition check (i.e. session not valid, etc.)\\r\\n- **[New!] API Errors**\\r\\n    - **Purpose** - shows a summary listing of the errors that your app is encountering, by API call.\\r\\n    - **Error Details** - to get more details on the errors reported, click on the Call Name portion of the entry. You will jump to the Recent Errors page, with the log automatically filtered to the service + operation of the selected call\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\n\xa0\\r\\n\\r\\n### New API Calls\\r\\n\\r\\n- **Authenticate**\\r\\n    - **[New!] Authentication Post-Hook!** \xa0You can now attach a cloud code script to be run upon successful authentication. \xa0Especially useful for initializing a user\'s account upon initial registration. _Pro-tip:\xa0Check for \\"newUser\\": true in the authentication response._ \\r\\n- **Bridge**\\r\\n    - **[New!] [getCurrentTimeZoneOffset()](/api/cc/bridge/getcurrenttimezoneoffset)**\xa0- useful for cloud code scripts that need to do local time calculations. Note that this method is only available via cloud code, and must be called from the Bridge Utility object (i.e. bridge.utils().getCurrentTimeZoneOffset(\\"America/Montreal\\") )\\r\\n- **Client**\\r\\n    - **[New!] RestoreRecentSession[()]** - allows the client app to attempt to restore a saved session. Useful if you think the app may have only been temporarily unloaded, and want to try to avoid doing a whole new authentication. Note that we will be more directly supporting this via the Wrapper in brainCloud 3.6 - so you may want to wait for that version of the feature. **_Update: We have discovered an implementation issue with this feature, and are thus pulling it from this release. It will be replaced with a proper version via our Wrapper in brainCloud 3.6._** \\r\\n- **Global Entity**\\r\\n    - **[New!] [DeleteSystemEntity()](/api/capi/globalentity) method** - \xa0allows for easy deletion of system entities (i.e. global entities without owners). Note that for security reasons this API method is available from cloud-code only.\\r\\n- **Mail**\\r\\n    - **[New!]\xa0[SendAdvancedEmailByAddress()](/api/capi/mail/sendadvancedemailbyaddress)** - sends a\xa0message\xa0to the specified email address. Convenient\xa0for when your app needs to send a message to someone that is not already a user of your app (i.e. app invites, etc).\\r\\n\\r\\n- **Push Notifications**\\r\\n    - **[New!] Google FCM-based Push Notifications.**\\r\\n        - brainCloud now supports\xa0FCM, Google\'s next-generation push service. New Android push features, like push priority, are only supported via the\xa0new FCM service. The good news is that except for the new features, the two services are fully compatible. All new applications will use FCM by default. To enable FCM for a pre-existing app, be sure to uncheck the _[x]\xa0Use legacy GCM for Google Push Notifications_ option under **Design | Core App Info | Advanced Settings**.\\r\\n    - **[New!] Raw Notifications**\\r\\n        - brainCloud now supports what we are calling raw notifications - where you can specify the exact notification payload to be sent to the various notification providers that we support.\\r\\n        - The following methods have been added to S2S Push Service - SendRawBatch(), SendRawToGroup(), SendRawToSegment(), and ScheduleRawNotifications()\\r\\n        - The following methods have been added to the Client API - [SendRawPushNotification()](/api/capi/pushnotification/sendrawpushnotification), [SendRawPushNotificationBatch()](/api/capi/pushnotification/sendrawpushnotificationbatch), and [SendRawPushNotificationToGroup()](/api/capi/pushnotification/sendrawpushnotificationtogroup).\\r\\n    - **[New!] Schedule Push Notifications from Client API**\\r\\n        - Previously you had to write a custom cloud code script (or use our S2S API directly) to schedule push notifications\\r\\n        - The following new methods are available from the Client API -\xa0[ScheduleNormalizedPushNotificationUTC](/api/capi/pushnotification/schedulenormalizedpushnotificationutc), [ScheduleRawPushNotificationUTC](/api/capi/pushnotification/schedulerawpushnotificationutc), [ScheduleRichPushNotificationUTC](/api/capi/pushnotification/schedulerawpushnotificationutc), [ScheduleNormalizedPushNotificationMinutes](/api/capi/pushnotification/schedulenormalizedpushnotificationminutes), [ScheduleRawPushNotificationMinutes](/api/capi/pushnotification/schedulerawpushnotificationminutes), [ScheduleRichPushNotificationMinutes](/api/capi/pushnotification/schedulerichpushnotificationminutes)\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Updated\xa0API Calls\\r\\n\\r\\n- **Currency**\\r\\n    - We have returned the client-side currency management calls -\xa0AwardCurrency(), ConsumeCurrency(), ResetCurrency() - to the client libraries!\\r\\n    - Background - as you may or may not recall, we had recently introduced the ability to restrict the Currency Management APIs, so that they can only be called server-side (via cloud code)\\r\\n    - We recommend that all new apps adapt this approach going forward. Whether client-based currency management calls are allowed is controlled via a compatibility flag\\r\\n    - As part of this work, we had also mistakenly marked the APIs as deprecated. Which of course caused them to be removed 90 days later - as part of 3.4!\\r\\n    - That was an error. This strategy is completely voluntary - so as of 3.5 the API methods are back. [Our recommendations remain the same though!]\\r\\n- **Global Entity**\\r\\n    - ReadEntity() - we have made minor changes to the JSON data returned.\xa0We are no longer returning the redundant appId\xa0field in\xa0the response. Note that you can undo this change using the _[x]\xa0Include redundant legacy app Ids in some API results_\xa0compatibility flag. This flag is by default enabled for existing apps.\\r\\n- **Playback Stream**\\r\\n    - **[New!]\xa0[GetRecentStreamsForInitiatingPlayer()](/api/capi/playbackstream/getrecentstreamsforinitiatingplayer), [GetRecentStreamsForTargetPlayer()](/api/capi/playbackstream/getrecentstreamsfortargetplayer)** \xa0- get a recent stream for initiating or targeted player of a multiplayer action, and can set a max limit of the stream to query. \xa0These calls allow you to specify the maximum number of streams to return, and ensure that the caller is one of the participants of the stream.\\r\\n    - **Auto Deletion**\xa0-\xa0As of Release 3.5, apps will no longer be required to delete old playback streams. The system will automatically delete playback streams that are older than 30 days. Note that we will be phasing in this new deletion service - \xa0the system will start auto-deleting streams older than 180 days, and we will gradually bring the expiry age down over the next few months. _ _**If you think this will adversely affect your app, please reach out to us ASAP!**__\\r\\n- **Miscellaneous**\\r\\n    - **Facebook profile pic URLs** - brainCloud will now default to returning the base Facebook profile pic URL (i.e. looks something like \\"https://graph.facebook.com/{facebookId}/picture\\", instead of the redirected CDN-version of the URL that we\xa0had been returning. Why? Because it turns out those CDN URLs can eventually expire - d\'oh! \xa0Note - using the new URL requires your client to be able to handle http redirection - if you can\'t, check the _[x]\xa0Funnel Custom and User File retrieval through app servers (slower)_ compatibility flag on the **Design | Core App Info | Compatibility Settings** page\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Terminology Alignment\\r\\n\\r\\nWe have cleaned up game\xa0specific terms around our\xa0general API calls.\\r\\n\\r\\n- _Purpose_:\xa0We are reserving gaming terms (like game and player, for the game-specific APIs - and using more general terms - user, app and profile - for the more neutral\xa0APIs). This helps brainCloud to be understandable to multiple audiences, which still highlighting gaming features.\\r\\n- _Approach_: Calls using old terms have been marked as deprecated in the updated client libraries. Each call has a simple equivalent - switching is easy. The older libraries still work - so all your apps remain compatible. Please switch to the new calls at your earliest convenience.\\r\\n- Unreal blueprints and response reason codes with old terms have been duplicated\\r\\n- Finally, the textual portion of some error messages have been adjusted accordingly. All reason code\xa0values are the same -\xa0- though where appropriate, we have provided duplicate, more appropriately named constants to identify them.\\r\\n\\r\\nHere is a listing of the methods that have changed:\\r\\n\\r\\n- **Friend Service**\\r\\n    - FindPlayerByUniversalId() -> FindUserByUniversalId()\\r\\n- **[User] Entity Service**\\r\\n    - GetSharedEntityForPlayerId() - > GetSharedEntityForProfileId()\\r\\n    - GetSharedEntitiesForPlayerId() ->\xa0GetSharedEntitiesForProfileId()\\r\\n    - GetSharedEntitiesListForPlayerId() -> GetSharedEntitiesListForProfileId()\\r\\n- **Player State**\\r\\n    - DeletePlayer() -> DeleteUser()\\r\\n    - ReadPlayerState() -> ReadUserState()\\r\\n    - ResetPlayer() -> ResetUser()\\r\\n    - UpdatePlayerName() -> UpdateUserName()\\r\\n    - UpdatePlayerPictureUrl() - >\xa0UpdateUserPictureUrl()\\r\\n- **Player [User] Statistics**\\r\\n    - IncrementPlayerStats() ->\xa0IncrementUserStats()\\r\\n    - ReadAllPlayerStats() -> ReadAllUserStats()\\r\\n    - ReadPlayerStatsSubset() ->\xa0ReadUserStatsSubset()\\r\\n    - ReadPlayerStatsForCategory() ->\xa0ReadUserStatsForCategory()\\r\\n    - ResetAllPlayerStats() -> ResetAllUserStats()\\r\\n- **Player Statistics Event**\\r\\n    - TriggerPlayerStatisticsEvent() ->\xa0TriggerUserStatsEvent()\\r\\n    - TriggerPlayerStatisticsEvents() ->\xa0TriggerUserStatsEvents()\\r\\n\\r\\n\xa0\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All libraries have been updated with the latest API enhancements. Go get \'em!\\r\\n- Documentation updates\\r\\n    - Updated documentation of mail service\\r\\n    - Improved API doc examples\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2017/04/06/release-3-4-0-coming-soon","metadata":{"permalink":"/braincloud-apiref/release/2017/04/06/release-3-4-0-coming-soon","source":"@site/release/2017-04-06-release-3-4-0-coming-soon/index.md","title":"Release 3.4.0","description":"This is a small release that focuses on some common customer requests. There is hopefully something for everyone!","date":"2017-04-06T00:00:00.000Z","formattedDate":"April 6, 2017","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":3.43,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 3.4.0","date":"2017-04-06","tags":["release-history"]},"prevItem":{"title":"Release 3.5.0","permalink":"/braincloud-apiref/release/2017/06/15/release-3-5"},"nextItem":{"title":"Release 3.3.0","permalink":"/braincloud-apiref/release/2017/03/10/release-3-3-0"}},"content":"This is a small release that focuses on some common customer requests. There is hopefully something for everyone!\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### [Enhanced] Global Entity Editor\\r\\n\\r\\nWe have _finally_ upgraded our **Global Entity Editor** to allow you to _directly_ create entities (i.e. without reverting to code or the API Explorer).\\r\\n\\r\\nIt works as you would expect - just click on the **[+]** button on the **Global Monitoring | Global Entities** page, and\xa0fill out the form to create your object.\\r\\n\\r\\nFor quick object created - try clicking the **[ { Retrieve Example } ]** button. This will prefill the custom data section of the object with JSON retrieved from a similarly typed entity.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Tournament fixes and enhancements\\r\\n\\r\\nFirst of all, we have fixed some issues that could occur when importing or applying _rotation changes to tournaments that are already in progress_. As part of this, we have made some adjustments to the\\r\\n\\r\\nAs part of this, we have made some adjustments to the **Phases** page of the **Leaderboard Config** dialog - making it a lot clearer as to whether your changes will affect the currently active tournament cycle, or will only take effect for the next tournament cycle.\\r\\n\\r\\nFinally, now that that is all straightened away - we have re-enabled support for _Monthly_ and _Yearly_ tournament cycles.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Cloud Code Security Fix\\r\\n\\r\\nIn 3.2 we\xa0refactored script permissions to allow\xa0more precision in controlling whether a script is callable via the Client API, the Server-to-Server API, or from a Peer Service.\\r\\n\\r\\nIt turns out that a defect was introduced during that change that in some cases would allow a script\xa0to be called from the Client API, even if it didn\'t have the appropriate permission.\\r\\n\\r\\nThis defect has been addressed.\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe have made the following improvements to the Portal:\\r\\n\\r\\n**Design**\\r\\n\\r\\n- **Integrations | Manage Integrations**\\r\\n    - Removed _Parse Integration_ since Parse no longer exists.\xa0You can still import Parse data exports via the **Global Monitoring | Global Entities** screen though.\\r\\n- **Leaderboard | Leaderboard Configs**\\r\\n    - Monthly and Yearly rotation types available for tournaments again\\r\\n    - The **Phases** tab\xa0now defaults to show how the phase changes affect the _next_ tournament cycle\\r\\n    - To change the currently active tournament, choose _\\"Active Cycle\\"_ from the combo-box, and then click the red **[Apply to Live Tournament! (Danger)!]** button.\\r\\n\\r\\n**Monitoring**\\r\\n\\r\\n- **Global Monitoring | Global Entities**\\r\\n    - Revised the Global Entities list screen to be more useful\\r\\n        - Create entities by clicking on the [+] button\\r\\n        - Quickly duplicate entities by choosing _Clone_ from the new _Action_ menu\\r\\n        - Click on an entity _owner_ to jump to that user in User Monitoring\\r\\n    - Enhanced Global Entity Editor dialog\\r\\n        - Quickly choose an entity type from a list of used types\\r\\n        - Retrieve example JSON by clicking on the **[ { Retrieve Example } ]** button\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes / Fixes\\r\\n\\r\\nThe following changes/additions have affected the brainCloud API:\\r\\n\\r\\n- **Async Match**\\r\\n    - [Fixed] [FindMatches()](/api/capi/asyncmatch/findmatches) and [ReadMatch()](/api/capi/asyncmatch/readmatch) APIs now return the user\'s latest profile pic URLs instead of the pic that was captured at the time the match was created.\\r\\n- **Authentication**\\r\\n    - [Fixed] [ResetEmailPassword()](/api/capi/authentication/resetemailpasswordwithexpiry) in the JavaScript and AS3 libraries\xa0no longer require an authenticated session to work. D\'uh!\\r\\n- **General**\\r\\n    - APIs that can return rewards-related results (i.e. Authentication, GetPlayerState, IncrementXP, etc.) are no longer returning a redundant XP `reward` section. _Note - a new compatibility flag has been introduced to preserve the old functionality. The flag, **[x] Send obsolete reward field content in XP level up rewards results**, defaults to enabled for existing apps._\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Important Fixes\\r\\n    - See the _Cloud Code Security Fix_ description in _Release Highlights_\\r\\n    - Now deleting _canceled_ cloud code jobs properly (and automatically!)\\r\\n    - Improved reliability for the **[Login as User]** button on the **User Monitoring | User Summary** page\\r\\n- Updated libraries\\r\\n    - The AS3 and Flash libraries have been updated to incorporate the ResetEmailPassword() fix.\\r\\n    - Otherwise, the client libraries have not been affected by this release.\\r\\n- Plus miscellaneous fixes and performance enhancements"},{"id":"/2017/03/10/release-3-3-0","metadata":{"permalink":"/braincloud-apiref/release/2017/03/10/release-3-3-0","source":"@site/release/2017-03-10-release-3-3-0/index.md","title":"Release 3.3.0","description":"A small but mighty release :)","date":"2017-03-10T00:00:00.000Z","formattedDate":"March 10, 2017","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":3.685,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 3.3.0","date":"2017-03-10","tags":["release-history"]},"prevItem":{"title":"Release 3.4.0","permalink":"/braincloud-apiref/release/2017/04/06/release-3-4-0-coming-soon"},"nextItem":{"title":"(Minor) Release 3.2.5","permalink":"/braincloud-apiref/release/2017/02/10/minor-release-3-2-5"}},"content":"A small but mighty release :)\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Leaderboard Rewards\\r\\n\\r\\nIn 3.2 we added [Global Tournaments](/blog/2017/01/30/introducing-global-tournaments/) - which build upon brainCloud leaderboards\xa0to add support for opt-in tournament play.\xa0Our tournament feature is extremely\xa0flexible - with support for paid tournaments, variable tournament durations, configurable tournament phases, push notifications, and more.\\r\\n\\r\\nBut what if you would like to simply add the reward capabilities from Tournaments to your game\'s _existing leaderboards_ -\xa0without all the code + presentation changes that go along with it?\\r\\n\\r\\nWe have good news.\xa0We are happy to present two new\xa0tournament features\xa0that work together to fulfill this mandate:\\r\\n\\r\\n- _Auto Join_ - allows players to join a tournament simply by posting a score to the associated leaderboard. Note that Auto Join only works for _free_ tournaments, of course.\\r\\n- _Auto Claim_ - automatically awards the player their prizes when a\xa0tournament completes.\\r\\n\\r\\nFor more information, see the _Auto Join_ and _Auto Claim_\xa0features in our updated [Tournament](/api/capi/tournament/) documentation.\\r\\n\\r\\n### **Deployment Improvements**\\r\\n\\r\\nWe have made several improvements to our _Push Button Deployment_ process - which allows you to\xa0easily push the configuration\xa0of your app (including scripts and global files) from your development app\xa0to your production app.\\r\\n\\r\\nImprovements to this process include:\\r\\n\\r\\n- Better support for large volumes of custom files\\r\\n- More reliable\xa0versioning of the custom files\\r\\n- New option to _Exclude Integration Settings_ during a deployment\\r\\n\\r\\nAs always, the Deployment tool is available in the portal under [**Design | Core App Info | Admin Tools**](https://portal.braincloudservers.com/admin/dashboard#/development/core-settings-tools).\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Notice Banners\\r\\n\\r\\nWe have updated our portal to\xa0allow us to display\xa0banners with information about upcoming events (release updates, scheduled maintenance, etc.). We will of course use these banners in\xa0conjunction with our email notices and the [brainCloud Service Status](http://braincloud.statuspage.io) page.\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nThe following screens have been changed:\\r\\n\\r\\n### Design section\\r\\n\\r\\n- **Core App Info | Application Ids**\\r\\n    - The _[x] Show Game Design Features_ toggle is back! (It was lost, but now it is found.)\\r\\n- **Core App Info | Advanced Settings**\\r\\n    - There are 3 new compatibility options - these\xa0first two default to \\"on\\" for existing apps, \\"off\\" for new apps\\r\\n        - _Do not reprocess currencies for non-consumable IAP products in receipts_\\r\\n        - _Send obsolete reward field content in XP level up rewards results_\\r\\n    - But this flag only relates to _Auto Claim_, and thus is off for all apps by default\\r\\n        - _Enable Tournament Auto Claim check at login_\\r\\n- **Cloud Code | API Explorer**\\r\\n    - We\'ve added the ability to easily discover and invoke scripts from _Peer_ and _Parent_ services\\r\\n    - Now you\'ll see an individual Service entry for each Peer\xa0or Parent service\xa0associated with your app\\r\\n- **Custom Config | Files**\\r\\n    - Added a new column to display the version of the file. We\'ve also improved our handling of new file versions, to make updating files (with automatic propagation to the CDN) more reliable\\r\\n- **Leaderboards | Leaderboard Configs**\\r\\n    - Added the new _Auto Claim_ and _Auto Join_ feature\xa0settings to the Tournament tab page\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the brainCloud API:\\r\\n\\r\\n- **GlobalEntity**\\r\\n    - Added a new Cloud-code only [UpdateSystemEntity()](/api/capi/globalentity/updatesystementity) method to allow updating of the contents of a system entity, regardless of its ACL permissions. This is especially useful for system entities that . \xa0_[Reminder - SystemEntities are simply GlobalEntities that do not have an owner. The advantage being that they are not automatically deleted if the owner\'s profile is deleted.]_\\r\\n    - Also added an [UpdateSystemEntityACL()](/api/capi/globalentity/updatesystementityacl) method that likewise, allows the developer to\xa0over-ride the ACL of a SystemEntity. This code is also Cloud-code only for security reasons.\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - There are no new client APIs in this release - and thus, no new libs to download!\\r\\n- Documentation updates\\r\\n    - We have added error handling examples to the C# sections of the Authentication documentation\\r\\n- Important Fixes and optimizations\\r\\n    - We have improved the performance of the\xa0[UpdateAttributes()](/api/capi/playerstate/updateattributes) operation of the _PlayerState_ service\\r\\n    - We have fixed a race condition that under certain circumstances\xa0could\xa0award double currencies for Facebook purchases\\r\\n    - We have fixed the json outputted during reward handling for XP level-ups - the returned json no longer includes the redundant \\"reward\\" section.\xa0Note - the _[x] Send obsolete reward field content in XP level up rewards results_ compatibility flag preserves the old behaviour in case your app requires it.\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2017/02/10/minor-release-3-2-5","metadata":{"permalink":"/braincloud-apiref/release/2017/02/10/minor-release-3-2-5","source":"@site/release/2017-02-10-minor-release-3-2-5/index.md","title":"(Minor) Release 3.2.5","description":"What\'s smaller than a Release, but bigger than a Patch?","date":"2017-02-10T00:00:00.000Z","formattedDate":"February 10, 2017","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":4.34,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"(Minor) Release 3.2.5","date":"2017-02-10","tags":["release-history"]},"prevItem":{"title":"Release 3.3.0","permalink":"/braincloud-apiref/release/2017/03/10/release-3-3-0"},"nextItem":{"title":"Release 3.2.0","permalink":"/braincloud-apiref/release/2017/01/25/release-3-2-0"}},"content":"_What\'s smaller than a Release, but bigger than a Patch?_\\r\\n\\r\\n# (Minor) Release 3.2.5\\r\\n\\r\\nRelease 3.2.5 includes some key new optimizations, fixes and even a few _minor_ features.\\r\\n\\r\\n_Note - This is a minor update to [brainCloud\xa03.2](/release/2017/01/25/release-3-2-0/) - be sure to check it\'s [release notes](/release/2017/01/25/release-3-2-0/) for the full update on all the great 3.2 features._\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Optimizations\\r\\n\\r\\n### _Faster User Entities_\\r\\n\\r\\nWe have significantly optimized the [UpdateSingleton()](/api/capi/entity/updatesingleton)\xa0API call by eliminating\xa0a superfluous read operation from most usage scenarios. To achieve this, we had to remove some unnecessary fields from the API\'s JSON return.\\r\\n\\r\\nAs per our custom\xa0we\xa0_by default_ preserve compatibility. To fully gain the advantages of this optimization, confirm that your app isn\'t making use of the `entityId`, `acl`, `createdAt`\xa0and `updatedAt`\xa0fields that were previously returned\xa0- and then go to the **Design | Core App Info | Advanced Settings** page, _Compatibility Settings_ section - and uncheck the _[ ] Include entityId+ in UpdateSingleton Api output_ option.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### _**Fast Log Processing**_\\r\\n\\r\\nThe continued growth of our platform causes us to continually re-look at our architecture and framework to ensure that we get the best performance. In this last growth spurt, the logging system came under scrutiny as the source of some slowdowns. We\'ve made some incremental changes to improve this - improved batching of writes, and capping the amount of request data logged for some API calls. We have plans to do more in the future.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### **_Faster Segment-based Push Notifications_**\\r\\n\\r\\nOur User Segments feature is very\xa0useful for\xa0targeting push notifications - and some of you are taking great advantage of that, sending notifications to millions of customers daily. That said, not every user enables push notifications - and our segments weren\'t recognizing that before.\\r\\n\\r\\nTo address this, we\'ve added a new _Push Enabled_\xa0_Segment Criteria_. \xa0If you configure this criteria for a _segment_, it will ensure that all members actually have push notification tokens registered. That way brainCloud isn\'t wasting time chugging through a million records, when only 300,000 of your users have enabled push.\\r\\n\\r\\nNote - to take advantage of this performance optimization, go to **Design | Segmentation | Segments**\xa0page, select a segment, and add the **Push Enabled** critera to it.\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Minor Features\\r\\n\\r\\n### _**Unsubscribe from Tournaments**_\\r\\n\\r\\nYour users can now unsubscribe from tournament mailings. Required legally for many locales. Just include include the code `-unSubUrl-` in your SendGrid email template, and\xa0it will be replaced with a custom unsubscribe URL for that user.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### _**Client Kill Switch**_\\r\\n\\r\\nThis is more of a feature for us than you :).\\r\\n\\r\\nRecently we\'ve had a uptick in apps that _endlessly\xa0retry_ an operation if an error occurs. This is considered bad client behaviour. The brainCloud libraries themselves automatically retry on a timeout and/or communications failure (they will retry 3 times before returning an error to you). If, however, we receive a 4xx or 5xx error from the server, we return it to the app - because that\xa0means that the server is unable to perform the request as formed (possibly bad parameters, bad server data, etc.)\\r\\n\\r\\nIn these cases, if you retry the operation as before, there is a 99.999% chance you will get the same error! Implementing an endless retry in your code is akin to DDOS-ing our servers! And it costs you API calls to boot!\\r\\n\\r\\nSo - we\'ve implemented a way to stop you! Now, if your client app sends in the same erroneous requests ten times in a row, the client will stop actually sending the requests, and return an immediate error to your client app.\xa0This \\\\*might\\\\* cause an endless loop in your app - so once again - don\'t do this! [Note - most mobile OSes will kill the app as soon as the loop is discovered]\\r\\n\\r\\n\xa0\\r\\n\\r\\n### _**Slow Errors**_\\r\\n\\r\\nStill on the topic of endless error loops (see above), brainCloud will now\xa0intentionally delay sending error responses back to the client. It\'s not a huge delay (1/2 a second) - but that can make a significant difference in\xa0the rate that a client can automatically retry - and thus the impact on our servers. This delay is applied _per bundle_, _only if all the messages in a bundle have errors_.\\r\\n\\r\\n_Note - this delay is tuneable per app. If it is negatively impacting your app, reach out to us and we can adjust it._\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Miscellaneous Fixes\\r\\n\\r\\nWe\'ve also include the following fixes:\\r\\n\\r\\n- _**Merging with Peer Profiles**_ - we\'ve fixed some issues associated with merging of profiles that are associated with Peer Profiles\\r\\n- _**Reading Leaderboard Configs**_ - the read routines are now much-more robust\\r\\n- _**Incoming Events**_\xa0- we\'ve removed the unnecessary gameId field from all incoming event calls. Note - for compatibility reasons, the change only takes effect if the _[ ]\xa0Generate Legacy Event Ids_ compatibility flag is unset.\\r\\n- _**Tournament Phases**_ - the display and configuration of Tournament Phases on the Leaderboard Config dialog and Leaderboard Monitoring pages has been improved.\\r\\n- _**Facebook Purchases**_ - we fixed an issue\xa0associated with the latest changes to Facebook\'s Purchase APIs.\\r\\n- _**Push Notification Tokens**_ - are now properly removed when players are deleted.\\r\\n- _**Cloud Code Jobs**_ - scheduled jobs are now editable again via the **Monitoring | Global Monitoring | Job Queue** page."},{"id":"/2017/01/25/release-3-2-0","metadata":{"permalink":"/braincloud-apiref/release/2017/01/25/release-3-2-0","source":"@site/release/2017-01-25-release-3-2-0/index.md","title":"Release 3.2.0","description":"We\'re pleased to present brainCloud 3.2 - arguably\xa0our biggest releases ever!","date":"2017-01-25T00:00:00.000Z","formattedDate":"January 25, 2017","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":21.59,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 3.2.0","date":"2017-01-25","tags":["release-history"]},"prevItem":{"title":"(Minor) Release 3.2.5","permalink":"/braincloud-apiref/release/2017/02/10/minor-release-3-2-5"},"nextItem":{"title":"Release 3.1.0","permalink":"/braincloud-apiref/release/2016/10/18/release-3-1"}},"content":"We\'re pleased to present brainCloud 3.2 - arguably\xa0our biggest releases ever!\\r\\n\\r\\n_Note - as always, we have worked very hard to ensure that this update does not break your apps. Scroll to the bottom of this page for a summary of the bigger changes, any recommended actions, and\xa0how to confirm the stability of your apps._\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Feature Highlights\\r\\n\\r\\n### Global Tournaments\\r\\n\\r\\nbrainCloud\'s new **Global Tournaments** feature is an entirely new system designed to amplify player engagement in your games.\\r\\n\\r\\n_Global Tournaments_ are suitable for any game where competition centers around _leaderboards_. In fact, in their simplest form, _Global Tournaments_ can be thought of simply as _prize rules_\xa0added to\xa0a _leaderboard_.\\r\\n\\r\\nThe power\xa0of brainCloud\'s tournament system\xa0comes from how flexible they are, coupled with how much they do for you. Features include:\\r\\n\\r\\n- Free or Paid - brainCloud collects the entry free for you\\r\\n- Flexible Prizes - award any combination of currencies, xp, stats and achievements - brainCloud handles it all\\r\\n- Tournament Cycles - set your tournament to daily, weekly, monthly or an arbitrary number of days\\r\\n- Tournament Phases - optionally have an exclusive registration vs. play phase - and set up downtime between tournaments\\r\\n- Notifications - both Push and Email-based notifications - automatically sent by brainCloud throughout the tournament cycle\\r\\n- Portal Support - configure tournament templates and attach them to leaderboards. And then view tournament results straight from the Leaderboard monitoring screens\\r\\n- _New Tournaments API_\xa0- for fine control of displaying tournament information, handling player enrollment, recording player scores, and claiming awarded prizes\\r\\n\\r\\nAnd of course you can use brainCloud Global Tournament features as building blocks for more advanced tournament variations - for example tournaments brackets.\\r\\n\\r\\n_Warning - adding a Tournament Template to an existing Leaderboard changes the API required to interact with it (for example, you can no longer post a score to a leaderboard before joining it). For this reason, we do NOT recommend adding tournaments to existing leaderboards in live games._ \\r\\n\\r\\nFor more information, check out our new [Tournament API](/api/capi/tournament).\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Peer Services [Beta]\\r\\n\\r\\nAnother big feature of this release is brainCloud\'s new Peer Services system.\xa0This framework\xa0allows the services of one app (the _Peer Service_) to be used by other\xa0apps (_Peer Clients_). Peer Services can even be public, so that its services can be leveraged by\xa0other\xa0teams!\\r\\n\\r\\nThis provides a whole new level of code/service re-use in brainCloud, including allowing new service integrations to be added to brainCloud directly by third party developers. This has the potential to really open up the brainCloud ecosystem, to the benefit of the entire brainCloud community.\\r\\n\\r\\nInitially we see\xa0this being used in two primary scenarios:\\r\\n\\r\\n- _Sponsored Integrations_ - this mechanism allows brainCloud partners to easily build integrations on our platform, and offer them\xa0for your use.\\r\\n- _Private\xa0Services_ - development teams that are building lots of apps can more easily group common functionality into a separate app who\'s services are leveraged across the others.\\r\\n\\r\\nVery soon we hope to add support for\xa0_Community\xa0Services_ as well - where developers in the brainCloud community can offer up peer service components to be used freely by others. We need to do a bit more work on our API tracking for that to work effectively, since in that scenario we would want the API counts for the services usage of brainCloud to be accounted for\xa0by the peer clients, not by developer who created the free peer app.\\r\\n\\r\\n_Note - we\'ll be introducing our first sponsored Peer Service very soon - stay tuned!_\\r\\n\\r\\n\xa0\\r\\n\\r\\n### **Cloud Code Enhancements**\\r\\n\\r\\n[![](images/2017-01-22_22-37-27-1024x334.png)](images/2017-01-22_22-37-27.png)\\r\\n\\r\\nFinally, we\'ve made some significant enhancements to our cloud code system to make writing scripts easier.\xa0Changes include:\\r\\n\\r\\n- **No more Script Types** - We have eliminated the confusing concept of \\"script types\\". Now, a script is a script is a script\\r\\n- **[New] Script Permissions** - scripts are now\xa0individually configured to be\xa0callable from the _Client API_, the _Server-to-Server (S2S) Interface_, and/or _Peer Clients_. All scripts are callable from other scripts.\\r\\n- **Three bridges, one consistant\xa0interface**\xa0- depending upon how your script is called, you will get one of three bridges. _Client Bridge_ (for calls from the client api and/or API hooks), _Server Bridge_ (for scheduled scripts and those from S2S api) and _Peer Bridge_ (special case for calls to peer scripts from peer clients). The APIs for these bridges has been normalized, so you no longer have to call special S2S versions of the proxy methods from the Server bridge. (i.e. getScriptServiceProxy() now works from all of them - though getS2SScriptServiceProxy() still works from the Server Bridge for compatibility).\\r\\n- **Normalized Proxies**\xa0- If you use methods in the proxy that are not implemented in the particular mode (Client/Server), the script will throw a not-implemented exception.\\r\\n- **Global Properties access**\xa0- new [getGlobalProperty()](/api/cc/bridge/getglobalproperty) method\xa0allows you to easily use global properties in scripts. No more\xa0magic values copied across scripts - simply define the value in\xa0**Design | Custom Config | Global Properties**\xa0for use.\\r\\n- **New Documentation menu**\xa0- the Cloud Code Editor now contains its own version of the Docs menu for easy reference.\\r\\n- **Save Deleted Scripts**\xa0-\xa0we now continue to save a scripts version history even if you delete the script. So if you accidentally delete a script, just create a new one with\xa0the same name - and then restore the old version of the script\xa0from history!\\r\\n\\r\\n\xa0\\r\\n\\r\\n_Compatibility - All of these changes are backwards-compatible, so your scripts **should** keep working as per usual.\xa0An exception might\xa0be if your script was using exception-handling to test for previously unsupported\xa0bridge methods - since unsupported methods are now present, your script(s) may require some quick adjustments._\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nIn addition to the changes you would expect to support Tournaments and Peer s\xa0expected changes to support Tournaments and Peer Services\\r\\n\\r\\n#### Design Section\\r\\n\\r\\n- **Core App Info | Advanced Settings**\\r\\n    - New compatibility feature settings\\r\\n        - \\"Allow Currency Calls from Client\\" - allows your apps to still directly manage currencies from the client (less secure). Enabled by default for existing apps.\\r\\n        - \\"Generate Legacy Event Ids\\" - we\'ve changed how event ids work this release. If your app already uses our event system, and you aren\'t yet updating to the new API, you\'ll want to keep this enabled.\\r\\n    - For more information on compatibility-related changes, see the API section\\r\\n\\r\\n- **Core App Info | Peer Publish [NEW!]**\\r\\n    - Used to publish your app as a Peer Service.\\r\\n\\r\\n- **Cloud Code | Scripts**\\r\\n    - New permissions!\\r\\n        - We\'ve refactored\xa0script permissions - and added\xa0a new one. Now\xa0all scripts can be set to be callable via any combination of Client API, S2S API, Peer API (callable from a peer client), or none at all (in which case the script is only callable from another script).\\r\\n        - These permissions are settable in the Script Editor, and viewable in the Scripts list\\r\\n        - _Compatibility: To ensure that we don\'t break existing apps, all scripts by default have the S2S permission set to \\"enabled\\". You should review and\xa0disable this permission for any scripts that don\'t need it._\\r\\n    - Editor _Docs_ menu\\r\\n        - A new Docs menu provides quick access to the cloud code API Reference, Tutorials, Knowledge Base and even a Javascript Syntax Search Engine (it\'s new - and we\'re going to help to update it)\\r\\n\\r\\n- **Cloud Code | API Hooks**\\r\\n    - Now allows you to specify hooks to be run when an API call fails (the default hook only triggers upon success).\\r\\n\\r\\n- **Cloud Code | S2S Explorer**\\r\\n    - Now only lists scripts that have the S2S permission set to true\\r\\n\\r\\n- **Integrations | Peer Services [NEW!]**\\r\\n    - Used to connect your app to a Peer Service.\\r\\n\\r\\n- **Leaderboards | Leaderboard Configs**\\r\\n    - Enhanced to support _Tournaments_. You create a tournament by attaching a tournament template to a Leaderboard.\\r\\n    - We also added a new _Days_ rotation - that lets you rotate your leaderboard every <x\\\\> days\\r\\n\\r\\n- **Leaderboards | Tournament Templates [NEW!]**\\r\\n    - New screen for creating tournament templates\\r\\n\\r\\n- **Marketplace | Products**\\r\\n    - Enhanced to allow you to\xa0define products that include Peer Currencies.\\r\\n\\r\\n- **Marketplace | Virtual Currencies**\\r\\n    - Added support for Peer Currencies\\r\\n\\r\\n\xa0\\r\\n\\r\\n#### Monitoring Section\\r\\n\\r\\n[![](images/2017-01-19_21-57-14-1024x387.png)](images/2017-01-19_21-57-14.png)\\r\\n\\r\\n- **Global Monitoring\xa0| Leaderboards**\\r\\n    - The Leaderboards\xa0monitoring screens have been enhanced to support tournaments. These features are only shown for leaderboards that have one or more Tournament Templates attached to them:\\r\\n        - Tournament Schedule - click on the Trophy near the top of the screen\\r\\n        - Tournament Column - shows which tournament a player is enrolled in.\xa0Clicking shows additional information about what prize that player may / has won, and if it has been claimed.\\r\\n\\r\\n- **Global Monitoring\xa0| Job Queue**\\r\\n    - Enhanced to support Tournament Jobs for processing tournament results and sending tournament notifications\\r\\n\\r\\n- **Global Monitoring\xa0| Global Monitoring | Recent Logs**\\r\\n    - We\'ve modified the UI behaviour of this screen somewhat. Instead of the screen automatically refreshing as you change filter settings (which caused problems when the log was long and lagging) - you now can change multiple settings, and refresh the list at once via the **[Refresh]** button\\r\\n    - The response logs are now being truncated if they are too large.\xa0The new\xa0maximum log response\xa0that will be stored for viewing is 10Kb.\\r\\n\\r\\n- **User Monitoring | User Summary**\\r\\n    - Peer relationships show up in the relationships section\\r\\n\\r\\n- **User Monitoring | Virtual Currency**\\r\\n    - This screen now shows parent currencies and peer currencies when applicable.\\r\\n\\r\\n- **User Monitoring | Logs**\\r\\n    - The response logs are now being truncated if they are too large.\xa0The new\xa0maximum log response\xa0that will be stored for viewing is 10Kb.\\r\\n\\r\\n\xa0\\r\\n\\r\\n\xa0\\r\\n\\r\\n#### Reporting Section\\r\\n\\r\\n- **API Usage**\\r\\n    - Added a new _Bulk Operations_\xa0count. brainCloud will utilize this category for\xa0API calls where a single count doesn\'t effectively account for the load on our\xa0servers. For example, for Tournament Processing, we charge one bulk API count per player in the tournament (charged during award processing).\\r\\n\\r\\n\xa0\\r\\n\\r\\n#### Team Section\\r\\n\\r\\n- **Home**\\r\\n    - We\'ve added a link to our new\xa0[Knowledge Base](http://help.braincloudservers.com) to the docs section of the page.\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Programming/API Changes\\r\\n\\r\\nThe following changes/additions have affected the brainCloud API:\\r\\n\\r\\n- **Client (behaviour change)**\\r\\n    - As you may or may not know, the brainCloud client libraries automatically\xa0package multiple server requests [sent within a short period of time] into _bundles_\xa0to be processed at the server. This both reduces network traffic and minimizes server utilization. Up until brainCloud 3.2, the\xa0client libraries were statically configured to allow up to 50 messages in a bundle [a crazy high number in hind-sight!]\\r\\n    - In general this approach works very well - and\xa0to be fair - the average bundle size is probably 2-3 messages for the average app.\\r\\n    - However - we\'ve had a few instances where client applications get into endless loops - where the same message is being stuffed into the bundles over-and-over. In those cases, sending 50 messages at a time - especially if those messages are something heavy like leaderboard requests - can generate an unsettling\xa0amount of server load!!! :)\\r\\n    - As of 3.2 and moving forward, this limit is now controlled\xa0by the server,\xa0and\xa0enforced by the 3.2 client libraries. We will initially be setting the limit to 10, but we may notch it down a bit more if\\r\\n    - _Compatibility\xa0- this change has no impact on your app until you move the to 3.2 client libraries, which we \\\\*do\\\\* highly recommend._\\r\\n\\r\\n\xa0\\r\\n\\r\\n- **Cloud Code**\\r\\n    - We have done some reworking of our cloud code system to make it easier to write scripts that can be called any way that you would like - from the client, from another server (s2s), from a peer app, or from another script\\r\\n    - _Removed\xa0the concept of\xa0Script Types_ - there are no longer client and server script types. A script is a script is a script. And any script can be called from any other script. (_Note - scripts do still work within different environments - see the bridges section_)\\r\\n    - _Replaced with Permissions_ - all scripts now have\xa0a collection of distinct, independent permissions\\r\\n        - Client - scripts with client permission can be called from client libraries\\r\\n        - S2S - scripts with the s2s permission can be called from the Server-to-Server (S2S) API\\r\\n        - Peer - scripts withe peer permission can be called from peer client apps\\r\\n    - _Compatibility - to ensure compatibility with existing apps, all apps that were configured as \\"client scripts\\" before are now set with Client permission enabled. In addition, the S2S script defaults to true for all existing scripts. For maximum security, you should review your scripts and disable the S2S permission for any scripts that don\'t require it._\\r\\n\\r\\n\xa0\\r\\n\\r\\n- **Cloud Code Bridge(s)**\\r\\n    - _About Bridges_\xa0- when you run a script, at runtime it gets associated with one of three (3) bridges. Scripts called from the client API get a _Client Bridge_ - which is associated with a user session (and has access to their profile, etc). Scripts called from S2S, or from scheduled jobs and webhooks, get the _Server Bridge (which doesn\'t have an associated user session)_. And scripts run in a peer app get the new _Peer Bridge_, which can access both a client session and potentially a peer session (if the peer app has profiles).\\r\\n    - _Bridge Refactoring_ - we have refactored our bridges a bit to make the interfaces between them the same. So now, if you try to access a method like getProfileId() that only makes sense in the client context, instead of getting a method-not-found error you\'ll receive null instead.\\r\\n    - _New Convenience Methods_ - we\'ve added some new methods to make writing scripts simpler. Some of the more useful methods include (methods with \\\\* indicate client context only):\\r\\n        - [callScript()](/api/cc/bridge/callscript) - a simpler method for calling another script from within a script\\r\\n        - [getAppId()](/api/cc/bridge/getappid) - a method to get the appId of your app (useful in certain situations)\\r\\n        - [getClientAppId()](/api/cc/bridge/getappid) - useful in peer scripts to get the app id of the calling app\\r\\n        - [getGlobalProperty()](/api/cc/bridge/getglobalproperty) \\\\- used to retrieve one of the global properties that you\'ve defined in **Design | Custom Config | Global Properties**. _**No more hard-coding magic values in scripts!**_\\r\\n        - [getEmail()](/api/cc/bridge/getemail)\\\\* - get the email of the user\\r\\n        - [getName()](/api/cc/bridge/getname)\\\\* - get the name of the user\\r\\n        - [getProfileId()](/api/cc/bridge/getprofileid)\\\\* - get the profileId of the user\\r\\n        - [isClientBridge()](/api/cc/bridge/isclientbridge) - returns true if the bridge is a client bridge\\r\\n        - [isPeerBridge()](/api/cc/bridge/ispeerbridge) - returns true if the bridge is a peer bridge\\r\\n        - [isServerBridge()](/api/cc/bridge/isserverbridge) - returns true if the bridge is a server bridge\\r\\n\\r\\n\xa0\\r\\n\\r\\n- **Event**\\r\\n    - Working on our the new Tournaments feature gave us an excuse to make some much-needed improvements to our Event System\\r\\n    - We\xa0have\xa0made things faster and more reliable - but in doing so we have changed how we handle event ids\\r\\n    - The new APIs use in evId instead of the old eventId. This id is mostly used when deleting events. All other data about an event remains the same.\\r\\n    - There are new versions of [DeleteIncomingEvent()](/api/capi/event/deleteincomingevent) and [UpdateIncomingEventData()](/api/capi/event/updateincomingeventdata).\\r\\n    - The\xa0old eventId will still be generated (for compatibility purposes) if the \\"[x] Generate Legacy Event Ids\\" flag is set on the **Design | Core App Info | Advanced Settings** page. That option is enabled by default.\xa0The old methods are deprecated, but are still available on the client, and work as long as the compatibility option is enabled.\\r\\n\\r\\n\xa0\\r\\n\\r\\n- **Friend**\\r\\n    - [GetProfileInfoForExternalAuthId()](/api/capi/friend/getprofileinfoforexternalauthid) -\xa0Allows you to\xa0look up users via a custom authentication type\\r\\n    - [GetProfileInfoForCredential()](/api/capi/friend/getprofileinfoforcredential) - A new version of the now-deprecated GetFriendProfileInfoForExternalId() - a bit better named, and returns an error if the profile cannot be located.\\r\\n    - [FindPlayerByUniversalId()](/api/capi/friend/finduserbyexactuniversalid) - now returns the users universal\xa0id (in field externalId) with the results\\r\\n\\r\\n\xa0\\r\\n\\r\\n- **Global Entity**\\r\\n    - Background: Global Entities, by default, each have an owner - the user that created them. If the owner of an global entity is deleted, the entity will be deleted as well. This is not desirable in all cases\xa0- so we\'ve created some methods to adjust the ownership of global entities.\\r\\n        - [MakeSystemEntity()](/api/capi/globalentity/makesystementity) - changes a global entity to \\"unowned\\" - and thus it won\'t be deleted when a user is deleted.\\r\\n        - [UpdateEntityOwnerAndACL()](/api/capi/globalentity/updateentityownerandacl) - changes the owner of a global entity to another user.\\r\\n\\r\\n\xa0\\r\\n\\r\\n- **Identity**\\r\\n    - Background - we\'ve added some methods to work with Peer Services.\\r\\n        - [AttachPeerProfile()](/api/capi/identity/attachpeerprofile) - attach a peer profile to this account (optionally creating it if it doesn\'t already exist)\\r\\n        - [DetachPeer()](/api/capi/identity/detachpeer) - detach the specified peer profile\\r\\n        - [GetPeerProfiles()](/api/capi/identity/getpeerprofiles) - returns the peer profile associated with the specified\xa0peer code\\r\\n\\r\\n\xa0\\r\\n\\r\\n- **Leaderboard**\\r\\n    - We\'ve extended [`GetGlobalLeaderboardView()`](/api/capi/leaderboard/getgloballeaderboardview) and [`GetGlobalLeaderboardPage()`](/api/capi/leaderboard/getgloballeaderboardpage) to return the player\'s profilePic if available. After all, why should social leaderboards have all the fun?\\r\\n    - [CreateLeaderboard()](/api/capi/leaderboard/createleaderboard) - has been extended to support the new <days\\\\> rotation\\r\\n    - [New!] [GetPlayerScore()](/api/capi/leaderboard/getplayerscore) - returns the players score from the leaderboard. Note does _not_ return the players rank.\\r\\n    - [New!] [GetPlayerScoresFromLeaderboards()](/api/capi/leaderboard/getplayerscoresfromleaderboards) - returns the score for the current player from a set of leaderboards\\r\\n    - [New!] [RemovePlayerScore()](/api/capi/leaderboard/removeplayerscore) method - replaces ResetScore(), which we are deprecating\\r\\n    - 3.2 Client libraries are now updated to use _leaderboard_\xa0service id instead of _socialLeaderboard_. If for some reason your callbacks are triggering off of the _socialLeaderboard_ service id, you\'ll need to make adjustments.\\r\\n    - _**New restriction:**_ We are now limiting the maximum number of leaderboard entries that can be requested in a single page using GetGlobalLeaderboardPage(). If your request exceeds the limit we just adjust it within the limits (beginning from the lower index). The new immediate limit will be 100 entries, but we plan to further reduce that to 50 entries beginning February 15th.\xa0_This constant is\xa0tweakable per\xa0app so contact us if you need us to temporarily adjust that for you._\\r\\n    - _**API Change - Leaderboard Size:**_ We are removing the <getLeaderboardSize\\\\>\xa0field from [GetGlobalLeaderboardPage()](/api/capi/leaderboard/getgloballeaderboardpage). Unfortunately it is an expensive operation that many\xa0clients set to true, but often were not using (and certainly doesn\'t need to be individually retrieved per page). We\'ve replaced this operation with a separate calls, [GetGlobalLeaderboardEntryCount()](/api/capi/leaderboard/getgloballeaderboardentrycount) and [GetGlobalLeaderboardEntryCountByVersion()](/api/capi/leaderboard/getgloballeaderboardentrycountbyversion). _**Compatibility: The\xa0old API will continue to work for earlier client libraries. The change is effective starting in client library 3.2 and greater.**_\\r\\n\\r\\n\xa0\\r\\n\\r\\n- **Product**\\r\\n    - Security Improvements - we\'ve made some enhancements to the currency management methods of the Product API\\r\\n    - By default, the [AwardCurrency()](/api/capi/product/awardcurrency), [ConsumeCurrency()](/api/capi/product/consumecurrency) and [ResetCurrency()](/api/capi/product/resetcurrency) methods are no longer callable from the client. They are, however, callable from cloud code scripts - which is of course a lot more secure.\\r\\n    - Note that this security enforcement is controlled by a new compatibility option, \\"_[x] Allow Currency Calls from Client_\\" which defaults to \\"on\\" for existing apps.\\r\\n    - Note - we\'ve also made the AwardParentCurrency() and ConsumeParentCurrency() methods cloud code only - those weren\'t in use yet so we have removed them from the client directly.\\r\\n    - [GetCurrency()](/api/capi/product/getcurrency) now additionally returns parent and peer currencies\xa0for convenience\\r\\n\\r\\n\xa0\\r\\n\\r\\n- **Script**\\r\\n    - The script service has been enhanced to support Peer Services\\r\\n        - [RunPeerScript()](/api/capi/script/runpeerscript) - used to run a peer\xa0script\\r\\n        - [RunPeerScriptAsync()](/api/capi/script/runpeerscriptasync) - used to run a parent script asynchronously (without waiting for a response)\\r\\n\\r\\n\xa0\\r\\n\\r\\n- **S2S Script\xa0Proxy**\\r\\n    - We\'ve added the [ScheduleCloudScript()](/api/s2s/script/schedulecloudscript) method to the proxy, so that you no longer need to create a user session to schedule a script\\r\\n\\r\\n\xa0\\r\\n\\r\\n- **Tournament Service [NEW!]**\\r\\n    - Although Tournaments leverage our Leaderboard infrastructure, they add a whole new API for most operations (except for viewing leaderboard results).\\r\\n    - A quick summary of the new methods:\\r\\n        - [`GetTournamentStatus()`](/api/capi/tournament/gettournamentstatus) - gets the player\'s status in the specified tournament leaderboard. Essentially tells you whether the player is enrolled or not, along with information about the tournament.\\r\\n        - [`JoinTournament()`](/api/capi/tournament/jointournament) - join\xa0a tournament on the specified leaderboard\\r\\n        - [`LeaveTournament()`](/api/capi/tournament/leavetournament) - leave\xa0a tournament\\r\\n        - [`PostTournamentScore()`](/api/capi/tournament/posttournamentscoreutc) - post a score to the tournament. Note that you must have previously joined it.\\r\\n        - [`PostTournamentScoreWithResults()`](/api/capi/tournament/posttournamentscorewithresultsutc) - post a score to the tournament,\xa0and notify any displaced players if a bump them down a notch in the rankings. Note - this is a more expensive API call that has to perform a few leaderboard sorts to accomplish its features. Because of that, we charge 1 Bulk API call in addition when called. But we return the updated leaderboard results though - saving you one\xa0API call in return - so it all evens out! :)\\r\\n        - [`ViewCurrentReward()`](/api/capi/tournament/viewcurrentreward) - used to retrieve what a player might earn if they maintain this rank in the tournament. Note that this value is approximate, and doesn\'t take ties into account. So the player will get that reward or better!\\r\\n        - [`ViewReward()`](/api/capi/tournament/viewreward) - used to retrieve what a player actually one in a completed tournament.\\r\\n        - [`ClaimTournamentReward()`](/api/capi/tournament/claimtournamentreward) - claim the player\'s winnings! Automatically adjusts the player\'s balances, and returns the prize data that the player won.\\r\\n    - For more information, see\xa0the [Tournament section](/api/capi/tournament) of the API Reference.\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - General updates\\r\\n        - Now dynamically enforce the maximum # of messages per bundle. New limit is 10 messages per bundle.\\r\\n        - Authenticate message forced to be first\\r\\n    - C++ library overhauled to better handle the myriad of platforms that we support!\\r\\n    - Unity\xa0Client - now fully compatible with WebGL (no need to enable the development flag!)\\r\\n    - Action Script - major updates to the ActionScript library to bring them up in line with the other libraries\\r\\n\\r\\n- Demos\\r\\n    - brainCloud Bombers improvements -\xa0mucho updates, including support for Unity WebGL!\\r\\n\\r\\n- Documentation updates\\r\\n    - Updated\xa0Unity Tutorial Video\\r\\n\\r\\n- Important Fixes\\r\\n    - Global Properties - We are now limiting global properties to 500. This is mostly to ensure that folks don\'t use the facility for something that is better represented by\xa0Global Entities and/or Config Files.\\r\\n    - Deleting Scripts - when deleting a script, we no longer delete all archived versions of the script. That means that should you want to restore it, you can simply create a new script with the same name, and then browse it\'s history!\\r\\n    - Leaderboard Imports - fixed a scenario where importing a game config could cause the leaderboard rotation history to be overwritten.\\r\\n    - API Hooks for Errors - you can now configure\xa0an API hook to be called\xa0if\xa0a specific API call encounters an error. Previously API Post-hooks would only be called upon success\\r\\n\\r\\n- Plus miscellaneous fixes and performance enhancements...\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Compatibility Summary\\r\\n\\r\\nWe at brainCloud work very hard to ensure that our updates are backwards compatible with our existing community of apps.\\r\\n\\r\\nThat said, it is recommended that that you review your apps for any unexpected issues. The following steps are recommended:\\r\\n\\r\\n1. Read the release notes to get an understanding\xa0of what is changed\\r\\n2. Log into the Portal and check your apps logs for new errors (chose\xa0**Quick\xa0| Recent Logs** from the menu)\\r\\n3. Log into your app to do a quick sanity test\\r\\n\\r\\nIf you see any problems, please let us know right away. Click the chat button and we\'ll be online to help you ASAP!\\r\\n\\r\\n\xa0\\r\\n\\r\\n### API Calls\\r\\n\\r\\n- Leaderboard restrictions - the new maximum number of leaderboard entries allowed per request could have an impact on your app. If you are currently requesting > 100 leaderboard entries per call, the response will be truncated to just the first 100 entries.\\r\\n- Tournament\xa0API - note that attaching a Tournament Template to a Leaderboard changes the API required to interact with that leaderboard. Do not attach Tournaments to leaderboards that are currently live in production.\\r\\n- Events - the Event API has changed, but the compatibility flag is enabled by default - so existing applications should not be affected.\\r\\n- Product - The\xa0client-based currency management functions are deprecated, but still available from the Client Libraries.\\r\\n\\r\\n### Cloud Code Scripts\\r\\n\\r\\n- All existing scripts\xa0by default have the new \\"S2S\xa0callable\\" permission set to true. For optimal security, you should review your scripts and disable that permission for any scripts that do not require it.\\r\\n- The refactored bridge interfaces should be completely compatible with your old scripts - except, if maybe you were using the method-not-found exceptions in your scripts to determine how your script is being run - in which case a quick modification will be in order.\\r\\n\\r\\n### New 3.2 Client Library\\r\\n\\r\\n- Now enforcing server-controlled maximum bundle size - which is initially set to 10 messages (from the previously hard-coded 50)\\r\\n- Leaderboard size - the API for retrieving Global Leaderboard pages and views has changed, as you can no longer specify that you would like the leaderboard size returned as well. There are separate methods for that now.\\r\\n- Leaderboard response handling - the client libs have now been all converted to use the LEADERBOARD service name instead of SOCIALLEADERBOARD for all success and error handling. When updating to the new libraries, you may need to adjust your success and/or error handling routines accordingly\\r\\n- Leaderboard callbacks - all callbacks are now operating off of the _leaderboard_ service id instead of _socialLeaderboard_\\r\\n\\r\\n### Billing\xa0Notes\\r\\n\\r\\n- Tournaments - tournaments are available in all billing plans, and the basic charges work as you\'d expect (an API count per API call, push notification, email, etc.). There are two additions - at the end of the tournament, the system accrues 1 Bulk API count per participant. And there is 1 Bulk API call added for calls to PostTournamentScoreWithResults() to cover the additional processing.\\r\\n- Events - Apps with \\"Enabled checking for Incomfing Events with each API Message\\" will accrue a\xa01/2 bulk count per api call. \xa0This new pricing will come into effect on February 15th, 2017.\\r\\n- Sponsored Peer Apps - calls to Sponsored Peer Apps, including all processing that the Peer App performs, and even the invocations of the Peer\'s cloud code scripts from the client app, are free to the peer client. (The Sponsored Peer App covers those costs).\\r\\n- Community Peer Apps - community apps are the opposite. The Peer Client covers all usage costs, including calls made within the peer to service the requests from the Client App."},{"id":"/2016/10/18/release-3-1","metadata":{"permalink":"/braincloud-apiref/release/2016/10/18/release-3-1","source":"@site/release/2016-10-18-release-3-1/index.md","title":"Release 3.1.0","description":"New Sendgrid integration","date":"2016-10-18T00:00:00.000Z","formattedDate":"October 18, 2016","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":6.695,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 3.1.0","date":"2016-10-18","tags":["release-history"]},"prevItem":{"title":"Release 3.2.0","permalink":"/braincloud-apiref/release/2017/01/25/release-3-2-0"},"nextItem":{"title":"Release 3.0.0","permalink":"/braincloud-apiref/release/2016/08/29/release-3-0-0"}},"content":"## [![New Sendgrid integration](images/BC_TwitterPromo_3-1_SendGrid_1024x512.png)](images/BC_TwitterPromo_3-1_SendGrid_1024x512.png)\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\nHere is a list of all that is cool in brainCloud 3.1...\\r\\n\\r\\n### SendGrid integration\\r\\n\\r\\nbrainCloud has moved\xa0away from our legacy, bare-bones email support\xa0(which was Amazon SES-based) to an improved infrastructure that will provide some\xa0great new\xa0features today and in the future. We have been planning this for some time - largely because we want to deliver a solution that allowed for richer, more customizable communications for our community.\\r\\n\\r\\nAfter discussing with several of our key customers, we have chosen [SendGrid](http://sendgrid.com) for our replacement email delivery system due to its rich feature set and reasonable, straight-forward pricing model.\\r\\n\\r\\nCustomers already using our legacy email service will continue to be supported for the foreseeable future - but new apps under development will need to integrate with SendGrid for email delivery. We believe the capabilities of this new approach make the decision easy.\\r\\n\\r\\nThere are many advantages to this new system:\\r\\n\\r\\n- Configurable from and reply-to addresses (so your emails come from you, not us)\\r\\n- Full email statistics reporting (via the Sendgrid dashboard)\\r\\n- Custom templates (see below)\\r\\n- API-based Transactional Email (see below)\\r\\n\\r\\nThe great news is that SendGrid\'s pricing starts at free (up to 12,000 emails per month) - and ramps up very reasonably from there ($9.99 for 40,000 emails, $19.99 for 100,000 emails, etc.). Check out the full [SendGrid Pricing](https://sendgrid.com/pricing/) details here (be sure to scroll down to find the free option!).\\r\\n\\r\\nFor step-by-step instructions on integrating brainCloud with your SendGrid account, click [here](/learn/portal-tutorials/email-integration-sendgrid/)!\\r\\n\\r\\n_Note, we plan to add additional email integrations / features in the future - so feel free to contact us with your feedback and suggestions._\\r\\n\\r\\n\xa0\\r\\n\\r\\n### **Rich Email Templates**\\r\\n\\r\\nWith SendGrid support comes support for custom email templates - so you are no longer limited to the pre-formatted brainCloud emails that get sent for verifying a user\'s email address, resetting passwords, etc.\\r\\n\\r\\nSendGrid includes the following template features:\\r\\n\\r\\n- Drag & Drop Editor - quickly create or modify the template design via SendGrid\'s drag-and-drop editor. Add images and buttons - and customize fonts, colors and other formatting\\r\\n- Import HTML - designers can easily import and modify email template code using an HTML editor.\\r\\n- Custom content - use substitution tags to customize\xa0email content\\r\\n- Template library - manage all of your teamplates in one place, and manage multiple versions of a template - useful for updating branding, holiday messaging, etc.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Transactional\xa0Emails\\r\\n\\r\\nIn addition to using SendGrid for email authentication, brainCloud now supports a new [Mail Service API](/api/capi/mail) that allow you to send custom transactional emails directly to your users. So it is easy\xa0to send emails directly\xa0to users based on they\'re interactions with your app.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Updated Google Authentication\\r\\n\\r\\nWe\'ve updated our Google Authentication\xa0support to align with the latest Google libraries. As part of this feature, the Google integration portion of the **Design | Core App Info | Application IDs** screen has been updated to gather more Google configuration parameters.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Updates to Free Account Limits\\r\\n\\r\\nAs most of you\xa0know, brainCloud support up to 100 Daily Active Users while your app is In Development. After that, your apps logins are rejected until the next day (which begins at 0:00 UTC) - when the DAU resets back to zero. There is another\xa0limit associated with the \\"In Development\\" plan - and that is a maximum of 1000 lifetime user accounts. Up until now that\'s been more of a gentleman\'s agreement - in that we weren\'t actually enforcing it. As of Release 3.1, this limit is being enforced.\\r\\n\\r\\n_So, what if you\'ve been in development for a while and have inadvertantly exceeded your 1000 accounts?_\xa0The simplest fix is\xa0to delete some/all of your user/test accounts using the Data Deletion options at the bottom of the **Design | Core App Info | Admin Tools** page.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe\'ve made the following portal changes:\\r\\n\\r\\n- **Design | Core App Info | Application IDs**\\r\\n    - We\'ve added new fields\xa0to the\xa0**Google** tab of the **Configure Platforms** section. These new fields, _Google App Id_, _Google Client Id_, _Google Client Secret_ and _Google Authorization Redirect URI_ are important when\xa0adding Google Authentication to your app (using Google\'s latest libraries)\\r\\n- **Design | Authentication | Email Authentication**\\r\\n    - We\'ve reworked this feature to work with Sendgrid. Once you\'ve configured your SendGrid account, choose the (x) Use rich email service templates to switch to using custom templates that you define in SendGrid.\\r\\n- **Design | Integrations | Manage Integrations**\\r\\n    - Our\xa0new **SendGrid**\xa0integration has been added. Just sign-up for a free [SendGrid](http://sendgrid.com) account, and then enter your API key and such here, and you\'re all set to go.\\r\\n- **Monitoring | Global Monitoring | Recent Logs**\\r\\n    - Added a new \\"Sys Info\\" category\\r\\n- **Reporting | Analytics**\\r\\n    - We\'ve tweaked the platforms presentation to ensure that all platforms can be displayed properly\\r\\n- **General**\\r\\n    - The Login, Select Company, Registration and Forgot Password screens have been updated to the new look-and-feel\\r\\n    - Internet Explorer and Edge browsers are now blocked from using the portal. We used to give warnings but still allow the user through - but we\'ve had some pretty confusing support requests associated with those browsers - and feel its best for all parties just to not allow them.\\r\\n    - 2FA confirms - we\'ve added Authy OneTouch integration for some of our key confirmations (like when confirming whether an app should be deleted).\\r\\n    - Bouncing cloud - we have a new \\"working\\" gif to distract you when brainCloud is processing your requests!\\r\\n    - Cloud-code only api methods are now indicated by a new \\"secure\\" badge\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the brainCloud API:\\r\\n\\r\\n- **BrainCloudWrapper**\\r\\n    - [Reconnect()](/api/wrapper/reconnect) - a new method that makes it easy to re-establish a session to brainCloud, using the cached anonymousId and profileId of the most recent connection\\r\\n- **Authentication**\\r\\n    - New\xa0authentication error\xa0code - **UNKNOWN\\\\_AUTH\\\\_ERROR (40217)** - for when Authentication() fails, but it is not\xa0the fault of the passed in credentials (rather, it\'s an unexpected server error). The expected response would be to simply retry.\\r\\n- **Groups**\\r\\n    - The [ListGroupsPage()](/api/capi/group/listgroupspage) method now returns the `memberCount` of the groups that are returned.\\r\\n- **Leaderboards**\\r\\n    - [ListAllLeaderboards()](/api/capi/leaderboard/listallleaderboards)\xa0- returns a list of all of the leaderboards for an app.\\r\\n    - _Management APIs_ - note that these methods are only callable from cloud code.\\r\\n        - [CreateLeaderboard()](/api/capi/leaderboard/createleaderboard) - creates a new leaderboard.\\r\\n        - [EditLeaderboard()](/api/capi/leaderboard/editleaderboard) - updates an existing leaderboard definition.\\r\\n        - [DeleteLeaderboard()](/api/capi/leaderboard/deleteleaderboards) - deletes an existing leaderboard configuration, together with all versions and entries.\\r\\n- **Log Service**\\r\\n    - The [LogServiceProxy](/api/cc/bridge/getlogserviceproxy) has been added to S2S - so you can now send log messages from both\xa0client-context cloud code and S2S-based cloud code\\r\\n- **New Mail Service**\\r\\n    - [SendBasicEmail()](/api/capi/mail/sendbasicemail) - a quick and easy API for sending email messages to your users\\r\\n    - [SendAdvancedEmail()](/api/capi/mail/sendadvancedemail) - an advanced API that allows your app to take advantage of the richness of the email provider when sending email messages to your users\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All libraries have been updated with the latest API enhancements. Go get \'em!\\r\\n- Documentation updates\\r\\n    - We\'ve updated the docs to better describe\xa0the mechanisms for client apps to download files\\r\\n- Important Fixes\\r\\n    - Fixed: Parent scripts can now properly call other parent scripts\\r\\n    - Fixed:\xa0Added updated _User Entity_ methods that accept the entity version parameter (as expected and documented)\\r\\n    - Fixed: Added GetGlobalGameStatisticsServiceProxy() to the cloud code bridge\\r\\n- Performance improvements\\r\\n    - Improved performance for global leaderboard calls, especially if your app has multiple leaderboards\\r\\n    - Background Segment processing\xa0optimizations\\r\\n    - Performance improvements to the design portal for apps with large numbers of users (in particular, we were retrieving the list of recent added users much too often (unnecessarily))\\r\\n- Miscellaneous fixes\\r\\n    - All logged in platforms now show up on the User Monitoring | User Summary page (some were missing previously)\\r\\n    - brainCloud system emails now use rich html -- we\'re taking advantage of SendGrid too!\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2016/08/29/release-3-0-0","metadata":{"permalink":"/braincloud-apiref/release/2016/08/29/release-3-0-0","source":"@site/release/2016-08-29-release-3-0-0/index.md","title":"Release 3.0.0","description":"Release Highlights","date":"2016-08-29T00:00:00.000Z","formattedDate":"August 29, 2016","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":4.795,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 3.0.0","date":"2016-08-29","tags":["release-history"]},"prevItem":{"title":"Release 3.1.0","permalink":"/braincloud-apiref/release/2016/10/18/release-3-1"},"nextItem":{"title":"Release 2.26.0","permalink":"/braincloud-apiref/release/2016/07/13/release-2-26-0"}},"content":"## Release Highlights\\r\\n\\r\\n[![New Portal UI](images/ABNR_BCNewDesign_05.gif)](images/ABNR_BCNewDesign_05.gif)\\r\\n\\r\\n### New Portal UI\\r\\n\\r\\nBy far, the biggest change in\xa0this release is our updated navigation and look-and-feel for the brainCloud Design Portal.\xa0The four\xa0biggest changes are:\\r\\n\\r\\n- **Modern\xa0Look-and-feel** - a flatter, more contemporary\xa0look\\r\\n- **Simpler\xa0Navigation** - we have revamped our top-level navigation to make it\xa0simpler\\r\\n- **Docs\xa0Menu** - one-click access to our documentation, from any screen\\r\\n- **Quick Menu** - quick access to the most-used\xa0portal screens\\r\\n\\r\\nAnd we\'re not finished yet. There will be more improvements coming in future\xa0releases - we hope you like what you see!\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Enhanced\xa0Queries\\r\\n\\r\\nWe have significantly expanded upon the query syntax supported by the entity lookup routines.\\r\\n\\r\\nSo now you can do queries like:\\r\\n\\r\\n_\\"Give me all Book GlobalEnties that are either:_\\r\\n\\r\\n- _written by Isaac Asimov or Timothy Zahn, or..._\\r\\n- _are of category Science Fiction, have \\"robot\\" in the title, **and** cost less than $5.00\\"_\\r\\n\\r\\n{\\r\\n\\t\\"entityType\\": \\"book\\",\\r\\n\\t\\"$or\\": [\\r\\n\\t\\t{\\"data.author\\": {\\"$in\\": [\\"Isaac Asimov\\", \\"Timothy Zahn\\"]}},\\r\\n\\t\\t{\\"$and\\": [\\r\\n\\t\\t\\t{\\"data.category\\" : \\"Science Fiction\\"},\\r\\n\\t\\t\\t{\\"data.title\\": { \\"$regex\\": \\"robot\\", \\"$options\\": \\"i\\"}},\\r\\n\\t\\t\\t{\\"data.price\\": { \\"$lte\\": 500}}\\r\\n            \\t]}\\r\\n\\t]\\r\\n}\\r\\n\\r\\nMore information on our query syntax [here](/api/appendix/mongodbwherequeries).\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Miscellaneous API Enhancements\\r\\n\\r\\nWe\'ve implemented a bunch of customer-requested API enhancements - check the API Changes section to see if your favorite request made the list!\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nAlthough the\xa0overall look and top-level naviation of the Portal has changed\xa0significantly,\xa0the great majority of features are right where you left them.\xa0There is nothing new to learn!\\r\\n\\r\\n- **Portal Navigation**\\r\\n    - We\'ve replaced\xa0the old **[Design | Monitor | Reporting]**\xa0and **[Gear]** widgets with a simpler, more elegant top-level menu\\r\\n    - The new **Team** menu is just the old\xa0**Admin** menu (which was triggered by clicking the\xa0Gear widget in the old UI).\xa0_Same features\xa0- but\xa0much easier to find!_\\r\\n    - We\'ve added a **Docs**\xa0drop-down so that brainCloud documentation is always just a click away\\r\\n    - We\'ve added a new **Quick** menu for commonly accessed screens, like the API Explorer, User Monitoring, and Analytics.\\r\\n    - The **User** menu in the top-right corner now displays your [Gravatar](http://gravatar.com) picture if you have one.\\r\\n- **User | Edit Profile**\\r\\n    - New\xa0**Settings**\xa0tab\xa0allows the user to\xa0set their preferred\xa0**_timezone_** and portal _**language**_. _Note that these values are currently still stored in the developer\'s browser cookies - they will be moving soon!_\\r\\n- **Design | Core App Info | Platforms**\\r\\n    - We\'ve removed the _Client Libs_ section of this page - it was confusing and redundant with the **Team | Client Libs** page\\r\\n- **Monitoring | User Monitoring**\\r\\n    - The portal now remembers the last user that you were viewing and will automatically return to that user if you navigate away and then back. The is especially useful in conjunction with the new **Quick | User Monitoring** shortcut!\\r\\n- **General**\\r\\n    - Improved the \\"Delete Script\\" pop-up to more clearly indicate which script is being deleted!\\r\\n    - brainCloud Portal now supports click-thru links -\xa0it will automatically prompt the developer to log-in if they aren\'t already. Handy for documentation, tutorials and bookmarks.\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the brainCloud API:\\r\\n\\r\\n- **Client**\\r\\n    - [NEW!] `OverrideCountryCode()` and `OverrideLanguageCode()` - allow apps\xa0to override the country code and language that are automatically detected by the client libs and sent to brainCloud during authentication. This is useful especially for Unity apps on PC and Mac, because Unity does not properly detect these values. These methods should be called _before authenticating_\xa0so that they are sent to the server.\\r\\n- **Friend**\\r\\n    - [IMPROVED!] Added `pictureUrl` to the returns for `FindPlayerByUniversalId()`, `FindPlayerByName()` and `ListFriends()`\\r\\n    - [NEW!] `FindUsersByExactName()`\xa0- allows searching for users via an exact match (case insensitive). Will return as many users that match, up to the maximum.\\r\\n    - [NEW!] `FindUsersBySubstrName()` - similar to the old `FindPlayerByName()` method, but still returns\xa0_some_ search results even if the full results exceed the maximum.\\r\\n- **Leaderboard**\\r\\n    - [NEW!] `GetPlayersSocialLeaderboard()` - note the plural \\"players\\" in the name. Allows the app to retrieve the scores for the specified set of players. Useful in certain tournament situations.\\r\\n- **Logging**\\r\\n    - [NEW!] `LogInfo()`, `LogWarning()` and `LogError()` - new methods to allow you to easily log the results of cloud code routines\\r\\n- **Push**\\r\\n    - [NEW!] `SendNormalizedPushNotification()` - ability to send normalized push notifications to individual users\\r\\n    - [NEW!] `SendNormalizedPushNotificationBatch()` - ability to send a normalized push notification to the specified set of users\\r\\n- **Queries**\\r\\n    - We have updated the accepted query syntax for all user, global and group entity\xa0lookups\\r\\n    - These methods now accept queries that include (among others): $and, $or, $not, $nor, $in, $nin, $gt, $gte, $lt, $lte, $ne, $nin, and even $regex\\r\\n    - The following methods have been updated:\\r\\n        - User Entities: \xa0`GetList()`, `GetListCount()`, `GetSharedEntitiesListForPlayerId()`, `GetPage()`\\r\\n        - Global Entities: `GetList()`, `GetListCount()`, `GetPage()`\\r\\n        - Groups/Group Entities: `AutoJoinGroup()`,\xa0`ListGroupsPage()`, `ReadGroupEntitiesPage()`\\r\\n    - For more information, refer to the\xa0[Queries](/api/appendix/mongodbwherequeries) page in the Appendix of the\xa0API Reference.\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All libraries have been updated with the latest API enhancements. Go get \'em!\\r\\n- Documentation updates\\r\\n    - Friend service - we\'ve updated the docs to more clearly indicate with methods require that the user be \\"friends\\" with the other user to function. (_Spoiler: It is actually very few of them_.)\\r\\n    - Cloud Code - added service + operation for all cloud code method documentation\\r\\n    - Obsolete docs - we\'ve\xa0almost completely removed our old API docs - our new [API Reference](/api/capi) is the master now.\\r\\n- Important Fixes\\r\\n    - Fixed an issue where the global error handler was not sending the correct callback object when using the BrainCloudWrapper\\r\\n    - Fixed a defect where the javascript library was could send a bad rotation date to the server (with certain dates)\\r\\n    - Server changes\xa0to better standardize language and country codes\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2016/07/13/release-2-26-0","metadata":{"permalink":"/braincloud-apiref/release/2016/07/13/release-2-26-0","source":"@site/release/2016-07-13-release-2-26-0/index.md","title":"Release 2.26.0","description":"2.26\xa0is a smaller release\xa0that delivers\xa0some handy, customer-requested features. Take a look -\xa0there is something to love for everyone!","date":"2016-07-13T00:00:00.000Z","formattedDate":"July 13, 2016","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":3.715,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.26.0","date":"2016-07-13","tags":["release-history"]},"prevItem":{"title":"Release 3.0.0","permalink":"/braincloud-apiref/release/2016/08/29/release-3-0-0"},"nextItem":{"title":"Release 2.25.0","permalink":"/braincloud-apiref/release/2016/06/28/release-2-25-0"}},"content":"**2.26**\xa0is a smaller release\xa0that delivers\xa0some handy, customer-requested features. Take a look -\xa0there is something to love for everyone!\\r\\n\\r\\n# Release Highlights\\r\\n\\r\\n## WebHook Authentication\\r\\n\\r\\nSome of you are looking to use our new **WebHooks** feature for integration with systems like _Photon_, that can benefit from leveraging brainCloud authentication.\\r\\n\\r\\nTo enable this, we have added a new Cloud Code Bridge method: [`GetSessionForSessionIdAndProfileId()`](/api/cc/bridge/getsessionforsessionidandprofileid). Using this API you can retrieve the current session for an active user, confirm that it is valid, and even take action within that user\u2019s context.\\r\\n\\r\\n## Disabled Reason\\r\\n\\r\\nWe\u2019ve added the ability to custom configure information to be sent to your client apps should you choose to temporarily disable your app. The info is in the form of a snippet of custom JSON data that will be returned along with the `Authentication()` rejection.\\r\\n\\r\\nFor more details, consult the [Authentication](/api/capi/authentication) section of our API Reference.\\r\\n\\r\\n## User Online Status\\r\\n\\r\\nWe\u2019ve added a new method that you can use to query and report the online status of other users in the system. The method is called [`GetUsersOnlineStatus()`](/api/capi/friend/getusersonlinestatus) and works with an array of profile ids. Just the sort of thing you would want to gather the online status of a set of Group / Clan members!\\r\\n\\r\\n## Clone Scripts\\r\\n\\r\\nWe\u2019ve noticed that some devs, when creating a major revision to a Cloud Code script, like to begin by \u201ccloning\u201d it first - but we didn\u2019t give you an easy way to do that - _until now_!\\r\\n\\r\\nSimply choose **\u201cDuplicate\u201d** from the new Scripts action menu, and voila!, you are on your way!\\r\\n\\r\\n* * *\\r\\n\\r\\n# Portal Changes\\r\\n\\r\\nWe\u2019ve made the following portal changes:\\r\\n\\r\\n- **Design | Core App Info | App Ids**\\r\\n    - _Google Services_ section - we now indicate whether a p12 certificate has been already uploaded.\\r\\n- **Design | Core App Info | Advanced Settings**\\r\\n    - There\u2019s a new button, **[Edit Disabled Reason]**, up by the **[x] App Enabled** box, that allows you to edit the _JSON_ object that will be returned when your app is disabled.\\r\\n- **Design | Cloud Code | Scripts**\\r\\n    - The Script List functions have been organized into a new _action menu_, and includes the new _Duplicate_ feature!\\r\\n- **Design | Custom Config | Files**\\r\\n    - The MD5 for a file is now displayed if you hover over its filename.\\r\\n    - Troubleshooting: If for some reason the MD5 is not present, click **[Refresh File List]** to retrieve it.\\r\\n- **Monitoring | User Monitoring**\\r\\n    - All User Monitoring screens now bring up the _New Users_ list if a user has not already been selected\\r\\n- **Admin | Home**\\r\\n    - There\u2019s a new \u201cgear\u201d button in the Apps section that you can use to jump to the Apps screen\\r\\n- **General**\\r\\n    - We\u2019ve fixed an error in the portal that mangled international characters if you tried to apply them to a user\u2019s name, push notification message, etc.\\r\\n\\r\\n* * *\\r\\n\\r\\n# API Changes\\r\\n\\r\\nThe following changes/additions have affected the brainCloud API:\\r\\n\\r\\n- **Cloud Code Bridge**\\r\\n    - The new [`GetSessionForSessionIdAndProfileId()`](/api/cc/bridge/getsessionforsessionidandprofileid) method retrieves the specified active session object, if it is associated with the provided `profileId`. This can be used to validate that the user associated with the `profileId` _has_ indeed successfully authenticated with brainCloud.\\r\\n- **Friend**\\r\\n    - The new [`GetUsersOnlineStatus()`](/api/capi/friend/getusersonlinestatus) method can be used to retrieve the online status of the provided list of users.\\r\\n- **Global Statistics** and **User** [Player] **Statistics**\\r\\n    - New `ProcessStatistics()` methods have been added to both the [`GlobalStatistics`](/api/capi/globalstats/processstatistics) and [`PlayerStatistics`](/api/capi/playerstats/processstatistics) services that leverage the internal brainCloud [Statistics Grammar](/api/appendix/statisticsgrammar), allowing for the batch processing of complicated stats operations to be carried out by the server.\\r\\n- **Identity**\\r\\n    - The various [Identity](/api/capi/identity) methods (\xa0`Attach*()`, `Detach*()`, `Merge*()`, etc. ) are now available from cloud code.\\r\\n\\r\\n* * *\\r\\n\\r\\n# Miscellaneous Changes / Fixes\\r\\n\\r\\n- Important Fixes\\r\\n    - CDN robustness - we\u2019ve improved our algorithms to better handle updating the cached files in the CDN when new Custom Files are uploaded to the portal.\\r\\n    - Identifier syntax - The web portal now ensures that Global Properties and Cloud Code Script names adhere to the brainCloud identifier conventions of only letters, numbers and/or underscores\\r\\n- Updated libraries\\r\\n    - All libraries have been updated with the latest API enhancements. Go get \u2019em!\\r\\n- Documentation updates\\r\\n    - We continue to iterate and improve our new API reference\\r\\n    - There is a new tutorial for [Building the brainCloud Plugin for older versions of Unreal](/learn/sdk-tutorials/unreal-tutorials/building-the-plugin-for-older-versions-of-unreal/)\\r\\n- Plus miscellaneous fixes and performance enhancements\u2026"},{"id":"/2016/06/28/release-2-25-0","metadata":{"permalink":"/braincloud-apiref/release/2016/06/28/release-2-25-0","source":"@site/release/2016-06-28-release-2-25-0/index.md","title":"Release 2.25.0","description":"We\'ve got a doozy of a release for you\xa0heading into the Summer Holidays!","date":"2016-06-28T00:00:00.000Z","formattedDate":"June 28, 2016","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":7.72,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.25.0","date":"2016-06-28","tags":["release-history"]},"prevItem":{"title":"Release 2.26.0","permalink":"/braincloud-apiref/release/2016/07/13/release-2-26-0"},"nextItem":{"title":"Release 2.24.0","permalink":"/braincloud-apiref/release/2016/05/27/release-2-24-0"}},"content":"We\'ve got a doozy of a release for you\xa0heading into the Summer Holidays!\\r\\n\\r\\n## [![](images/BANR_Webhook_Blue03-1024x512.png)](images/BANR_Webhook_Blue03.png)\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### WebHooks!\\r\\n\\r\\nbrainCloud now supports WebHooks! Which means it\'s easier than ever to have your brainCloud app respond to events triggered from outside apps and services.\\r\\n\\r\\n[WebHooks](https://en.wikipedia.org/wiki/Webhook) are\xa0app-defined HTTP-callbacks that are triggered by events on another web service, and can be configured to invoke scripts in your app. The capabilities are similar to our Server-to-Server (S2S) interface, with the advantage that it is a more standardized mechanism, so tons of services already support it.\\r\\n\\r\\nExamples of useful services that employ WebHooks include: Photon, Twilio, MailChimp, HipChat, Slack, Zapier, etc.\\r\\n\\r\\nSetting up a WebHook integration is pretty simple:\\r\\n\\r\\n- **Write a new Cloud Code method** that accepts our [_WebHook Parameter Syntax_](/api/cc/writingscript#webhooks). The parameters you receive will be defined by the _External Service_ that is calling you.\\r\\n- **Configure the WebHook using the Design Portal.** You\'ll give the hook a name, determine how you are securing it, and link it to your **Cloud Code** method. You use the **Design | Cloud Code | WebHooks** screen to configure your WebHooks.\\r\\n- **Register\xa0your WebHook URL in the external service.**\xa0Finally, go to the external service and configure your WebHook, specifying the WebHook endpoint from the Design Portal, and any additional parameters that you require to be sent to your method.\\r\\n\\r\\n_Note - as with every external integration,\xa0we have to protect our servers from misuse. We have provided several\xa0mechanisms (server ip-validation and secret validation) to help your app confirm\xa0the identity of the service invoking the webhook. You should also ensure that your cloud script validates the validity of the incoming request._ \\r\\n\\r\\n_API Counts: Note that incoming webhook invocations count as 1 API count for the webhook itself, and 1 API count for the cloud code script being invoked._\\r\\n\\r\\n_[Note - we\'ll be putting together a WebHooks tutorial in the next couple of days to better illustrate how they work.]_\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Faster File Downloads\\r\\n\\r\\nWe have re-factored our file-handling services to\xa0enable significantly faster downloads. The executive\xa0summary is that now when the client\xa0attempts to download a file\xa0via the\xa0URLs that are returned from [`GetFileList()`](/api/capi/s3handling/getfilelist), [`GetUpdatedFiles()`](/api/capi/s3handling/getupdatedfiles), and [`ListUserFiles()`](/api/capi/file/listuserfiles)\xa0- it will automatically be redirected to a cached\xa0version of the file located on a Content Distribution Network (CDN) node that is closer to them geographically.\\r\\n\\r\\nThe hitch is that Unity doesn\'t natively support redirection (currently), so this doesn\'t _transparently_ work for our Unity apps. But don\'t worry, there are two simple solutions:\\r\\n\\r\\n#1 -\xa0Directly request the CDN-cached version of the File Url via the new [`GetCDNURL()`](/api/capi/s3handling/getcdnurl) methods (there are separate similarly-named methods for custom files vs. user files)\\r\\n\\r\\n#2 - Use the [UniWeb](https://www.assetstore.unity3d.com/en/#!/content/483)\xa0($25) plug-in, which \\\\*does\\\\* support redirection, to retrieve the files instead of the built-in Unity\xa0libraries\\r\\n\\r\\n#3 - Turn it off. Support for this behaviour\xa0can be turned off using the\xa0elegantly named \\"Funnel Custom and User File retrieval through app servers (slower)\\" compatibility option. You\'ll find the option under **Design | Core App Info | Advanced Settings**, in the _Compatibility Settings_ section.\\r\\n\\r\\nNote - for maximum compatibility, the compatility flag defaults to _enabled_ (that is, slower, legacy-mode behavior) for all existing apps. If your app would benefit from this speed increase, be sure to go disable the legacy setting!\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Improved Entity Updates\\r\\n\\r\\nWe have revised our `Create()` and `Update()`\xa0Entity APIs to be much more efficient - and have revised the `Increment()` APIs to bring them\xa0into greater alignment with the others.\\r\\n\\r\\nThe biggest change is that the `Create()` and `Update()` methods no longer return the full entity data upon success. Returning the fully rendered object originally \\\\*seemed\\\\* like a good idea - and certainly looks good in the API Explorer for small objects. But if you are an storing larger objects, returning all that data in the API response just eats up the data connection (and isn\'t useful to the app, since it already knows the data that it sent!).\\r\\n\\r\\nNot that although\xa0the `Create()` and `Update()` methods for Entities\\\\* (i.e. _User Entities_, _Global Entities_, _Groups_ and _Group Entities_) no longer return the _full_ object upon success, they do still return the object skeleton (or summary), which includes the entityId, entityType, version, etc. The diagram below should better illustrate the change.\\r\\n\\r\\n[![brainCloud entity create update optimization](images/brainCloud-entity-create-update-optimization-1024x864.png)](images/brainCloud-entity-create-update-optimization.png)\\r\\n\\r\\nAs always, we\'ve added a new Compatibility Flag (\\"Default to returning full Entity contents for create and update operations\\") to preserve the old behaviour if your app requires it. This flag defaults to _ON_\xa0for\xa0existing apps, and _OFF_\xa0for new apps moving forward.\\r\\n\\r\\nSecondly, we\'ve revised the new `IncrementData()` APIs to\xa0bring them into better alignment with the `Create()` and `Update()` methods. For example, like the methods above, [`IncrementUserEntityData()`](/api/capi/entity/incrementuserentitydata), will now return the full object skeleton upon success -- with one addition - it will also return the updated balance of any fields that were incremented.\\r\\n\\r\\n[![increment_api_update](images/increment_api_update.png)](images/increment_api_update.png)\\r\\n\\r\\nThis new protocol was implemented by removing the old `returnData` parameter, which was a less optimal attempt to give the user control over what data is returned. The old method still works for apps using the 2.24 version of the libraries, but devs updating to 2.25+ will need to\xa0adjust their method calls accordingly.\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe\'ve made the following portal changes:\\r\\n\\r\\n- **Design | Cloud Code | WebHooks**\\r\\n    - New screens for defining\xa0WebHooks. See the feature section above for\xa0details.\\r\\n- **Design | Marketplace | Products**\\r\\n    - We have enhanced the workflows so that you no longer have to manually press the **[Facebook Register Products]** button after making changes to the\xa0Facebook pricing information for products - it is now done automatically. We have left the button to support advanced\xa0scenarios where manually re-registering still makes sense.\\r\\n- **Monitoring | User Monitoring** \\r\\n    - The new **User Files**\xa0screen allows you to view the files uploaded to an individual user account.\\r\\n    - We have moved the in-app purchases that were displayed as part of the **Virtual Currency** screen to their own **Transactions** screen.\\r\\n- **Reporting**\\r\\n    - The \xa0_Sessions_ graph on the **Analytics** page now displays values according to local time.\\r\\n    - We\'ve added a new _Incoming\xa0WebHooks_\xa0count to the **API Usage** page.\\r\\n- **Miscellaneous**\\r\\n    - _Faster App Deletion_ - Deleting an app now immediately _marks it for deletion_, to be completed by a background task during non-peak hours.\\r\\n    - _Password confirmations_ \xa0- We have added more safety checks, where brainCloud will prompt you\xa0\xa0re-enter your password for destructive operations (deleting an app, etc). We\'ll be further enhancing these safety mechanisms in future updates.\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the brainCloud API:\\r\\n\\r\\n- **`Authenticate()` and `ReadPlayerState()` methods**\\r\\n    - `countryCode` is now being returned\\r\\n    - New `isTester` flag is being returned for users. This corresponds ot the **[x] Is Tester** checkbox that is selectable from **Monitoring | User Monitoring | User Summary**. \xa0This is very handy if you want to trigger special logging, debug screens, etc to be available to testers but not regular users of your app.\\r\\n- **Client**\\r\\n    - New method ([`EndOfMessageBundleMarker()`](/api/capi/client/insertendofmessagebundlemarker)) for forcing the end of a message bundle. Useful for ensuring that large brainCloud requests are isolated into seaparate message bundles, and for ensuring that certain key calls (like [`LogOut()`](/api/capi/playerstate/logout)) get to return before continuing message processing.\\r\\n- **Cloud Code APIs**\\r\\n    - New [`CancelScheduledScript()`](/api/capi/script/cancelscheduledscript) method to cancel a scheduled\xa0cloud code job\\r\\n- **Currency APIs**\\r\\n    - Now properly enforces balance server-side for all [`ConsumeCurrency()`](/api/capi/product/consumecurrency) operations. There\'s a compatibility switch that defaults to ON for existing apps, but we recommend that all devs go to **Design | Core App Info | Advanced Settings**, and turn the _\\"Enable legacy Currency handling (balance not enforced for Consume)\\"_ to OFF for their app (with appropriate testing, of course).\\r\\n- **Entity Create / Update APIs**\\r\\n    - As described in the _Release Hilights_\xa0section, API\'s have been revised\xa0so that we do not return the full data content during `Create()` and `Update()` operations. There is a new compatibility flag to maintain the legacy behaviour (by default turned ON for existing apps).\\r\\n    - The `Increment()` API methods have been revised to\xa0return results that are\xa0consistant with the rest of the Entity Create()/Update() methods.\xa0Revised methods include [`IncrementUserEntityData()`](/api/capi/entity/incrementuserentitydata), [`IncrementSharedUserEntityData()`](/api/capi/entity/incrementshareduserentitydata), [`IncrementGlobalEntityData()`](/api/capi/globalentity/incrementglobalentitydata), [`IncrementGroupData()`](/api/capi/group/incrementgroupdata) and [`IncrementGroupEntityData()`](/api/capi/group/incrementgroupentitydata).\\r\\n- **Friend API**\\r\\n    - New [`GetSummaryDataForProfileId()`](/api/capi/friend/getsummarydataforprofileid) method - returns the name, email, pictureUrl, and summary data for the specified user.\\r\\n- **Group APIs**\\r\\n    - New [`AutoJoinGroup()`](/api/capi/group/autojoingroup) method allows you to automatically join a group that meets the provided criteria. Useful for quickly creating arbitrary grops of users.\\r\\n    - The [`ReadGroupData()`](/api/capi/group/readgroupdata) method has been added to client libraries (was missed last release - oops!)\\r\\n- **Identity APIs**\\r\\n    - New [`RefreshIdentity()`](/api/capi/identity/refreshidentity) method allows you to update identity tokens that are not the primary login identity\\r\\n\\r\\nWe have also removed / deprecated the following methods:\\r\\n\\r\\n- **Increment methods**\\r\\n    - We have removed the versions of the Entity Increment methods that accepted the `returnData` parameter.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- IPv6 Support\\r\\n    - We have updated the C++ / Objective-C libraries to support IPv6.\\r\\n    - We have re-confirmed that all other libraries properly support IPv6.\\r\\n- Documentation\\r\\n    - Completely revised and updated [Cloud Code](/api/cc/writingscript) documentation section!\\r\\n- Updated libraries\\r\\n    - All of the supported libraries have been updated to support the latest APIs\\r\\n- Plus miscellaneous fixes and performance enhancements.\\r\\n- Miscellaneous page improvements - we\'ve been iterating through our pages to add a bit more consistency and presentation polish."},{"id":"/2016/05/27/release-2-24-0","metadata":{"permalink":"/braincloud-apiref/release/2016/05/27/release-2-24-0","source":"@site/release/2016-05-27-release-2-24-0/index.md","title":"Release 2.24.0","description":"We\'ve got a smaller release for you this time. We\'ve got a few bigger features cooking in the fires - \xa0but in the meantime we thought we\'d push out a few of the polish items and customer requests that we have queued.","date":"2016-05-27T00:00:00.000Z","formattedDate":"May 27, 2016","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":3,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.24.0","date":"2016-05-27","tags":["release-history"]},"prevItem":{"title":"Release 2.25.0","permalink":"/braincloud-apiref/release/2016/06/28/release-2-25-0"},"nextItem":{"title":"Release 2.23.0","permalink":"/braincloud-apiref/release/2016/05/13/release-2-23-0"}},"content":"We\'ve got a smaller release for you this time. We\'ve got a few bigger features cooking in the fires - \xa0but in the meantime we thought we\'d push out a few of the polish items and customer requests that we have queued.\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Authy OneTouch\\r\\n\\r\\nWe have\xa0enhanced\xa0our Two-Factor Authentication\xa0implementation to take advantage of Authy OneTouch for those users who are using the [Authy App](https://www.authy.com/app/mobile/).\xa0It\'s super convenient - no\xa0codes to enter! Just click **[Approve]** to confirm your login.\\r\\n\\r\\n[![DIAG_AuthyOneTouch](images/DIAG_AuthyOneTouch.png)](images/DIAG_AuthyOneTouch.png)\\r\\n\\r\\n### Customer API Requests\\r\\n\\r\\nWe\'ve also released a few API enhancements at the request of some key customers. There are updates to Groups, Identities and the Cloud Code bridge. We hope you like them!\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nWe\'ve made the following portal changes:\\r\\n\\r\\n- **Login**\\r\\n    - During Two-Factor Authentication you\'ll notice the red One Touch meter. It tells you that we\'ve detected that you have the Authy app, and have sent a request that you can simply **[Approve]** without having to enter the authentication code. __Note: The login screen will stop\xa0monitoring for One Touch approval after\xa05 minutes, after which you can still enter the verification code.__\\r\\n- **Power | Edit User**\\r\\n    - To ease the burden of 2FA, our login process optionally allows you to flag a device as _trusted_, so you won\'t need to re-verify for 30 days. But what if you mistakenly hit that option when logging in from a public computer? Witness\xa0the\xa0new\xa0**[Clear Trusted Devices]**\xa0option\xa0on the **Two-Factor**\xa0tab of the **Edit User** dialog. Ta-dah! :)\\r\\n    - Team Administrators can now unlink Two-factor Authentication\xa0from other user\'s accounts (allows self-fixing of TFA-issues should they arise)\\r\\n- **General**\\r\\n    - Minor updates (for clarification and consistancy) to icons used throughout the\xa0portal.\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes/additions have affected the brainCloud API:\\r\\n\\r\\n- **Cloud Code Bridge**\\r\\n    - New [GetProfileId()](/api/cc/bridge/getprofileid) method returns the profile id of the current user. Saves having to call to the PlayerState proxy for the information.\\r\\n    - New [GetName()](/api/cc/bridge/getname) method returns the name of the current user\\r\\n    - New [GetEmail()](/api/cc/bridge/getemail) method returns the email address of the current user\\r\\n- **Groups API**\\r\\n    - Updated [GetMyGroups()](/api/capi/group/getmygroups) method to additionally return groups that you have been invited to and have requested to join.\\r\\n- **Identity API**\\r\\n    - New [GetIdentities()](/api/capi/identity/getidentities) method returns a list of the non-anonymous identities associate with the\xa0current profile. This method is useful to learn if the user has already associated a Facebook account with their profile, for example.\\r\\n    - New [GetExpiredIdentities()](/api/capi/identity/getexpiredidentities) method returns a list of identitities with the current profile\xa0whose authentication tokens\xa0 that have expired (and should be refreshed)\\r\\n\\r\\nWe have also deprecated the following methods:\\r\\n\\r\\n- **Authentication Service**\\r\\n    - Deprecated GenerateGUID() and GenerateNewAnonymousId() - replaced with [GenerateAnonymousId](/api/capi/authentication/generateanonymousid)() method, which works in a more consistant manner.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Updated libraries\\r\\n    - All libraries have been updated with the latest API enhancements. Go get \'em!\\r\\n- Documentation updates\\r\\n    - Added Versioning overview to the Appendix summary of the API REF docs\\r\\n    - Updated AsyncMatch documentation\\r\\n    - Updated Leaderboard documentation\\r\\n    - Better pre-hook cloud code examples\\r\\n- Source updates\\r\\n    - Removed JSON return data from the client source code, since that data is now included (and more likely to be up-to-date) in the API REF documentation\\r\\n- Important Fixes\\r\\n    - During login, if user\'s timezone has changed, the user\'s timezone as recorded in segments is updated as well\\r\\n    - Fix to Facebook purchase handling which could sometimes cause virtual currencies to be awarded twice in some circumstances\\r\\n    - Added Facebook real-time payments transactions to the request logs\\r\\n- Plus miscellaneous fixes and performance enhancements..."},{"id":"/2016/05/13/release-2-23-0","metadata":{"permalink":"/braincloud-apiref/release/2016/05/13/release-2-23-0","source":"@site/release/2016-05-13-release-2-23-0/index.md","title":"Release 2.23.0","description":"Release Highlights","date":"2016-05-13T00:00:00.000Z","formattedDate":"May 13, 2016","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":7.505,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.23.0","date":"2016-05-13","tags":["release-history"]},"prevItem":{"title":"Release 2.24.0","permalink":"/braincloud-apiref/release/2016/05/27/release-2-24-0"},"nextItem":{"title":"Release 2.22.0","permalink":"/braincloud-apiref/release/2016/04/14/release-2-22-0"}},"content":"## Release Highlights\\r\\n\\r\\n[![BC_TwitterT_Clans](images/BC_TwitterT_Clans-1024x512.png)](images/BC_TwitterT_Clans.png)\\r\\n\\r\\nThis release delivers six\xa0new features:\\r\\n\\r\\n- **Groups! (i.e. Clans!)** - allow your users to clan-up for greater socialization and competition!\\r\\n- **2FA for Teams!** An extra level of security for your development accounts.\\r\\n- **Scheduled Push Notifications!** Deliver that message at exactly the right time\xa0no matter what timezone your users are in.\\r\\n- **Universal Windows Support** - we have a new C++ library for [Universal Windows Platform (UWP)](https://msdn.microsoft.com/en-us/windows/uwp/get-started/universal-application-platform-guide) apps.\\r\\n- **Xamarin Support** - we have new iOS and Android libraries for Xamarin!\\r\\n- **watchOS Support** - built native apps on watchOS using brainCloud!\\r\\n\\r\\nPlus the usual assortment of API and library improvements. Note that all client libraries have been updated to the latest, except Javascript, which will be updated and released mid-next-week (week of Friday May 18th).\\r\\n\\r\\nRead on for all the details.\\r\\n\\r\\n* * *\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Groups (i.e. Clans)\\r\\n\\r\\nAlthough you\'ve always been able to write your own clan system in brainCloud using Global Entities and Cloud Code, we thought it was about time that we lent a hand - reducing the coding\xa0burden, and adding great tools support at the same time.\\r\\n\\r\\nThis feature provides an API that allows users to dynamically\xa0create, join and manage\xa0Groups.\\r\\n\\r\\nGroups have the following characteristics:\\r\\n\\r\\n- Groups are a combination of a _collection\xa0of users_, plus some _shared data_ about those users\\r\\n- Groups in brainCloud are organized by Group Type. The developer defines a Group Type, setting certain rules such as maximum # of members, and the action to take if a Group\'s owner is deleted.\\r\\n- There are three built-in roles - _owner_, _admin_ and _member_\\r\\n    - Groups are _owned_ by a single user - but can have additional _admins_\\r\\n    - Only the owner of a group may delete it.\xa0Owners may leave a group only if they re-assign ownership to another user.\\r\\n    - Group membership can be _open_ or _closed_. Open groups can be freely joined by anyone. Closed groups require an owner or admin to _invite_ or _approve_ join requests.\\r\\n    - Groups can associate additional attribute data with members - which can allow for additional developer-defined role types (i.e. think ranks in Clash of Clans - Leader, Co-Leader, Elder, Member, etc)\\r\\n    - A user can be a member of more than one Group. (Limits can be imposed by the developer, of course).\\r\\n- Group data is a JSON object associated with the group. Access to the data is controlled by the group ACL.\\r\\n- Groups can also own a set of entities (i.e. Group Entities) for more complex data needs. Group Entities can be owned by the group as a whole, or by individual members within a group.\\r\\n- Group membership can be used for leaderboard retrieval\\r\\n\\r\\nFor more information re: brainCloud group support, refer to the [Group API Reference Page](/api/capi/group)\xa0.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Two-factor Authentication (for Team Members)\\r\\n\\r\\nbrainCloud\'s Two-Factor Authentication (2FA) support allows you to tie your phone to your developer account for extra security and peace-of-mind.\\r\\n\\r\\nWe\'ve chosen to\xa0use Twilio\'s [Authy](https://www.authy.com/app/mobile/) technology for our 2FA implementation - it works similarly to Google Authenticator, but gives more options in terms of authentication (text, voice, or app) and offers better management of verification devices.\\r\\n\\r\\nHooking up 2FA to your account\xa0couldn\'t be simpler:\\r\\n\\r\\n- Choose **Edit Profile** from the top-right **Power** menu of the brainCloud Portal\\r\\n- Go to the new **Two-factor** tab\\r\\n- Click on the green\xa0**[Click to Enable 2FA]** button and follow the prompts!\\r\\n\\r\\n[![Enable_2FA](images/Enable_2FA.png)](images/Enable_2FA.png)\\r\\n\\r\\nFor more information, refer to the [Enabling 2FA](/learn/portal-tutorials/two-factor-authentication-for-team-members/) page in our documentation.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Scheduled Push Notifications\\r\\n\\r\\nThrough the magic of scheduled cloud code and our push notification API, it\'s always been possible to schedule push notifications to happen at a precise time. But - what if you want to send notifications to a segment of users, and ensure that those notifications get sent at a standardized local time - say 9am, for each of the users, regardless of their timezone? That was much, much harder.\\r\\n\\r\\nUntil now. Our new Schedule Push Notification interface allows you to specify a local time to send all notifications at. brainCloud will then automatically create the appropriate set of scheduled push notification jobs - one for each timezone involved - and then automatically send the notifications at the appropriate time for each group of users.\\r\\n\\r\\nIt\'s extremely powerful, and very simple to use. Check out the new S2S API calls\xa0[here](/api/s2s/pushnotification).\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Universal Windows Platform Support\\r\\n\\r\\nWe\'ve created a new C++ library with support for [Universal Windows Platform](https://msdn.microsoft.com/en-us/windows/uwp/get-started/universal-application-platform-guide) apps. And we\'re making the library available via nuget as well. Stay tuned for more details.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Xamarin Support\\r\\n\\r\\nWith it\'s recent [acquisition by Microsoft](http://blogs.microsoft.com/blog/2016/02/24/microsoft-to-acquire-xamarin-and-empower-more-developers-to-build-apps-on-any-device/#sm.0000emdu1ai1yfgwrwg1uyf2dwt9j), and integration into Visual Studio, we\'re finding tons of interest in [Xamarin](https://www.xamarin.com/platform) support for brainCloud. We\'re pleased to announce the availability of the\xa0brainCloud Xamarin.ios and Xamarin.android libraries!\\r\\n\\r\\n\xa0\\r\\n\\r\\n### watchOS Support\\r\\n\\r\\nApple\xa0has announced that moving forward, [all new and updated watchOS apps must be native](https://developer.apple.com/news/?id=04222016a). We are here to help, so we\'ve built a new version of the brainCloud library that runs natively on watchOS 2. You\'re welcome!\\r\\n\\r\\n* * *\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Portal\xa0Changes\\r\\n\\r\\nThe first thing you will notice is that we have re-ordered the tabs of the Design section of the portal to be mostly alphabetical (we still kept the Core App Info section at the top). We\'ve added (and continued to add) so many features to brainCloud, going alphabetical seems like the only way to keep things easily findable.\\r\\n\\r\\nIn addition, we\'ve made the following portal changes:\\r\\n\\r\\n- **Power | Edit User**\\r\\n    - Moved the **Password** section\xa0to a separate tab\xa0for clarity.\\r\\n    - Added a new **Two-Factor** tab for enabling Two-Factor Authentication (2FA).\\r\\n- **Admin | Team Members**\\r\\n    - Added a _2FA_ column so that you can confirm which team members have enabled Two-Factor Authentication for additional security.\\r\\n- **Design | Cloud Code | Scripts**\\r\\n    - The scripts screen is now sortable according to the date+time that the scripts were last updated.\\r\\n- **Design | Groups**\\r\\n    - The\xa0new **Group Types** screen to allow you to define that types of groups that your application will support. Configuration information includes the maximum # of users allowed per group (default is 50 - contact us if you need higher), and what the system should do if the owner of a group is deleted.\\r\\n- **Monitoring | Global Monitoring | Jobs**\\r\\n    - Added support for viewing _Scheduled Push Notification_ jobs.\\r\\n- **Monitoring | Group Monitoring**\\r\\n    - Added new **Group Monitoring** section to allow you to view and manage an application\'s\xa0global user groups\\r\\n    - The **Groups** screen presents a list of all groups, filterable by type of group. You can view the details of a Group by clicking on it - you can even edit the Group\'s json-data.\\r\\n    - The **Group Entities** screen displays\xa0a list of entities associated with groups. The list is filterable by entity type and/or group id. _Pro-tip - to clickly see a group\'s entities, look up the group in Group Monitoring first, and then choose \\"View Group Entities\\" from the action menu._\\r\\n- **Monitoring | User Monitoring | Groups**\\r\\n    - Shows the groups that a user is a member of,\xa0together with details about the group and the user\'s membership.\\r\\n\\r\\n* * *\\r\\n\\r\\n\xa0\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following additions / changes have been made to the brainCloud API:\\r\\n\\r\\n- **Global Entities**\\r\\n    - New [IncrementGlobalEntityData()](/api/capi/globalentity/incrementglobalentitydata)\xa0method allows you to increment discrete numeric values in a global entity. Great for incrementing atomic stats-like values without pushing a full update to the entire JSON object.\\r\\n- **New Group API**\\r\\n    - There are too many new API methods to list here. For the full description of the new Group and Group Entity APIs, see the [Groups](/api/capi/group) section of the API Reference documentation.\\r\\n- **Leaderboard API**\\r\\n    - New [GetGroupSocialLeaderboard()](/api/capi/leaderboard/getgroupsocialleaderboard)\xa0method retrieves a\xa0leaderboard filtered to the members of the specified group\\r\\n- **Push Notifications**\\r\\n    - New [SendNormalizedPushNotificationToGroup()](/api/capi/pushnotification/sendnormalizedpushnotificationtogroup)\xa0and [SendTemplatedPushNotificationToGroup()](/api/capi/pushnotification/sendtemplatedpushnotificationtogroup) methods sends push notifications to the members of a group\\r\\n    - New S2S Scheduled Push Notifiation\xa0methods ( [ScheduleNormalizedPushNotifications()](/api/s2s/pushnotification/schedulenormalizedpushnotifications) and\xa0[ScheduleRichPushNotifications()](/api/s2s/pushnotification/schedulerichpushnotifications)\xa0) allow you to send push notifications to users according to their timezone\\r\\n- **User Entities**\\r\\n    - New [IncrementUserEntityData()](/api/capi/entity/incrementuserentitydata) method allows you to increment discrete numeric values in a user entity.\xa0Just as useful as the GlobalEntity, Group and GroupEntity versions of the same method!\\r\\n    - New [GetSharedEntitiesListForPlayerId()](/api/capi/entity/getsharedentitieslistforprofileid) method\xa0retrieves a list of shared entities for the specified player based on the specified where clause\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- New/updated libraries\\r\\n    - New Universal Windows Platform (UWP) C++ libs\\r\\n    - New iOS and Android Xamarin\xa0libs\\r\\n    - New watchOS\xa0libs\\r\\n    - Upgraded version of OpenSSL in C++ libs\\r\\n- Fixes and changes\\r\\n    - Pre-hook cloud-code methods can no longer directly call the API that invoked them (prevents recursion loops!)\\r\\n- Documentation Updates\\r\\n    - Migrated reason codes over to new API Ref docs\\r\\n    - Improved performance of new API Ref docs -- Table-of-Contents now cached\\r\\n    - API doc links in API explorer moved to new API Ref\\r\\n    - Tutorials upgraded to link to new API Reference\\r\\n    - New error handling tutorial\\r\\n- Miscellaneous defect fixes\\r\\n- Miscellaneous performance improvements"},{"id":"/2016/04/14/release-2-22-0","metadata":{"permalink":"/braincloud-apiref/release/2016/04/14/release-2-22-0","source":"@site/release/2016-04-14-release-2-22-0/index.md","title":"Release 2.22.0","description":"Release Highlights","date":"2016-04-14T00:00:00.000Z","formattedDate":"April 14, 2016","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":7.73,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.22.0","date":"2016-04-14","tags":["release-history"]},"prevItem":{"title":"Release 2.23.0","permalink":"/braincloud-apiref/release/2016/05/13/release-2-23-0"},"nextItem":{"title":"Release 2.21.0","permalink":"/braincloud-apiref/release/2016/03/03/release-2-21-0"}},"content":"## Release Highlights\\r\\n\\r\\nThere are a ton of small enhancements and fixes in 2.22 - plus these three big things:\\r\\n\\r\\n\xa0\\r\\n\\r\\n### brainCloud Friends\\r\\n\\r\\nUntil now, brainCloud has relied\xa0solely upon\xa0Facebook for managing a\xa0user\'s friend relationships. Apps that didn\'t\xa0want to connect to Facebook were left to implement their own system (via Cloud Code and User Entities). It\'s work-able, and some of brainCloud\'s best apps have taken this approach - but we thought brainCloud should do more for you.\\r\\n\\r\\nRelease 2.22 adds a new built-in friends system that is directly manageable by the app -\xa0while also\xa0dynamically merged with network sources (i.e. Facebook\xa0and others in the future) if available.\xa0This enables apps without Facebook integration to still have friends, and leverage friend-dependent features such as Social Leaderboards.\\r\\n\\r\\nYou\'ll find the new API methods in the Friend service, as well as a new Monitoring screen for viewing a list of a user\'s friends.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Parse Integration\\r\\n\\r\\nLast month\xa0we delivered\xa0our Parse import feature. This release we\'ve added the ability to connect to Parse Servers from live brainCloud apps - facilitating the gradual migration of functionality and user data from Parse to brainCloud.\\r\\n\\r\\nConfiguring the Parse connection is simple - go to **Design | Integrations | Manage Integrations**, and enter your Parse App ID and Reset API Key. You can even enter a custom Parse Server URL if you\'ve already migrated from Parse\'s servers.\\r\\n\\r\\nFrom there, there are two key APIs to integrate into your app:\\r\\n\\r\\n- [AuthenticateParse()](/api/capi/authentication/authenticateparse) - used to authenticate with brainCloud via a Parse identity.\\r\\n- [ParseRequest()](/api/cc/httpclient/parserequest) - makes a web request from brainCloud from Parse\\r\\n\\r\\nWe\'ve even built a small sample app to show how these APIs can work together to dynamically migrate your users to brainCloud.\\r\\n\\r\\n### CloudCode Editor Run Tab\\r\\n\\r\\nWe think our CloudCoders will like this one. We\'ve added a new Run tab to the editor, so that you can do the full develop, run, debug cycle from within the Cloud Code editor dialog. No more saving and exiting to the API Explorer - only to have to go right back to editor once the system hits that pesky defect!\\r\\n\\r\\nNow edit, test and debug your code all from the same editor!\\r\\n\\r\\n[![Run Tab](images/Run_Tab.png)](images/Run_Tab.png)\\r\\n\\r\\n_Pro tip: The session and log for the Run tab are shared with the API Explorer. This allows you to set up custom\xa0scenarios for testing._\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nThe following changes have been made to the design portal:\\r\\n\\r\\n- **Design | Core App Info | Advanced Settings**\\r\\n    - Two new _**Compatibility Settings**_ have been\xa0added that allow developers to preserve the old behaviour of the API where user entities and friends relationships are concerned (see API changes, below)\\r\\n    - The settings default to ON\xa0for existing apps (so that nothing breaks), but OFF\xa0for new apps.\\r\\n    - _It is recommended that developers test their app, and move the settings to OFF\xa0if possible to ensure best compatibility with future updates to the platform\xa0going forward._\\r\\n- **Design | Integrations**\\r\\n    - New Parse integration options have been added to the **Manage Integrations** page\\r\\n- **Design | Cloud Code | API Explorer**\\r\\n    - You can now easily copy the json results from any API call by clicking on the ellipsis {...} button at the top of the response.\\r\\n    - API Explorer calls are now added to the user\'s\xa0request/response logs (can aid debugging in some scenarios)\\r\\n- **Design | Cloud Code | Script Editor**\\r\\n    - New **Run** tab added to allow easy testing and debugging of scripts\\r\\n    - Click **[Quick Authenticate]** to create a session with default options\\r\\n    - Edit the parameters, and then click **[Run]** to execute\xa0the script\\r\\n    - Note - brainCloud only runs the saved version of a script. If a script has changed and has not yet been saved, it will show an asterix (\\"\\\\*\\") in the Editor tab title.\\r\\n- **Monitoring | Global Monitoring | Recent logs**\\r\\n    - Clicking on a _profile id_ in a log entry now brings you to the **Log** page of that user in **User Monitoring**\\r\\n- **Monitoring | User Monitoring, Select User,\xa0Search**\\r\\n    - We\'ve expanded the user search to support all of our identity types, including GameCenter ID (note, it\'s the numeric ID that Apple provides), Twitter ID, Steam ID, Parse ID,\xa0and more.\\r\\n- **Monitoring | User Monitoring |\xa0Friends**\\r\\n    - We\'ve added a new screen to display the friends that a user has. The screen offers a filterable list of both the user\'s Facebook friends who also have your app, along with any local brainCloud friends that the app may have added.\\r\\n- **Monitoring | User Monitoring | Recent Logs**\\r\\n    - Added the script name to the Run Script entries\\r\\n    - API Explorer initiated calls now appear in the logs\\r\\n- **Live Lock**\\r\\n    - Better keyboard support for unlocking apps. Clicking the banner now puts the cursor into the password field automatically, and password entry is confirmed by hitting the\xa0[Enter]\xa0key\\r\\n    - More buttons are now \\\\*disabled\\\\* when an app is locked, instead of hidden. This is so that locked features remain discoverable.\\r\\n- **Server Status**\\r\\n    - You can now easily look up the status of brainCloud\'s servers via our new ServerStatus page. \xa0You\'ll find the link by the version number in the Portal\xa0under the\xa0left-hand navigation bar - or just bookmark [braincloud.statuspage.io](http://braincloud.statuspage.io).\\r\\n\\r\\n\xa0\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThe following changes have been made to the brainCloud API:\\r\\n\\r\\n- **Authentication**\xa0and **ReadPlayerState**\\r\\n    - [Authenticate()](/api/capi/authentication) and [ReadPlayerState()](/api/capi/playerstate/readuserstate) methods now return the users\' `pictureUrl` property if available\\r\\n    - [Authenticate()](/api/capi/authentication) and [ReadPlayerState()](/api/capi/playerstate/readuserstate) no longer return the user\'s entities by default [see _User Entities_] section below\\r\\n- \xa0**BrainCloudWrapper**\\r\\n    - [BrainCloudWrapper](/api/wrapper) wraps the authentication and identity portions of the API, simplifying\xa0authentication for\xa0your apps.\\r\\n    - Because the wrapper isn\'t a core component\xa0of the library (and apps aren\'t required to use it), it was\xa0only available on a few platforms, and wasn\'t really documented.\\r\\n    - It is very useful however, and eliminates some common programming mistakes - so we are now providing it across all platforms (except AS3), and have documented it in [its own section](/api/wrapper) of the API documentation.\\r\\n- **Friends**\\r\\n    - The new friends management methods are: [AddFriends()](/api/capi/friend/addfriends) and [RemoveFriends()](/api/capi/friend/removefriends). They are plural because they allow you to add multiple friends in a batch.\\r\\n    - A\xa0new method,\xa0[FindPlayerByUniversalId()](/api/capi/friend/finduserbyexactuniversalid) has been added to facilitate looking up potential friends\\r\\n- **Matchmaking**\\r\\n    - New [DisableMatchmaking()](/api/capi/matchmaking/disablematchmaking) api method has been added to all clients\\r\\n- **Parse Integration**\\r\\n    - You can now authenticate brainCloud users via the [AuthenticateParse()](/api/capi/authentication/authenticateparse) method. _Pro tip: Once the brainCloud account has been created, you can attach a brainCloud identity\xa0(i.e. Universal or Email) via the AttachIdentity() methods._\\r\\n    - Once authenticated, you can make calls to Parse to retrieve data via the Cloud Code [ParseRequest()](/api/cc/httpclient/parserequest) method.\\r\\n    - You configure parse configuration from the\xa0**Design | Integrations | Manage Integrations** screen.\\r\\n- **User\xa0Entities**\\r\\n    - **Behaviour Change:** UserEntities are no longer returned during Authenticate() and ReadPlayerState() calls by default. This\xa0is because some apps are actually storing thousands of entities per user, not all of which should be retrieved at once.\\r\\n    - Apps can preserve the legacy behaviour by enabling the \\"Return user entites during authenticate and player state methods\\" flag in the **Compatiblity** section of\xa0the **Design | Core App Info | Advanced Settings** screen. This setting defaults to \\"on\\" for existing apps to preserve compatibility.\\r\\n    - New [GetList()](/api/capi/entity/getlist) and [GetListCount()](/api/capi/entity/getlistcount) methods have been added. These methods allow for more complex queries of user entities.\\r\\n    - [GetSharedEntityForPlayerId()](/api/capi/entity/getsharedentityforprofileid) method added - previously you could only retrieve \\\\*all\\\\* shared entities in a list.\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- Infrastructure updates\\r\\n    - Improvements to Push Notifications architecture for increased performance and reliability\\r\\n    - Upgraded our TLS libraries\xa0to use 1.1+ for improved security when connecting\xa0to our billing system.\\r\\n- Removed methods - the following previously-deprecated methods have been removed from the 2.22\xa0client libraries:\\r\\n    - Removed ReadFriendsWithApplication() -\xa0use [ListFriends()](/api/capi/friend/listfriends) instead\\r\\n    - Removed GetGlobalLeaderboard() - use [GetGlobalLeaderboardPage()](/api/capi/leaderboard/getgloballeaderboardpage) instead\\r\\n    - Removed GetLeaderboard() - use [GetSocialLeaderboard()](/api/capi/leaderboard/getsocialleaderboard) instead\\r\\n    - Removed RegisterPushNotificationDeviceToken with string device parameter - use version with Platform object instead\\r\\n    - Removed ReadPlayerStatsSubset() with string parameter - use version that takes collection instead\\r\\n    - Removed ReadAttributes() with string parameter - use version that takes collection instead\\r\\n    - Removed ReadGlobalStatsSubset() with string parameter - use version that takes collection instead\\r\\n    - Removed AwardAchievements() with string parameter - use version that takes collection instead\\r\\n    - Removed UpdateSummaryFriendData() from BrainCloudFriend - use BrainCloudPlayerState version instead\\r\\n    - Removed GetOneWayPlayers() and GetOneWayPlayersWithFilter() -\xa0use the [FindPlayers()](/api/capi/matchmaking/findplayers) methods instead\\r\\n- Javascript library\\r\\n    - Added FileUpload capabilities to the Javascript libs - tutorial [here](/learn/sdk-tutorials/javascript-tutorials/js-file-upload/)\\r\\n    - Added [GenerateGUID()] and [GenerateNewAnonymousId()](/api/capi/authentication/generateanonymousid) to the Javascript libs\\r\\n- Unreal libs\\r\\n    - Updated to support Unreal 4.11\\r\\n- Miscellaneous changes, fixes and performance improvements, including:\\r\\n    - Manually\xa0Triggering the forgot password feature\xa0for users or other team member\'s now bcc\'s the Team Member that requested it.\\r\\n    - ReadFriendPlayerState() method was returning too much information - fixed\\r\\n    - AB Test ID behaviour has been fixed. The value now remains constant\xa0after creation, as intended.\\r\\n    - Should\xa0you _want_ to change the AB Test ID value for testing purposes, however, you now can - via the User Summary screen. Just click the Tester button first.\\r\\n    - The Global Entities screen has been enhanced to allow you to scroll through an unlimited number of entities\\r\\n- Documentation\\r\\n    - Stats grammar documentation added to the new site\\r\\n    - C++ examples to the new site\\r\\n    - BrainCloudWrapper section added to the new site"},{"id":"/2016/03/03/release-2-21-0","metadata":{"permalink":"/braincloud-apiref/release/2016/03/03/release-2-21-0","source":"@site/release/2016-03-03-release-2-21-0/index.md","title":"Release 2.21.0","description":"Okay, this one got away from us a little bit. The release is absolutely chock-full of new features - hopefully there is something for everyone!","date":"2016-03-03T00:00:00.000Z","formattedDate":"March 3, 2016","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":5.79,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.21.0","date":"2016-03-03","tags":["release-history"]},"prevItem":{"title":"Release 2.22.0","permalink":"/braincloud-apiref/release/2016/04/14/release-2-22-0"},"nextItem":{"title":"Release 2.20.0","permalink":"/braincloud-apiref/release/2016/01/27/release-2-20-0"}},"content":"Okay, this one got away from us a little bit. The release is absolutely chock-full of new features - hopefully there is something for everyone!\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n### Team Member Roles\\r\\n\\r\\nbrainCloud now supports assigning permissions to Team Members on an app-by-app basis. The roles available are pre-defined (we don\'t offer custom roles _yet_), but we\'ve taken considerable care in defining a flexible set of roles based on customer feedback. And of course, you can combine roles to meet your needs.\\r\\n\\r\\n[![brainCloud Team Member Roles](images/Roles_png.png)](images/Roles_png.png)\\r\\n\\r\\nRoles are assigned via the new **Administration | Permissions** page, which is accessible by Team Administrators. You can view the individual privileges that make up each role via the _Roles_ tab of\xa0the page.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Live Lock\\r\\n\\r\\nWhile we were implementing our permissions system, we decided to go one step further, and implement an extra level of protection for Live apps. The result is our new Live Lock feature, which ensures that you don\'t inadvertently edit the configuration of your live app, even if you have the privileges to do so.\\r\\n\\r\\n![App Is Live](images/AppIsLive.png)\\r\\n\\r\\nOur new \\"App is Live\\" banner will display on the portal pages for live apps, and will prevent the app from being modified without the user first unlocking it. Once unlocked, the banner turns yellow as a warning to be careful. Apps\xa0remain\xa0unlocked for the duration of your session - so it won\'t unnecessarily affect your workflow.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Parse Import\\r\\n\\r\\nAs you might expect, brainCloud has seen an uptick in new sign-ups due to the Parse shutdown. We\'ve received great feedback from our\xa0new arrivals, who find that brainCloud not only matches Parse\'s featureset, but truly offers a whole lot more.\\r\\n\\r\\nIn an effort to be extra welcoming, we are pleased to roll-out Phase 1 of brainCloud\'s Parse Migration support - which allows for easy importing of Parse data into our Cloud Data\xa0system (as Global Entities). This facility is especially useful for teams that had Parse apps in development, and want to quickly import their data and keep moving forward with a\xa0brainCloud-based implementation.\\r\\n\\r\\n[![Parse to brainCloud](images/BC_TwitterBanner_1500x500_Parsetobc_02-1024x341.png)](images/BC_TwitterBanner_1500x500_Parsetobc_02.png)\\r\\n\\r\\nThis is just the first step of our plan to assist\xa0customers migrate their apps from Parse. Stay tuned as we add additional features in the coming weeks, and be sure to fill in our [Parse Migration\xa0Survey](https://www.surveymonkey.com/r/W93BKYC) to ensure that\xa0your requirements are heard.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### New <Beta\\\\> API Reference\\r\\n\\r\\nNew, faster, more searchable API documentation? Don\'t mind if we do!\\r\\n\\r\\n[![New API Docs](images/BAN_New-API_03.png)](/api/introduction)\\r\\n\\r\\nThe new system is in\xa0beta, and the examples focus primarily on C# for now - but we think it\'s already better than the old reference documentation\xa0- so we\'re releasing it early.\xa0Going forward, our overview and tutorials will remain under the Docs header, with service and method references in the new system under API.\\r\\n\\r\\nLet us know what you think! Check out the new docs [here](/learn/introduction)!\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Swift and Objective-C CocoaPods\\r\\n\\r\\nWe\'ve totally refactored our Apple libraries to work better with Swift and Objective-C, and\xa0repackaged them\xa0using [CocoaPods](https://cocoapods.org) to make them easier to integrate into your projects.\\r\\n\\r\\nThere are two CocoaPod libraries available:\\r\\n\\r\\n- [BrainCloud](https://cocoapods.org/pods/BrainCloud) - for Objective-C and Swift projects\\r\\n- [BrainCloudCpp](https://cocoapods.org/pods/BrainCloudCpp) - for C++ projects\\r\\n\\r\\nThese libraries support iOS, OS X and tvOS.\\r\\n\\r\\nYou can find more information on using CocoaPods in your Xcode project in their [Guides section](https://guides.cocoapods.org/).\\r\\n\\r\\n* * *\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nThe following changes have been made to the Design Portal:\\r\\n\\r\\n- **(New) Administration | Permissions screen** - used to set per-app permissions for your Team Members. Only accessible\xa0by Team Administrators.\\r\\n- **(New) Live Lock banner** - tells you whether you app is live, and allows you to unlock it for editing.\\r\\n- **(New) Parse Import** - available from the **Global Monitoring | Global Entity** screen.\\r\\n- **(Improved) User Monitor** - we now display the User\'s Profile picture if they have attached their Facebook identity.\\r\\n- **(Improved) Select Team screen** - we\'ve updated the look of the Select Team screen that appears immediately upon login. And as a bonus, it automatically remembers the last team that you logged into - allowing you to quickly skip past by clicking the [Continue] button\\r\\n- **(Improved) Edit Profile dialog** - you can view your app access permissions by choosing Edit Profile from the sign out\xa0menu drop-down.\\r\\n- **(Improved) Log Viewer** - you can now click through from the Global Logs to the User Logs by clicking on the profile id in any log entry.\\r\\n- **(Improved) Analytics Charts**\xa0- improved and standardized the colors used in the charts on our Analytics page.\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## API Changes\\r\\n\\r\\nThere have been significant changes to the error handling and communication subsystems in several of the libraries. We recommend that you test well before updating clients in the field.\\r\\n\\r\\n- Network Error Message Caching\\r\\n    - This feature allows you to cache in-transit messages to the brainCloud server when a network error occurs.\\r\\n    - More details can be [found here](/learn/sdk-tutorials/general-api-tutorials/network-error-message-caching/)\\r\\n- Global Error callback\\r\\n    - brainCloud now allows you to register a Global Error callback method which is called anytime an error is encountered.\\r\\n- Authentication methods returning 202 error now go to error callback.\\r\\n    - This only applies to C++ and Unreal libraries. If you\'d prefer the old behaviour, you call BrainCloudClient.setErrorCallbackOn202Status(false)\\r\\n- New Matchmaking API call\\r\\n    - FindPlayerWithFilterAndAttributes() method added - allows the system to narrow the list of candidates before sending each candidate to the players custom filter. Useful for when the population of users you are looking for is a very small portion of the overall population.\\r\\n- Improved Web Service APIs\\r\\n    - We\'ve added support for POST operations with external web services\\r\\n    - We\'ve also simplified the API so that you don\'t have to repeat the URL being used (since you\'re already declaring the URL as part of the external service configuration)\\r\\n- Push Notifications\\r\\n    - New server-to-server method, [SendNormalizedToSegments()](/api/s2s/pushnotification/sendnormalizedtosegments), for sending push notifications with custom parameters\\r\\n    - New server-to-server method for returning a list of segments\\r\\n- Leaderboards\\r\\n    - Social Leaderboard calls now properly support LOWER\\\\_IS\\\\_BETTER leaderboards by returning the results in ascending order\\r\\n- Miscellaneous\\r\\n    - New method for looking up a user\'s credentials given their profileId - [GetExternalIdForProfileId()](/api/capi/friend/getexternalidforprofileid)\\r\\n    - [UpdateContactEmail()](/api/capi/playerstate/updatecontactemail) method added which allows you to update the user\'s email address (used for informational purposes, not authentication, which is controlled via the EmailIdentity)\\r\\n    - Added API for generating anonymous id (GUID) to the Android / Java libs\\r\\n\\r\\n\xa0\\r\\n\\r\\n* * *\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- New Apple SDKs! \xa0Our new iOS / Mac OS X / Apple TV SDKs have been revamped with better Objective-C and Swift support - and are now packaged using **CocoaPods** for easy addition to your projects!\\r\\n- Revamped the Android Getting Started documentation\\r\\n- Roku has been added as a supported platform\\r\\n- New Marmalade C++ Client SDK\\r\\n- Improved searching for users in User Monitoring - search now looks for a sub-string of the text entered\\r\\n- Improved user\xa0logs performance\\r\\n- Miscellaneous fixes and performance improvements"},{"id":"/2016/01/27/release-2-20-0","metadata":{"permalink":"/braincloud-apiref/release/2016/01/27/release-2-20-0","source":"@site/release/2016-01-27-release-2-20-0/index.md","title":"Release 2.20.0","description":"We hope the holidays were good to everyone.\xa0The brainCloud team took a few days to relax and regroup with family, and now we\'re back at it. \xa0Release 2.20.0\xa0delivers some key customer-requested\xa0features, and sets the stage for a bunch more.","date":"2016-01-27T00:00:00.000Z","formattedDate":"January 27, 2016","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":4.72,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.20.0","date":"2016-01-27","tags":["release-history"]},"prevItem":{"title":"Release 2.21.0","permalink":"/braincloud-apiref/release/2016/03/03/release-2-21-0"},"nextItem":{"title":"Release 2.19.0","permalink":"/braincloud-apiref/release/2015/12/17/release-2-19-0"}},"content":"We hope the holidays were good to everyone.\xa0The brainCloud team took a few days to relax and regroup with family, and now we\'re back at it. \xa0Release **2.20.0**\xa0delivers some key customer-requested\xa0features, and sets the stage for a bunch more.\\r\\n\\r\\nWithout further ado, here\'s what we\'ve got.\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\n- **Multi-team Accounts** - brainCloud now allows your Team Member\xa0(i.e. Developer) account to be associated with multiple Teams (i.e. Companies). This is a much-requested feature, and will be especially useful to developers working on apps for multiple client companies, those with developer-publisher relationships, etc. You\xa0will immediately\xa0notice the new **Team Selection** dialog that displays after logging into the portal.\\r\\n\\r\\n[![SelectTeam](images/SelectTeam.png)](images/SelectTeam.png)\\r\\n\\r\\n- **Team Administrators** - As part of the\xa0Multi-team feature, we added the\xa0concept of Team Administrators. Now, only team administrators can perform team-level operations like\xa0Manage\xa0Users, Manage and Publish\xa0Apps,\xa0Edit company billing info, etc. Note - this does not affect the access of data within individual apps -\xa0all team members\xa0still have full privileges. This is the first step towards the **Role Security**\xa0feature that is currently in development. __Note that all existing\xa0users have Team Administrator access by default - you\'ll want to go to Admin | Team Members and adjust this permission accordingly.__\\r\\n\\r\\n- **User Files** - this release brings support for\xa0storage of User Files - that is, binary files that are associated with individual apps (as opposed to our Custom Files, which are global). User Files can be organized by path (directories), can have shareable URLs, and can be up to 20 MB in size. The C++, C# (.Net/Unity), and\xa0Objective-C\xa0libraries\xa0have all been updated to support our new File APIs - which include support for uploading, listing, retrieving and managing files. Support for the other libraries will follow soon.\xa0__Note - User Files are not yet visible in the Design Portal - that feature will be in an upcoming release.__\\r\\n\\r\\n- **New Segment Criteria** - we\'ve added support for two new pieces of Segment Criteria: timezones and AB Test ID. Timezones are as you\'d expect - the timezone that a user is in. The AB Test ID is a random number between 0 and 99 that gets assigned to every new user when they are created. If, for example, you\'d like to try a sales promotion with half of your user base (to see if it effects their monetization) you could define a segment for AB Seed values of 0-49, and then associate the Promotion and any push notifications with that Segment. Note that AB Test IDs are also included\xa0in the Identity data that gets passed through our DataStream Architecture - so you can hookup any number of back-end tools to analyze the behavioural results of such a test.\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\n- **Team is the New Company**\xa0- given the new Multi-Team feature,\xa0the portal is now largely using the word \\"team\\"\xa0in place of \\"company\\", which will now be used primarily for billing purposes.\\r\\n- **Team Selection** - you\'ll immediately notice the new Team Selection page that displays immediately upon logging into the portal. Just choose your team and you\'re into the same portal interface you\'re used to -- you are only ever logged into a single team at a time. But never fear, switching active teams is quick and easy - just click on the team name from the right-hand-corner menu.\\r\\n\\r\\n[![Switch_company](images/Switch_company.png)](images/Switch_company.png)\\r\\n\\r\\n- **Team Members Screen** - has been revamped to show whether a member has Team Administrator privilege, and who how many apps they have access to. Currently all users have access to all apps, but that will change when we add our **Role Security** feature in the near future. Also note that you no longer _**Delete**_ team members, you _**Remove**_ them from your team. The user\'s\xa0**TeamMember** account will continue to exist - allowing it to still be used to log into other teams.\\r\\n- **Edit Team Member**\xa0- Users may now change their e-mail address, as well as their password. Team Members (even Team Administrators) may no longer change another Team Member\'s password.\\r\\n- **Reporting | API Usage**\xa0- File Storage stats are now reported in the section with File Transfer stats. _Note - we don\'t currently extrapolate the amount of storage that we think will be used by the end of the month._\\r\\n- **Timezones** - we\'ve expanded the list of options in the Timezone selector of the portal. You are welcome Newfoundland! :)\\r\\n\\r\\n## API \xa0Changes / Additions\\r\\n\\r\\n- New User Files API -\xa0A robust API for uploading, listing, and managing files. Supports files up to 20MB in size. See the BrainCloudFile api docs page.\\r\\n- Update Picture URL - now that you can upload files, it makes sense that users can have custom profile pics. So just upload the file (with a shareable URL), and then set the picture URL accordingly.\\r\\n- Session expiry - the Client Libraries have been enhanced to better handle session errors (session expired, invalidated due to login, etc.). This includes fixing heartbeats so that they no longer get sent if the session is gone.\\r\\n- Client libraries have been updated for this release. As always, if your app is currently live, we recommend that you test thoroughly before\xa0releasing on the updated libraries.\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\n- New, clearer\xa0error message returned when\xa0apps \\"in development\\" have reached their daily active user limit.\\r\\n- System now returns better error information if Google Push support has not been properly configured.\\r\\n- Additional data integrity checks when deleting dependent items in the portal - i.e. deleting an Achivement that is referred to by an XP Level, etc.\\r\\n- Apple and Android device tokens (for push notifications) are now deleted if they are reported as invalid by Apple and/or Google\'s servers.\\r\\n- Miscellaneour fixes and performance improvements"},{"id":"/2015/12/17/release-2-19-0","metadata":{"permalink":"/braincloud-apiref/release/2015/12/17/release-2-19-0","source":"@site/release/2015-12-17-release-2-19-0/index.md","title":"Release 2.19.0","description":"Firstly, a\xa0reminder that we are on reduced support availability over the holidays while our team spends some well-earned time with their families (Dec 24th, 2015 - Jan 4th, 2016). \xa0The servers of course will still be fully monitored, and we\'re definitely still available to respond to emergencies.","date":"2015-12-17T00:00:00.000Z","formattedDate":"December 17, 2015","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":4.195,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.19.0","date":"2015-12-17","tags":["release-history"]},"prevItem":{"title":"Release 2.20.0","permalink":"/braincloud-apiref/release/2016/01/27/release-2-20-0"},"nextItem":{"title":"Release 2.18.0","permalink":"/braincloud-apiref/release/2015/12/03/release-2-18-0"}},"content":"Firstly, a\xa0reminder that we are on _reduced support availability over the holidays_ while our team spends some well-earned time with their families (Dec 24th, 2015 - Jan 4th, 2016). \xa0The servers of course will still be fully monitored, and we\'re definitely still available to respond to emergencies.\\r\\n\\r\\nThis being our\xa0holiday release, we thought we\'d try to finish off the year by focusing on a few more customer requests. There\'s something in here for everyone!\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\nKey features of this release include:\\r\\n\\r\\n- **Profanity Filter API + WebPurify Integration** - we\'ve had several requests from developers\xa0to support profanity filtering in the platform. Although simple enough in concept, profanity filtering gets pretty complicated when you start taking into account multiple languages, custom whitelists and blacklists, identifying vs. replacing profane strings, etc. We\'ve addressed this in two parts - we\'ve added a new abstract Profanity Filter API to brainCloud, and partnered with the good folks at\xa0[WebPurify](http://www.webpurify.com) to allow you to easily add profanity filtering to your apps.\\r\\n- **User Export [Beta]**\xa0-\xa0we\'ve always said that brainCloud\'s data is _your_ data - and we\xa0happily provide custom exports when requested. That said,\xa0it\'s a lot more efficient to provide a way for you to export your user data yourself - which is of course what our new **User Export** feature is for. So, whether you are looking to do some additional analytics analysis, or maybe import your user e-mails\xa0into a mailing list platform - brainCloud now supports exporting the data you need in both .CSV and .JSON formats.\\r\\n- **Idle timeouts** - we\'ve refactored how the Design\xa0Portal handles user timeouts. To start, we\'ve extended the timeout to 1 hour (from 20 minutes) - but we\'ve also added a dialog to _warn_ you that the session is about to timeout, and to definitely tell you once you _have_ timed out. We\'re much happier with the new system. Let us know what you think.\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nChanges to the portal:\\r\\n\\r\\n- **WebPurify Integration settings** - can be found in **Design | Integrations | Manage Integrations**. You simply enter the WebPurify API key, and choose what languages to filter on. Note that you can choose to automatically filter the user\'s name field. If selected, brainCloud will automatically filter all calls to UpdatePlayerName() - and raise an exception if the name contains profanity. **You can get a WebPurify account for as little as $15 / month at [www.webpurify.com](http://www.webpurify.com)**. _Note that for brainCloud billing purposes, calls to WebPurify are counted as an external web service API call._\\r\\n- **Refresh button in Custom Files** - we now cache the list of custom files, so we no longer have to access the file system to retrieve the directory. \xa0This cache is updated each time a new file is added or deleted - but should you have reason to think that it\'s out-of-date, just hit the **[Refresh File List]** button on the **Design | Custom Config | \xa0Files** page.\\r\\n- **Export User Data** -\xa0available under **Reporting**. \xa0You can specify some\xa0filter criteria for which users to export, as well as select what types of data to include. We support both .CSV and .JSON file formats. Note - there are more data options associated with the JSON format (since it\'s more flexible).\\r\\n- **Web Idle Timer** - we\'ve refactored how the web portal handles user timeouts. We\'ve extended them timeouts, added better activity tracking, and improved the communication of when the session has expired.\xa0Let us know what you think.\\r\\n\\r\\n\xa0\\r\\n\\r\\n## API Changes / Additions\\r\\n\\r\\nChanges and additions to the API:\\r\\n\\r\\n- **Profanity Filter API** - There are 3 key methods for the Profanity Filter API - ProfanityCheck() returns true if foul language is found; ProfanityReplaceText() will actually replace bad words with a substitution character that you provide; and ProfanityIdentifyBadWords() returns a list of the bad words found (mostly useful for debugging). Remember, you need to set up a [WebPurify()](http://www.webpurify.com) account to enable these APIs.\\r\\n- **Player State\xa0JSON enhancements** - we\'ve enhanced our Authentication and ReadPlayerState() calls to return additional user data - basically all the info that is displayed in the **User Summary** page of **User Monitoring**. So in addition to the slew of data that was already being returned, you now get `emailAddress`,\xa0`createdAt`, `lastLogin`, `previousLogin`, `language`, `timezoneOffset`, `amountSpent` (in cents) and `refundCount`. \xa0_Note that `amountSpent` refers to the reference price that you specify in the IAP entries, and is not a precise estimate of what a user paid, since it doesn\'t take into account currency exchanges, the platform\'s take, etc._\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\nAdditional improvements to this release:\\r\\n\\r\\n- Big performance boost to\xa0GetFileList() and GetUpdatedFiles(). \xa0We now cache the data instead of reading from the file system each time - so performance is now\xa0approximately 3 times faster!\\r\\n- brainCloud is now available directly from the [Unity Asset Store](https://www.assetstore.unity3d.com/en/#!/content/50220)! \xa0(The\xa0[brainCloud Bombers](https://www.assetstore.unity3d.com/en/#!/content/50656) and [brainCloud Space Shooter](https://www.assetstore.unity3d.com/en/#!/content/50279) example games are there too!) \xa0Feel free to drop by and give us a review! :)\\r\\n- All client libraries have been updated with the latest APIs\\r\\n- Misc defect and performance fixes"},{"id":"/2015/12/03/release-2-18-0","metadata":{"permalink":"/braincloud-apiref/release/2015/12/03/release-2-18-0","source":"@site/release/2015-12-03-release-2-18-0/index.md","title":"Release 2.18.0","description":"Release Highlights","date":"2015-12-03T00:00:00.000Z","formattedDate":"December 3, 2015","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":6.445,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.18.0","date":"2015-12-03","tags":["release-history"]},"prevItem":{"title":"Release 2.19.0","permalink":"/braincloud-apiref/release/2015/12/17/release-2-19-0"},"nextItem":{"title":"Release 2.17.0","permalink":"/braincloud-apiref/release/2015/11/05/release-2-17-0"}},"content":"## Release Highlights\\r\\n\\r\\nThis release\xa0marks the debut\xa0appearance of a key roadmap item for brainCloud - our **DataStream Architecture**. Currently in _beta_, the concept behind DataStream is to enable a meaningful flow of data and events\xa0from your apps to\xa0value-added tools. And to do this as painlessly as possible - i.e. little to no client code - leveraging the data and server-side interactions that\xa0brainCloud already knows about.\\r\\n\\r\\n[![brainCloud DataStream Architecture](images/brainCloud_datastream_architecture-1024x654.png)](images/brainCloud_datastream_architecture.png)\\r\\n\\r\\n\xa0\\r\\n\\r\\nDataStream is being implemented with the concept of _extensible channels_ - which will be used to enable a great variety of integrations.\\r\\n\\r\\nOur first channel is a doozy - [Segment.com](https://segment.com/overview). \xa0Connecting to\xa0Segment instantly gives us [over 100 service\xa0integrations](https://segment.com/integrations)\xa0- including [MixPanel](https://segment.com/docs/integrations/mixpanel/), [Google Analytics](https://segment.com/docs/integrations/google-analytics/), [Heap](https://heapanalytics.com),\xa0[Treasure Data](https://segment.com/docs/integrations/treasure-data/) and more. \xa0There\'s even support for [generic webhooks](https://segment.com/docs/integrations/webhooks/).\\r\\n\\r\\nTrying out DataStream is very simple. To do so:\\r\\n\\r\\n- Register for a free [Segment](http://www.segment.com)\xa0Developer account, and create a project to use\\r\\n- Go to the brainCloud portal, and enter the Segment project information in the new\xa0**Design | Integration** section\\r\\n- Optionally connect another service to Segment - like _MixPanel_, _Google Analytics_, etc.\\r\\n\\r\\nThat\'s it - once you do this brainCloud will immediately begin sending the following events:\\r\\n\\r\\n- _Identify_ - contains base information (like profile id, name, e-mail etc) about a user interacting with Segment. Sent before we send any other events associated with that user.\\r\\n- _Login_ - triggered when a user logs in (via the Authenticate API)\\r\\n- _Register_ - triggered when a new user account is created (via the Authenticate API)\\r\\n- _RecordedScore_ - triggered when a user posts a score to a leaderboard\\r\\n- _LevelledUp_ - triggered when a user gains an experience level\\r\\n- _AwardedAchievement_ - triggered when a user is awarded an achievement\\r\\n- _AwardedMilestone_ - triggered when a user is awarded a milestone\\r\\n- _AwardedQuest_ - triggered when a user is awarded a quest\\r\\n- _WasSentNotification_ - triggered when a remote push notification was sent to the user\\r\\n- _CompletedOrder_ - triggered when a user completes an IAP purchase\\r\\n\\r\\nIn addition, your app can send custom events of it\'s own (from the client or via Cloud Code). \xa0There is a new DataStream service with three methods to support this:\\r\\n\\r\\n- _CustomTrackEvent_ - used to track custom user behaviours throughout your app - for example, a puzzle game might record \\"RoundStarted\\" with information on what round\xa0the user is playing, and what boosts they\'ve selected for the round, together with a \\"RoundCompleted\\" event that summarizes the results. _CustomTrackEvent()_\xa0takes as parameters the name of the event, and set of custom key+value pairs for attributes.\\r\\n- _CustomScreenEvent_ - used\xa0to record that the user i\\r\\n- _CustomPageEvent_ - same as the above, but oriented toward web pages\\r\\n\\r\\n_Billing note -\xa0in addition to the regular tracking of API calls, each event sent out on a\xa0DataStream Channel counts as an\xa0additional API count._\\r\\n\\r\\nWe are very excited about the new possibilities that DataStream opens up for brainCloud apps - give it a try and send us feedback!\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Additional Highlights\\r\\n\\r\\nAdditional features of this release include:\\r\\n\\r\\n- **Push Notification refactoring** - we\'ve refactored our push notification support to make it more efficient and reliable. Although none of the existing Client APIs have changed, you\'ll notice:\\r\\n    - **_Device tokens now expire_** after a settable period of time. This helps to keep all tokens recent and reliable, and also to ensure you\'re not wasting\xa0API counts sending notifications to long-gone users.\\r\\n    - **_Invalid Device\xa0Tokens_** (flagged by iOS and Android servers)\xa0are now _automatically removed_ from profiles\\r\\n    - _**Devices will\xa0no longer\xa0receive notifications from multiple users**_ - if your app allows users to log in and out, it was possible to end up with multiple users with the same hardware device token. This is no longer possible - a token can now be associated with one and only one user. \xa0That said, if you allow users to log out, you will call the new _RemoveDeviceToken()_ call just before the logout, to ensure that the user\'s profile\xa0no longer refers to the device.\\r\\n    - There is a new **Delete All Tokens** menu option in the **Design | Notifications | Settings** screen, which allows you to clear all tokens of specific type (iOS, Android, etc.). \xa0This is useful for when you switch between Sandbox and Production certificates on iOS, and you want to delete all the old tokens.\\r\\n- **Redemption Code Improvements** - we\'ve made some changes under the covers to make our implementation more efficient at high volumes of codes. The biggest change is that scan codes are no longer local to a code type, but are now global across all code types for an app id. This saves us a bunch of index space, and in practice better matches the datasets of our customers anyway.\\r\\n- **API Pre- and Post- Hook\xa0Improvements** - we\'ve improved the capabilities of **API Pre- and Post- Hooks**. As you may or may not know, Pre- and Post- hooks allow you to change the behaviours of brainCloud\'s API calls themselves - inserting code to be run before and/or after the API call completes. Pre-hooks can now have the ability to change the parameters being sent into the API call. \xa0And Post-hooks can now access the original parameters sent to the API (providing useful context).\\r\\n- **Updated Unreal plug-in** - Finally, we\'ve made improvements to our _Online Subsystem_ portion of our Unreal 4 libraries.\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nChanges to the portal:\\r\\n\\r\\n- **Moved Email Authentication\xa0section** - we\'ve moved the _Email Authentication_ settings from the _Advanced\xa0Settings_ page to their own page under **Design | Authentication**.\\r\\n- **New\xa0Integrations section** - we\'ve added a new **Design | Integrations** section, which currently contains only the\xa0Segment integration from our new DataStream feature\\r\\n- **Revamped Notification\xa0Settings** - the settings dialogs have been revamped to be clearer, and we\'ve added an expiry drop-down. \xa0You can also choose to delete existing\xa0iOS or Android device tokens.\\r\\n- **Get Test Redemption Codes** - you can now search your datafill for a\xa0redemption code to use during testing. \xa0You the Type and State of the code, and brainCloud will display the first one that matches. Available from the **Global Monitoring | Redemption Codes** screen.\\r\\n- **Reset Universal Authentication passwords**\xa0- you\xa0may now reset the password of Universal Authentication users via the design portal. Simply choose the _Set Password_ option in the new action menu displayed in the _Credentials_ section of the **User Monitoring | User Summary** page.\\r\\n- **Managing Device Tokens** -\xa0device tokens are used to push notifications to iOS and Android devices. The device tokens section of\xa0the **User Summary** page has been updated to display when the token was last registered (note - brainCloud only applies\xa0the first registration within\xa0a 24-hour period), and has a new **[Reset Device Tokens]** button to delete all the existing tokens for this user.\\r\\n\\r\\n\xa0\\r\\n\\r\\n## API Changes / Additions\\r\\n\\r\\nChanges and additions to the API:\\r\\n\\r\\n- **Push Notification Tokens** -\xa0two methods have been added to allow client apps\xa0greater control over the device tokens associated with user accounts. \xa0DeregisterPushNotificationDeviceToken() will delete the associated device token from the user profile (), and DeregisterAllPushNotificationDeviceTokens() will delete all tokens associated with the user... (useful if you app contains a global toggle to disable all notifications to the user - as it will delete all notification tokens for this user, not just the token associated with the current device).\\r\\n- **DataStream Events** - as mentioned in the highlights section above, new API calls have been added for custom DataStream events\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Miscellaneous Changes / Fixes\\r\\n\\r\\nAdditional improvements to this release:\\r\\n\\r\\n- Adjusted\xa0S2S Explorer so that it returns results in alignment with the API Explorer\\r\\n- Added GlobalApp proxy to Cloud Code bridge\\r\\n- Refactored C++ Comms to push common code into a single class\\r\\n- Fixes to API Hook\xa0error handling - more descriptive error messages\\r\\n- Miscellaneous fixes and performance improvements"},{"id":"/2015/11/05/release-2-17-0","metadata":{"permalink":"/braincloud-apiref/release/2015/11/05/release-2-17-0","source":"@site/release/2015-11-05-release-2-17-0/index.md","title":"Release 2.17.0","description":"BCTwitterPromo39","date":"2015-11-05T00:00:00.000Z","formattedDate":"November 5, 2015","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":6.76,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.17.0","date":"2015-11-05","tags":["release-history"]},"prevItem":{"title":"Release 2.18.0","permalink":"/braincloud-apiref/release/2015/12/03/release-2-18-0"},"nextItem":{"title":"Release 2.16.0","permalink":"/braincloud-apiref/release/2015/10/09/release-2-16-0"}},"content":"## ![BC_TwitterPromo_39](images/BC_TwitterPromo_39-1024x512.png)\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\nKey features in this release:\\r\\n\\r\\n- **Apple TV Support!** We\'ve updated our libraries to support the new Apple TV. We can\'t wait to see what you build!\\r\\n- **Unreal Blueprint Support!** It\'s been a long time coming, but we\'re pleased to finally announce the availability of our [Unreal plug-in](/learn/sdk-tutorials/unreal-tutorials/), with Blueprint, C++, and [basic] Online Subsystem support.\\r\\n- **Redemption Codes** \\\\- Planning\xa0to distribute individual codes to unlock characters / cards / etc. in your game? brainCloud\'s\xa0new redemption code system is exactly what you need. More info on the feature and it\'s API here.\\r\\n- **Long-running Cloud Code**\xa0- we\'ve added support for long-running Cloud Code scripts, and _adapted\xa0our Cloud Code billing strategy_\xa0to better support this use case. \xa0_More details\xa0below_.\\r\\n\\r\\nThose are the biggies, but there are a bunch of other\xa0changes and improvements in this release.\xa0Read on.\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nChanges to the portal:\\r\\n\\r\\n- **Improved Timezone support** - you can now specify the timezone used for viewing date+time data in the portal. \xa0Note that the timezone will initially default to UTC - but it will remember what you set it to. Use the control in the top-right-hand corner of the portal to change the displayed timezone at any time.\\r\\n- **Redemption Code Screens** - you\'ll find new screens for the Redemption Code feature under **Design | Marketplace**, **Global Monitoring** and **User Monitoring**.\\r\\n- **Apple TV platform support** - you\'ll find Apple TV entries in **Design | Core App Info | Platforms**, as well as iTunes pricing component of **Design | Marketplace | Products**\\r\\n- **Cloud Code Timeouts** - you can now set custom timeouts for your cloud code scripts from the **Design | Cloud Code | Edit Scripts** screen.\\r\\n- **Updated API Usage\xa0page** -\xa0the **Reporting | API Usage** page has been updated to support the new\xa0cloud code billing formulas\\r\\n\\r\\n\xa0\\r\\n\\r\\n## API Changes / Additions\\r\\n\\r\\nChanges and additions to the API:\\r\\n\\r\\n- **Redemption Code API** - added methods for Redeeming codes and retrieving the list of codes that have been redeemed by a user. The key client api methods are RedeemCode() and GetRedeemedCodes().\\r\\n- **Push Notifications to Segments** - you can now programmatically (via the Server-to-Server API) send push notifications to all of the members\xa0a Segment.\\r\\n- **Authentication Timeouts** - a new client method has been added to override the authentication timeout.\\r\\n- **Retrieve Multiple Social Leaderboards** - building a game with a Candy Crush-style map? We\'ve got a new API call that retrieves the top friend entries from up to 20 leaderboards that you specify. Great for putting profile pics of the lead scores onto your map! Check out GetMultiSocialLeaderboard().\\r\\n\\r\\nWe\'ve\xa0also made two more **important\xa0changes to the Client Libraries**:\\r\\n\\r\\n**_Error Handling Changes_**\\r\\n\\r\\nWe\'ve made some enhancements to how the brainCloud Server and Client libraries work together to communicate error information. \xa0Specifically, we\'ve enhanced the _<statusMessage\\\\>_ parameter for the error callback\xa0method to contain not only the textual message associated with the error, but actually the entire json result of the error.\\r\\n\\r\\nThis allows us to return more detailed error information, whose structure may vary on an operation by operation basis. \xa0For example, if authentication fails because the client app\'s version is obsolete, the returned error information can include a link to the app in the appstore to use to perform the software upgrade.\\r\\n\\r\\nIf by any chance your client app was parsing the _<statusMessage\\\\>_ - most apps weren\'t, because it wasn\'t very useful - you can still get the old data by referencing \\"statusMessage.statusMessage\\". \xa0Or, you can turn this new behaviour off using the BrainCloudClient.SetOldStyleStatusMessageErrorCallback() method.\\r\\n\\r\\n\xa0\\r\\n\\r\\n_**Unified\xa0Rewards Processing**_\\r\\n\\r\\nIn addition, we\'ve unified our rewards processing to invoke a standard Rewards Handler whenever rewards (achievements, xp, milestones and quests) are awarded from one of the many APIs that do so (i.e. authenticate, increment stats, stats event, etc.). \xa0You can now hook into that single\xa0handler to splash Achievement Unlocked onto the screen, Quest Completed!, etc... \xa0instead of duplicating that functionality across multiple handlers.\\r\\n\\r\\nAs part of this change, brainCloud no longer _automatically_ triggers the associated local platform Achievement. \xa0This platform-specific code was causing\xa0porting issues as we continue to expand the list of devices that we support. By centralizing the error handling it becomes very simple for the client apps to integrate what is in most cases a single line of code to trigger the local achievement.\\r\\n\\r\\nTo register for the new Rewards Callback, call RegisterRewardCallback() in your local library.\\r\\n\\r\\n_[Important note - the standard success and failure callbacks for the API calls still trigger. The rewards callback will trigger afterwards. Usage of the rewards callback is entirely optional.]_\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Miscellaneous Changes / Fixes:\\r\\n\\r\\nAdditional improvements to this release:\\r\\n\\r\\n- Fixed match expiry not working in certain situations\\r\\n- Added missing reason codes to clients\\r\\n- Improved timeout checking on errors in C++ client\\r\\n- Improved handling of iTunes subscriptions\\r\\n- Minor fix to version comparisons during authentication\\r\\n- Universal authentication no longer accepts blank passwords!\\r\\n- Removed entity sub-type from Player Monitor | Entities screen\\r\\n- Improvements to french translations in our portal!\\r\\n- Added Portal Warning for Microsoft Edge browser -\xa0stick with Chrome, Firefox or Safari for now\\r\\n- Improved the links to API docs in the Explorer\\r\\n- Miscellaneous documentation improvements\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Cloud Code Timeouts\\r\\n\\r\\nWhen we first added\xa0Cloud Code support, we envisioned folks using it primarily for optimizing their client-server calls, and/or implementing sensitive logic on the server. For that sort of usage, our standard 10-second watchdog timer made sense.\\r\\n\\r\\nBut then we added support for Scheduled Cloud Code jobs -\xa0and you guys blew the doors off our Cloud Code usage scenarios!\xa0All of a sudden folks could schedule daily, hourly, etc. scripts - and some of these scripts were making hundreds and even thousands of API calls when they run.\\r\\n\\r\\nIt didn\'t take long before\xa0folks started to hit the 10-second watchdog timer, which kills your script if its still running when the timer expires. The watchdog is there to ensure that our server doesn\'t get hit by javascript coding errors (think \\"infinite loops!\\"). Needless to say, it\'s an important part of ensuring that our servers\xa0remain safe and reliable when executing\xa0custom\xa0scripts.\\r\\n\\r\\nIn the short-term\xa0we had to raise that 10-second timeout globally across the system to keep some of our leading clients apps running properly. \xa0We\'re pleased to\xa0have our\xa0long-term solution in place now - which _allows developers to set a custom timeout value for their individual scripts_. \xa0All new scripts will default to **10-seconds** - but you can individually raise the timeout as high as 60 seconds. \xa0Note - if required, it\'s possible to raise it even higher. Just message our team to have them raise your limit.\\r\\n\\r\\n[caption id=\\"attachment\\\\_2197\\" align=\\"alignnone\\" width=\\"474\\"][![Setting cloud code timeouts](images/Cloud_Code_Timeouts-1024x366.jpg)](images/Cloud_Code_Timeouts.jpg) Setting cloud code timeouts[/caption]\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Billing Changes\\r\\n\\r\\nWe\'ve also tweaked how we count API calls to better reflect these new Cloud Code usage scenarios.\\r\\n\\r\\nAs you know, the power of cloud code is\xa0that combining a collection of API calls together into a single cloud code script performs better\xa0than making the calls individually from the client - and also taxes our servers less - so it\'s win:win. The new formulas for counting API calls under Cloud Code take this into account, and provide a fair balance of cost to the developer (you) and covering brainCloud server utilization (phew!).\\r\\n\\r\\nThe updated rules are as follows:\\r\\n\\r\\n- Calling a cloud code script counts as 1 API call (same as today)\\r\\n- The first three API calls from within an invoked cloud code script are **free**\\r\\n- Any remaining calls from within cloud scripts are discounted to\xa0**1/2 an API call**\\r\\n\\r\\nIf your app makes moderate use of cloud scripts, using them\xa0to string together common server requests\xa0(e.g. making a combined call to post a score, update player stats, and update a user entity describing the player\'s progress) -\xa0_this pricing update likely doesn\'t\xa0affect you at all_. \xa0**This includes\xa0the great majority of our customers today.**\\r\\n\\r\\nThis new strategy allows our customers the flexibility of running\xa0much more ambitious Cloud Code scripts - at a greatly\xa0reduced cost per API call invoked.\\r\\n\\r\\nIf you have any questions or concerns, don\'t hesitate to contact us through the support messaging system."},{"id":"/2015/10/09/release-2-16-0","metadata":{"permalink":"/braincloud-apiref/release/2015/10/09/release-2-16-0","source":"@site/release/2015-10-09-release-2-16-0/index.md","title":"Release 2.16.0","description":"Release Highlights","date":"2015-10-09T00:00:00.000Z","formattedDate":"October 9, 2015","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":3.78,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.16.0","date":"2015-10-09","tags":["release-history"]},"prevItem":{"title":"Release 2.17.0","permalink":"/braincloud-apiref/release/2015/11/05/release-2-17-0"},"nextItem":{"title":"Release 2.15.0","permalink":"/braincloud-apiref/release/2015/09/17/release-2-15-0"}},"content":"## Release Highlights\\r\\n\\r\\nKey features (and a fix) in this\xa0release:\\r\\n\\r\\n- **Parent\xa0Currency Enhancements** -\xa0you can now link parent currencies to the IAP Products in child apps. This means that if you\'re implementing a meta-currency across all your apps, you can configure\xa0products in the child apps that award\xa0the parent currency. _This completes the currency enhancements to our **Shared Accounts** feature._\\r\\n- **Parameterized Notification Templates**\xa0- by popular request,\xa0you can now include parameters in your notification templates,\xa0and invoke them using the new SendRichPushNotificationsWithParams()\xa0method. This is especially useful when you want to keep the definition of the notification text (with\xa0associated localizations) separate from the app code that invokes it.\\r\\n- **Authentication Fix:**\xa0 We\'ve\xa0made some key changes to how **Authentication Timeouts** are handled in all of the client libraries.\xa0The authentication timeout has been extended from 3\xa0seconds to 15 seconds - and automatic retry has been disabled for Authentication requests. The app can still retry, but that\'s at the discretion of the app developer (and assumably the user).\\r\\n\\r\\nAuthentication Fix Background: _We were finding that a small minority of\xa0(mostly slower) clients were timing out before receiving\xa0the response for Anonymous Authentication calls, especially during new account creation. When this occurred, the automatic retry behaviour of the clients was accidentally causing duplicate accounts to be created. This only applies to Anonymous Authentication calls - the other Authentication methods were not impacted by this behaviour._\\r\\n\\r\\n**We _strongly recommend_ that all developers upgrade to the 2.16 version of\xa0the brainCloud Client Libs.**\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nChanges to the portal:\\r\\n\\r\\n- **Multiple Currencies in Products** - While we were already upgrading products, we decided to add an often-requested feature. You may now link multiple virtual currencies to your in-app-purchase products - so if you want to give 5 bonus elixer with every bundle of 1000 coins that a user purchases, you can now easily do so. \xa0We applied some overall polish to the screen as well.\\r\\n- **Push Button Deploy** - you can now deploy changes from the development versions of your apps, straight to the production versions, without going through the export -> import process! Quicker and more reliable. Available under **Design | Core App Info | Admin Tools**.\\r\\n- **Improved Cloud Code Editor** - we\'ve improved the layout of our Cloud Code Editor. We\'ve moved the informational portion of the cloud code script (name, description, test parameters, etc.) onto a separate page - thus maximizing the editor space. And\xa0while we were at it, we improved the automatic sizing of the window itself.\\r\\n- **Job Queue**\xa0- we\'ve enhanced the Cloud Code Job Queue screen to show both the date+time that a job was _created_, as well as when the job is _scheduled to run_. \xa0The list is sortable by either, of course.\\r\\n- **Reset Device Tokens** - you can now clear the device tokens for a user from the User Summary screen. Device tokens are used when sending push notifications to a user.\\r\\n\\r\\n[![Cloud_code_editor_two_pane](images/Cloud_code_editor_two_pane-1024x631.jpg)](images/Cloud_code_editor_two_pane.jpg)\\r\\n\\r\\n\xa0\\r\\n\\r\\n## API Changes / Additions\\r\\n\\r\\nChanges and additions to the API:\\r\\n\\r\\n- **Paged User Entities** -\xa0we now have a paged API for User Entities, akin to the paged Global Entities API. \xa0See the APIDOCs for info on GetPage() and GetPageOffset().\\r\\n- **Matchmaking API** return results trimmed\xa0-\xa0turns out that there was a defect in our matchmaking APIs, and we were inadvertantly returning the _entire_ player object. \xa0This has been trimmed back to return the appropriate data as designed.\\r\\n- **Parameterized Notifications** - as mentioned in the highlights section, we now support passing dynamic parameters to rich notifications. \xa0See the SendRichPushNotificationsWithParams() call.\\r\\n- **Parent Currencies** - the Product APIs have been\xa0extended to accomodate parent currencies. To keep things compatible with current code, any parent currencies returned by these methods will be in their own `<parentCurrency>` json section, at a level peer to the current `<currency>` node.\\r\\n- **BrainCloudFriend.UpdateSummaryFriendData()** method has now been moved to BrainCloudPlayerState.UpdateSummaryFriendData(). The method in the Friend class has been deprecated.\\r\\n- **BrainCloudGamification.ReadGameStatisticsByCategory()** now moved to BrainCloudGlobalStatistics.ReadGlobalStatsByCategory()\\r\\n- **BrainCloudGamification.ReadPlayerStatisticsByCategory()**\xa0now moved to BrainCloudPlayerStatistics.ReadPlayerStatsByCategory()\\r\\n- **BrainCloudMatchMaking** methods **GetOneWayPlayers()** and **GetOneWayPlayersWithFilter()**\xa0have been renamed to\xa0**FindPlayers()** and\xa0**FindPlayersUsingFilter()** as these APIs can be used to find players for OneWay\xa0and Async matches.\\r\\n- **Retries and timeouts** are now configurable using the BrainCloudClient.SetPacketTimeouts() method. By passing in an array of values you can set both the timeout for each attempt, and consequently the number of attempts. The default is 3 attempts with 10 second intervals between (e.g. {10, 10, 10}).\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Misc. Changes / Fixes\\r\\n\\r\\nAdditional improvements in this release:\\r\\n\\r\\n- **New Client Library** - a\xa0Linux i386 library is now available\\r\\n- Miscellaneous fixes and performance improvements."},{"id":"/2015/09/17/release-2-15-0","metadata":{"permalink":"/braincloud-apiref/release/2015/09/17/release-2-15-0","source":"@site/release/2015-09-17-release-2-15-0/index.md","title":"Release 2.15.0","description":"Release Highlights","date":"2015-09-17T00:00:00.000Z","formattedDate":"September 17, 2015","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":3.105,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.15.0","date":"2015-09-17","tags":["release-history"]},"prevItem":{"title":"Release 2.16.0","permalink":"/braincloud-apiref/release/2015/10/09/release-2-16-0"},"nextItem":{"title":"Release 2.14.0","permalink":"/braincloud-apiref/release/2015/08/27/release-2-14-0"}},"content":"## Release Highlights\\r\\n\\r\\nHighlights of this release include:\\r\\n\\r\\n- **Shared Accounts** -\xa0highly requested feature - brainCloud now\xa0allows you to share user accounts\xa0across applications. \xa0This is achieved by creating a master profile (associated with a separate App ID), which is associated with individual child profiles for each app. This is\xa0extremely powerful for companies\xa0looking to link the players across a collection of\xa0games together, or to model sub-accounts under a single Home account for a household. \xa0[i.e. think set-top box]. For more information, see our [Shared Accounts](/learn/key-concepts/authentication/shared-accounts/) page in the API Docs.\\r\\n\\r\\n[![Shared Account Overview](images/Shared-Account-Overview-1024x353.png)](images/Shared-Account-Overview.png)\\r\\n\\r\\n\xa0\\r\\n\\r\\n- **Facebook Notifications** - we\'ve always had them, but\xa0you couldn\'t properly enable/disable them. Now you can turn them on/off in the **Design | Notifications | Settings** page on the portal. And note of course, that your app will need to ask for the appropriate Facebook permissions for them to work.\\r\\n- **Billing changes (Boo!)** - we\'ve now added support for monitoring and billing for excess file transfer usage. All Standard Plan apps get 10GB per month of free downloads. After that, it\'s $0.10 USD per GB. And note, we\'re only charging for the S3 file downloads - not for any of the data otherwise associated with API -- that\'s all covered by the API counts.\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nChanges to the portal:\\r\\n\\r\\n- **Shared Accounts** - configure parent-child app relationships under **Design | Authentication | Shared Accounts**.\\r\\n- **Parent Currencies** - a child app can include parent currencies in rewards for XP level-ups, Milestones, Quests and Statistics Events. All configurable under **Design | Gamification**. \xa0Parent Currencies are also visible on the Design | Marketplace | Virtual Currencies page.  _Note that you cannot yet award parent currencies for IAP Product Purchases [that will come next release]._\\r\\n- **Leaderboards** - we\'ve added a few additional \\"Are you sure?\\" checks to the process of resetting / deleting leaderboards, especially for live apps.\\r\\n- **Improved Error Reporting** - we\'ve improved our logging system to show errors from more sources, including Server-to-Server calls and Scheduled Cloud Code. \xa0We\'ve also added a new error category, \\"Sys Warnings\\". \xa0Check it out in **Global Monitoring | Recent Logs**.\\r\\n- **Profile Relations**\xa0-\xa0profiles with parent or child profiles will see them listed at the bottom of the\xa0**User Monitoring | User Summary** page, in a section called Relations. \xa0We\'ve also moved the **[Login as User]** button to the top of the page for convenience.\\r\\n\\r\\n\xa0\\r\\n\\r\\n## API Changes / Additions\\r\\n\\r\\nChanges and additions to the APIs:\\r\\n\\r\\n- **Shared Accounts** - related API enhancements:\\r\\n    - **Authenticate()** and **GetPlayerState()** methods now return the id of the parent profile (if there is one), as well as any parent currency balances\\r\\n    - New **Identity** methods for switching to/from parent and child accounts - SwitchToChildProfile(), SwitchToSingletonChildProfile(), SwitchToParentProfile() and GetChildProfiles().\\r\\n    - Enhancements to currency methods to support **Parent Currencies** - AwardParentCurrency(), ConsumeParentCurrency(), GetParentCurrency() and ResetParentCurrency()\\r\\n    - New **RunParentScript()** call to run a parent\'s Cloud Code script (in the context of the parent profile)\\r\\n- EnableLogging now implemented for **Windows Comms library**\\r\\n- **Objective-C library** - better handling of optional parameters\\r\\n- **Java library** - callback mechanism has been refined to better match the other libraries. Also, you can now receive\xa0separate error callbacks for individual API calls.\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Misc. Changes / Fixes\\r\\n\\r\\nAdditional improvements in this release:\\r\\n\\r\\n- Upgrade Push Notifications service - we\'ve upgraded our underlying Push Notification libraries for greater reliability\\r\\n- Updated game examples - we\'ve taken a pass through our examples to ensure that they\'re using our latest and greatest libraries\\r\\n- Match expiry - plugged some holes in our completion of matches on Expiry timeouts\\r\\n- Improved handling of database connections under load\\r\\n- Miscellaneous performance improvements - mostly improvements under-the-hood to our logging subsystems\\r\\n- Miscellaneous documentation improvements"},{"id":"/2015/08/27/release-2-14-0","metadata":{"permalink":"/braincloud-apiref/release/2015/08/27/release-2-14-0","source":"@site/release/2015-08-27-release-2-14-0/index.md","title":"Release 2.14.0","description":"Release Highlights","date":"2015-08-27T00:00:00.000Z","formattedDate":"August 27, 2015","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":1.22,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.14.0","date":"2015-08-27","tags":["release-history"]},"prevItem":{"title":"Release 2.15.0","permalink":"/braincloud-apiref/release/2015/09/17/release-2-15-0"},"nextItem":{"title":"Release 2.13.0","permalink":"/braincloud-apiref/release/2015/08/18/release-2-13-0"}},"content":"## Release Highlights\\r\\n\\r\\nHighlights of this release include:\\r\\n\\r\\n- **New Client Libs\\\\*** - new Linux C++ Client, Visual Studio 2008 and Visual Studio 2010.\\r\\n- **New Unity Example** - we\'ve built a UNET version of [brainCloud Bombers](/learn/sdk-tutorials/unity-tutorials/braincloud-bombers-example-game/)\\r\\n- **Performance optimizations** - ongoing optimizations to tune performance and scalability\\r\\n\\r\\n_\\\\* All other clients updated with the latest APIs, of course._\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nChanges to the portal:\\r\\n\\r\\n- **Linux is now a selectable\xa0platform** - see **Design | Core App Info | Platforms**\\r\\n- **Disable Event-checking**\xa0-\xa0If you aren\'t using events, you can disable checking for them in each message by unchecking the option in **Design | Core App Info | Compatibility Settings**\\r\\n- **Flexible User\xa0Deletion** -\xa0ability to _Delete all Test Users_, and _All but Test Users._ In portal under **Design | Core App Info | Admin Tools**\\r\\n- **File transfer usage** - now being reported in **API Usage** section of **Reporting**\\r\\n\\r\\n\xa0\\r\\n\\r\\n## API Changes / Additions\\r\\n\\r\\nChanges and additions to the APIs:\\r\\n\\r\\n- We\'re reworking our Events system a bit:\\r\\n    - **GetEvents()** method added to support directly polling for new events\\r\\n    - **Authenticate()**\xa0and **GetPlayerState()** continue to return incoming and sent events.\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Misc. Changes / Fixes\\r\\n\\r\\nAdditional improvements in this release:\\r\\n\\r\\n- Apple push notification certificates without passwords now work (before a password was \\\\*required\\\\*).\\r\\n- Improved error logs - script failures being more consistently logged now, and with more information\\r\\n- Improved matchmaking - we\'ve improved the randomness of our matchmaking routines"},{"id":"/2015/08/18/release-2-13-0","metadata":{"permalink":"/braincloud-apiref/release/2015/08/18/release-2-13-0","source":"@site/release/2015-08-18-release-2-13-0/index.md","title":"Release 2.13.0","description":"Release Highlights","date":"2015-08-18T00:00:00.000Z","formattedDate":"August 18, 2015","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":1.62,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.13.0","date":"2015-08-18","tags":["release-history"]},"prevItem":{"title":"Release 2.14.0","permalink":"/braincloud-apiref/release/2015/08/27/release-2-14-0"},"nextItem":{"title":"Release 2.12.0","permalink":"/braincloud-apiref/release/2015/07/24/release-2-12-0"}},"content":"## Release Highlights\\r\\n\\r\\nHighlights of this release include:\\r\\n\\r\\n- **New-and-Improved\xa0Objective-C Client** -\xa0we\'ve rebuilt our Objective-C client to support all our latest APIs.\\r\\n- **Twitter Authentication Support** - your users can now use Twitter to log into\xa0your app. How social!\\r\\n- **API Calls from Cloud Code are now free!\\\\*** As per our original intent, API calls from cloud code scripts are now free\\\\*. This incentivises you to write simple scripts to aggregate multiple calls - reducing round-trips to our servers, which reduces our costs - and in turn reduces yours!\\r\\n\\r\\n_\\\\* Minor adjustments to the Cloud Code billing strategy were introduced in [2.17](/release/2015/04/02/release-2-7-0) to accommodate long-running Cloud Code scripts._\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nChanges to the portal:\\r\\n\\r\\n- Developers can now set their brainCloud **App Secret** directly (see **Design | Core App Info | Application IDs**)\\r\\n- Developers can now view and edit the **Indexed ID** property of their **Global Entities** in the portal (see **Monitoring | Global Monitoring | Global Entities**). \xa0This field is useful for creating quick lookup keys for your entities.\\r\\n- The **Recently Added Users** page has been optimized (see **Monitoring | User Monitoring**)\\r\\n- API calls from within Cloud Code scripts are now\xa0displayed separately on the **Reporting | API Usage**\xa0page of the portal\\r\\n\\r\\n\xa0\\r\\n\\r\\n## API Changes / Additions\\r\\n\\r\\nChanges and additions to the APIs:\\r\\n\\r\\n- New Twitter Identity APIs - AuthenticateTwitter(), AttachTwitterIdentity(), DetachTwitterIdentity() and MergeTwitterIdentity().\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Misc. Changes / Fixes\\r\\n\\r\\nAdditional improvements in this release:\\r\\n\\r\\n- Updated\xa0Javascript Client - added missing Identity APIs, misc fixes, etc.\\r\\n- Performance optimizations:\\r\\n    - Improved Multiplayer Matchmaking performance\\r\\n    - Improved Leaderboard performance\\r\\n- Documentation Improvements:\\r\\n    - Java/Javascript Gamification methods\\r\\n    - Improved Multiplayer documentation\\r\\n    - Improved Push Notification\xa0documentation\\r\\n    - Improved Facebook IAP\xa0documentation\\r\\n- Misc. fixes and optimizations\\r\\n    - Fixes to push notifications subsystems to improve reliability\\r\\n    - Fixes to deletion of users - some credentials (e-mail + universal) were not always being deleted\\r\\n    - Improvements / fixes to leaderboard processing at high player counts"},{"id":"/2015/07/24/release-2-12-0","metadata":{"permalink":"/braincloud-apiref/release/2015/07/24/release-2-12-0","source":"@site/release/2015-07-24-release-2-12-0/index.md","title":"Release 2.12.0","description":"Release 2.12.0","date":"2015-07-24T00:00:00.000Z","formattedDate":"July 24, 2015","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":2.3,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.12.0","date":"2015-07-24","tags":["release-history"]},"prevItem":{"title":"Release 2.13.0","permalink":"/braincloud-apiref/release/2015/08/18/release-2-13-0"},"nextItem":{"title":"Release 2.11.0","permalink":"/braincloud-apiref/release/2015/06/30/release-2-11-0"}},"content":"## Release 2.12.0\\r\\n\\r\\nRelease 2.12.0 has gone public!\xa0There are some tasty goodies in this one - please read below for the highlights!\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\nHighlights of this release include:\\r\\n\\r\\n- **Scheduled Cloud Code** \\\\- you can now schedule cloud code scripts to run at a specific time.\xa0This tool is very powerful and gives you the ability to defer task execution as benefits your game/app. \xa0See [this page](/learn/cloud-code-central/handy-cloud-code-scripts/scriptscheduler-script/)\xa0for more information on how to use this\xa0great new feature.\\r\\n- **Paged Global Entity Fetches** \\\\- it is now possible to retrieve more than 100 Global Entities. We\'ve created a new paging system that allows you to navigate a larger set of Global Entities. The paging APIs use a sophisticated query syntax which gives you search and ordering flexibility. The query syntax is described [here](/api/appendix/genericpagedqueries)\xa0and the API itself can be found [here](/api/capi/globalentity/getpage).\\r\\n- **Support for \\"Lower Is Better\\" Leaderboards** \\\\- You can now create Leaderboards where the best score kept will be the lowest score the user has posted.\\r\\n- **S3 File Listing** - we\'ve created a new API that makes it even easier to fetch the list of files uploaded to S3.\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\n- **Global Monitoring |\xa0Job Queue** \\\\- this is where you\'ll find details about scheduled cloud script jobs. We also keep a history of jobs that have run in the past which is useful when diagnosing issues with your scripts.\\r\\n- **Design | Quests**\xa0-\xa0now include Unlock Criteria, and Rewards which can use any combination of user level/XP, player statistics or global statistics. Rewards can also pay out currency and/or achievements.\\r\\n- **Misc Fixes**\\r\\n\\r\\n## API Changes / Additions\\r\\n\\r\\n### New APIs\\r\\n\\r\\n- **Schedule Cloud Code** \\\\- To schedule cloud code you can use one of these [APIs](/api/capi/script/schedulerunscriptminutes).\\r\\n    - **BrainCloudScript.ScheduleRunScriptUTC()** for an absolute date.\\r\\n    - **BrainCloudScript.ScheduleRunScriptMinutes()** for scheduling x minutes from now.\\r\\n- **Global Entity Paged Fetches** \\\\- To fetch global entities by Page\\r\\n    - **BrainCloudGlobalEntity.GetPage()** \\\\- Call this for the first fetch, specifying the fetch query\\r\\n    - **BrainCloudGlobalEntity.GetPageOffset()** \\\\- Call this for subsequent fetches passing in the returned context variable\\r\\n- **BrainCloudFriend.FindPlayerByName()** \\\\- This API allows you to search for a player by their player name (settable using \\"BrainCloudPlayerState.UpdatePlayerName)\\r\\n- **Attach/Detach Google Identity** \\\\- To allow you to attach and detach Google identities.\\r\\n    - **BrainCloudIdentity.AttachGoogleIdentity()**\\r\\n    - ****BrainCloudIdentity.MergeGoogleIdentity()****\\r\\n    - **BrainCloudIdentity.DetachGoogleIdentity()**\\r\\n- **BrainCloudS3Handling.GetFileList()** \\\\- To retrieve the full list of S3 files stored on brainCloud\\r\\n\\r\\n### Modified APIs\\r\\n\\r\\n- **BrainCloudSocialLeaderboard** \\\\- Calls to\xa0TriggerSocialLeaderboardTournamentReward now require the use of a leaderboardId to identify the leaderboard.\\r\\n\\r\\n## Misc. Changes / Fixes\\r\\n\\r\\nAddressed in this release:\\r\\n\\r\\n- **Unity library IsAuthenticated** \\\\- Session time outs will now cause this flag to be set to false.\\r\\n- **Post score to dynamic leaderboard** \\\\- APIs now take in the hour/minute to allow setting the rotation time."},{"id":"/2015/06/30/release-2-11-0","metadata":{"permalink":"/braincloud-apiref/release/2015/06/30/release-2-11-0","source":"@site/release/2015-06-30-release-2-11-0/index.md","title":"Release 2.11.0","description":"We\'ve got a bunch of fixes and tweaks for you this week, plus a game\xa0to play with your family on the holiday week-end!","date":"2015-06-30T00:00:00.000Z","formattedDate":"June 30, 2015","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":4.065,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.11.0","date":"2015-06-30","tags":["release-history"]},"prevItem":{"title":"Release 2.12.0","permalink":"/braincloud-apiref/release/2015/07/24/release-2-12-0"},"nextItem":{"title":"Release 2.10.0","permalink":"/braincloud-apiref/release/2015/06/08/release-2-10-0"}},"content":"We\'ve got a bunch of fixes and tweaks for you this week, plus a game\xa0to play with your family on the holiday week-end!\\r\\n\\r\\n[![Icon_BCBombers](images/Icon_BCBombers-150x150.png)](images/Icon_BCBombers.png)\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\nHighlights of this release include:\\r\\n\\r\\n- **brainCloud Bombers** - we\'re pleased to announce the availability of our new example game, **brainCloud\xa0Bombers!** Bombers is\xa0intended to show how well brainCloud works with other multiplayer tech, like Exit Games Photon. The source for the game is available here, and we\'ve written several posts that talk about how the game was built and what features it uses. [Check it out!](/learn/sdk-tutorials/unity-tutorials/braincloud-bombers-example-game/)\\r\\n\\r\\n- **Leaderboard changes** - we\'ve made some changes to the way that leaderboard versioning / retention works. We used to version leaderboards based on a fixed start date + rotation period - which seemed pretty logical, but caused problems if you wanted to adjust the ration period/date+time, and \\\\*didn\'t\\\\* want to lose all your old leaderboards - d\'oh!\xa0So we\'ve changed that.\xa0Now if you adjust your leaderboard settings, they affect the leaderboard behaviour going forward, but do \\\\*not\\\\* affect the old leaderboard data at all. We\'ve also fixed some inconsistencies in our display of leaderboard date+time settings. Finally, to top it all off, we\'ve added new APIs to request data from old leaderboards.\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\nMinor changes to the portal:\\r\\n\\r\\n- **Design | Leaderboards** - fixed the leaderboard rotation date/time display to focus on when the next leaderboard rotation occurs, and to clarify UTC vs. local time settings. We\'ve also changed\xa0how the \\"Retained Leaderboards\\" setting works. It used to include the \\"current\\" leaderboard in the count - so you\'d have to set it to \\"2\\" to retain \\"1\\" leaderboard in addition to the current one. \xa0This was confusing, so we fixed it.\xa0_Don\'t worry - we\'re retaining your previous setting - so if you had it set to \\"2\\" before, it will now show \\"1\\" - but the two are equivalent._\\r\\n- **Global Monitoring | Leaderboards** - leaderboard entries now show the exact date+time of the entry.\\r\\n- **Design | Multiplayer | Offline Match-Making** - the\xa0_Match Expiry Timeout_ is now configurable on a per-game basis\\r\\n- **Global Monitoring** - the tabs\xa0have been reordered slightly.\\r\\n- **Authentication | External Identities** - minor changes to the screen\\r\\n\\r\\n\xa0\\r\\n\\r\\n## API Changes / Additions\\r\\n\\r\\nMinor additions and behavioural changes to the APIs:\\r\\n\\r\\n- **(New) Historical Leaderboard calls** - we\'ve added the ability to retrieve old leaderboards results.\\r\\n    - To retrieve a list of older versions of the leaderboard, call **`GetGlobalLeaderboardVersions()`**.\\r\\n    - To retrieve the entries for a specific version, call **`GetGlobalLeaderboardPageByVersion()`**.\\r\\n- **(New) Looking up friends**\xa0- we\'re adding support for looking up friends. More methods will be added next release.\\r\\n    - **`GetFriendProfileInfoFromExternalId()`** to look up other users based on their external id (returns the friend\'s summary data).\\r\\n- **(Change) User Entity Version\xa0exception\xa0handling**\\r\\n    - All variations of Update and Delete for user entities now throw an exception if the provided version is incorrect. \xa0[Used to simply return a null object]\\r\\n- **(Change) Cloud Code changes**\\r\\n    - Added the missing ServiceProxy for accessing **Global Properties** from\xa0cloud code\\r\\n    - **Script return format** has been\xa0updated to include separate status + data,\xa0to better align with the\xa0Client API.\\r\\n    - The old behaviour is preserved if _**[x] Use Legacy Script Result Format**_ is checked under _Compatibility Settings_ in **Design | Core App Info | Advanced Settings**. The old behaviour will be preserved\xa0by default for existing apps (though it is highly recommended that developers migrate to the new format when convenient).\\r\\n\\r\\n\xa0\\r\\n\\r\\n## Misc. Changes / Fixes\\r\\n\\r\\nAddressed in this release:\\r\\n\\r\\n- **Change to XP level processing** - you can now configure\xa0rewards for Experience Level\xa01, and assuming the level\'s\xa0XP requirement is set to 0 points, the player will automatically receive the rewards upon creation. _This is very useful for setting initial virtual currency balances._\\r\\n- **Global Stats Synchronization** - fixed issue with Global Stats not being synchronized across app servers (and in the portal) in some circumstances\\r\\n- **brainCloud now _requires_ encrypted (HTTPs) connections** for all new apps moving forward (_this was optional before_).\\r\\n- **C++ and C# Client Libs** - now retrieve heartbeat configuration settings from the server, and dynamically determine if a heartbeat needs to be sent. This should result in fewer API calls to keep your app sessions alive.\\r\\n- **Unity Toolbar** -\xa0An\xa0Enable logging option\xa0has been added\\r\\n- The old **`GetGlobalLeaderboard()`** API call has been deprecated (and removed from the API explorer and the documentation). It will still work for now, but you should use one of the newer methods, like **`GetGlobalLeaderboardPage()`** instead.\\r\\n- **API Explorer** - **`Gamification.UpdateRewards()`**\xa0method was missing - has been added\xa0Javascript client lib - Improved handling of optional parameters.\\r\\n- **brainCloud Support Chat** has been\xa0added to the API docs site\xa0- just click on the Chat button for help!\\r\\n- **Database\xa0optimization**\xa0- Improved sharding of Global Entities\\r\\n- **Attributes** - Fixed an issue where attempting to remove user attributes would fail.\\r\\n- Miscellaneous fixes and performance improvements"},{"id":"/2015/06/08/release-2-10-0","metadata":{"permalink":"/braincloud-apiref/release/2015/06/08/release-2-10-0","source":"@site/release/2015-06-08-release-2-10-0/index.md","title":"Release 2.10.0","description":"This week we\'re addressing a bunch of customer requests. If you\'re lucky, maybe you\'ll see your favorite new feature in here! Remember, keep the feedback coming - with your help we plan\xa0to make brainCloud the most flexible and friendly BaaS on the planet!","date":"2015-06-08T00:00:00.000Z","formattedDate":"June 8, 2015","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":2.98,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.10.0","date":"2015-06-08","tags":["release-history"]},"prevItem":{"title":"Release 2.11.0","permalink":"/braincloud-apiref/release/2015/06/30/release-2-11-0"},"nextItem":{"title":"Release 2.9.0","permalink":"/braincloud-apiref/release/2015/05/29/release-2-9-0"}},"content":"This week we\'re addressing a bunch of customer requests. If you\'re lucky, maybe you\'ll see your favorite new feature in here! Remember, keep the feedback coming - with your help we plan\xa0to make brainCloud the most flexible and friendly BaaS on the planet!\\r\\n\\r\\n## Release Highlights\\r\\n\\r\\nHighlights of this week\'s release include:\\r\\n\\r\\n- **Leaderboard Monitoring** - you can now view your game\'s leaderboards in the **Global Monitoring** section of the portal. Super useful during development, support/operations (catching cheaters!) and even for manually administering tournaments. Features include:\\r\\n    - Paging through the leaderboards\\r\\n    - View previous leaderboard versions\\r\\n    - Reset leaderboard - deletes _all_ entries (only works for the active leaderboard, not for previous versions)\\r\\n    - Delete leaderboard entry\\r\\n    - View user - jumps to a view of the user associated with the score\\r\\n- **Updated Javascript Client** - we\'ve revamped the Javascript Client to use native HTTP calls (instead of JQuery). Useful for embedded\xa0client environments where JQuery is not a viable option.\\r\\n- **Cloud Code Enhancements** - we\'ve enhanced and improved the ability to call cloud code scripts from other scripts. (Yay!). \xa0We\'ve also normalized the returns from the cloud code API methods vs. the native client API methods. Basically, both now have separate <result\\\\> and <data\\\\> sections. Because this will break existing scripts, we\'ve implemented a settings in **Advanced Settings** called **[x] Use Legacy Script Result Format**. \xa0This setting defaults to [x] True for all existing apps with cloud code, but [ ] False for everyone else. _We recommend migrating your scripts to work with the [ ] False setting when you have a chance._\\r\\n\\r\\n## Portal Changes\\r\\n\\r\\n- **Global Property\xa0Categories** - You probably already know that _Global Properties_ are super useful. They allow you to define all sorts of configuration and tuning parameters for your app, that can be adjusted and tweaked to adjust how the app behaves, without requiring new builds and client installs. Now - because some folks were building up large-ish libraries of these properties, we thought we\'d give you a way to better organize them. \xa0Voila: Categories! \xa0Note - categories do not affect the namespace of properties - all property names are global to your app.\\r\\n- New **Leaderboard Monitoring** - go to **Monitoring | Global Monitoring | Leaderboards** to view your players\' accomplishments in all their glory! _(see highlights section for details!)_\\r\\n- New _Compatibility_ section in the **Design | Advanced Settings** page\\r\\n\\r\\n## API Changes / Additions\\r\\n\\r\\n- **Leaderboard API\xa0optimization**\xa0- the json data returned by GetGlobalLeaderboardPage() and GetGlobalLeaderboardView() now includes\xa0the current _Friend Summary Data_ for the players referenced by the leaderboard entries. Useful for when you want to display\xa0additional information about the ranked player in the leaderboard (i.e. xp\xa0level, faction, etc.) without requiring an additional brainCloud\xa0call for each entry.\\r\\n- **Matchmaking optimization** - _Friend Summary Data_ has also been added to matchmaking results (for the same reason we did it for leaderboards!)\\r\\n- **HTTP Client Service improvement** - we\'ve enhanced the HTTP client Service accessible from Cloud Code to allow passage of query parameters as a map\\r\\n- **GetGlobalProperties() return data** fixed - it no longer returns description data. \xa0It was a defect (and a bandwidth hog)\xa0- so\xa0we\'ve fixed it.\\r\\n\\r\\n## Misc. Changes / Fixes\\r\\n\\r\\n- **Server optimizations** - we\'ve fixed our cloud code hook caching, so that it well, actually caches stuff now (whoopsie!). The unsurprising\xa0result is even faster processing of all API calls\\r\\n- **Client packet retry improved** \\\\- our clients now point to a new server end-point which better supports packet retries.\\r\\n- The API Explorer\'s _GetShieldExpiry()_ method has been fixed\\r\\n- Misc fixes and optimizations"},{"id":"/2015/05/29/release-2-9-0","metadata":{"permalink":"/braincloud-apiref/release/2015/05/29/release-2-9-0","source":"@site/release/2015-05-29-release-2-9-0/index.md","title":"Release 2.9.0","description":"In celebration of this week\'s\xa0Ottawa International Games Conference (OIGC), it\'s brainCloud Release 2.9!","date":"2015-05-29T00:00:00.000Z","formattedDate":"May 29, 2015","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":1.955,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.9.0","date":"2015-05-29","tags":["release-history"]},"prevItem":{"title":"Release 2.10.0","permalink":"/braincloud-apiref/release/2015/06/08/release-2-10-0"},"nextItem":{"title":"Release 2.8.0","permalink":"/braincloud-apiref/release/2015/05/07/release-2-8-0"}},"content":"In celebration of this week\'s\xa0[Ottawa International Games Conference (OIGC)](http://oigconf.com \\"OIGC\\"), it\'s brainCloud Release 2.9!\\r\\n\\r\\n_Nothing too earth-shattering in this release - some minor fixes and changes while we ramp\xa0up the development of some larger customer-requested features - coming soon!_\\r\\n\\r\\n\xa0\\r\\n\\r\\n# Release Highlights\\r\\n\\r\\n- **IAP Product Enhancements**\\r\\n    - **Categories** - Products can now be assigned to categories (i.e. \\"Gold bundles\\", \\"Elixer bundles\\", etc.), which is handy for retrieving lists of similar items for display in store screens.\\r\\n    - **Product Types** - brainCloud now allows you to specify whether an IAP product is _consumable_, _non-consumable_ or _subscription_ (with sub-types for\xa0Apple\'s _free_, _non-renewing_\xa0and _auto-renewable_ subscriptions). This additional information allows us to handle the various product types appropriately, in particular fixing our handling of auto-renewable subscriptions.\\r\\n    - **Extra Data** - developers are now able to append extra information\xa0(key + value pairs) to products\\r\\n- **Unity Client**\\r\\n    - We have significantly overhauled our Unity Client - improving its communications infrastructure, and adopting a new Json processing library (JsonFx)._Warning: as part of the Unity Client Refactoring, we have changed the Error\xa0callback/delegate signature so that you no longer have to parse the response Json.\xa0This change greatly simplifies your error processing, but is\xa0**not backwards compatible**. The older 2.8 libraries still function just fine though._\\r\\n\\r\\n\xa0\\r\\n\\r\\n# Portal Changes\\r\\n\\r\\n- **Design | Marketplace\xa0| Products** - added support for categories, product type / sub-type, and extra data\\r\\n- **Officially Supported Browsers** - the brainCloud portal is designed to work with\xa0Chrome, Safari and Firefox. \xa0Users of other browsers (<cough>IE</cough>) will be warned that they may experience issues. \xa0_[There are known refresh issues with IE.]_\\r\\n- **API Explorer** - the services and operations are now displayed in alphabetical order (FINALLY!) :)\\r\\n\\r\\n\xa0\\r\\n\\r\\n# API Changes / Additions\\r\\n\\r\\n- **GetSalesInventoryByCategory()** method added to Products service - used to retrieve all IAP products of a certain type.\\r\\n\\r\\n\xa0\\r\\n\\r\\n# Misc. Changes / Fixes\\r\\n\\r\\n- **Admin | Company Info** page -\xa0\xa0we now display the _user id for the billing account_ for easy reference\\r\\n- **JavaScript client** - Async match parameters updated to match other clients, and fixed handling of optional parameters\\r\\n- **Java client** - missing product methods have been added to the Java client\\r\\n- **Leaderboard configuration** - the portal now warns you that changing the tournament refresh settings (start date, frequency, etc) requires that all leaderboard entries be deleted.\\r\\n- Miscellaneous documentation updates"},{"id":"/2015/05/07/release-2-8-0","metadata":{"permalink":"/braincloud-apiref/release/2015/05/07/release-2-8-0","source":"@site/release/2015-05-07-release-2-8-0/index.md","title":"Release 2.8.0","description":"We\'re pleased to present Release 2.8.0.","date":"2015-05-07T00:00:00.000Z","formattedDate":"May 7, 2015","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":4.105,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.8.0","date":"2015-05-07","tags":["release-history"]},"prevItem":{"title":"Release 2.9.0","permalink":"/braincloud-apiref/release/2015/05/29/release-2-9-0"},"nextItem":{"title":"Release 2.7.0","permalink":"/braincloud-apiref/release/2015/04/02/release-2-7-0"}},"content":"We\'re pleased to present Release 2.8.0.\\r\\n\\r\\nThis one had to cook in the oven a bit longer than we\'d hoped, but we think the results are worth it. \xa0This release is chock full of feature fixes and enhancements (see details below), but first an important announcement:\\r\\n\\r\\n_Our new billing system is in place! Yay, automatic monthly billing! Hurray sustainable business models!_ \\r\\n\\r\\nHmm, clearly we\'re more excited about this than you guys. :)\\r\\n\\r\\n**How does this impact you?**\\r\\n\\r\\n_If you are still in development_, then it\xa0doesn\'t. \xa0brainCloud continues as always to be free during development - zero, zip, nada.\\r\\n\\r\\n_If your app is currently live_, then you\'ll want to push the **[Go Live!]** button\xa0in our system to ensure that we don\'t start\xa0enforcing the \\"in development\\" restrictions on your app. \xa0(i.e. like 100 daily users max, no non-sandbox in-app-purchases,\xa0maximum 1000 lifetime users, etc.). \xa0You\'ll need to set up a Billing Account with your payment information - it\'s all detailed [here](/learn/portal-tutorials/publishing-apps/ \\"Publishing Apps\\"). \xa0_(Note -\xa0you have until May 25th, 2015 to **Go Live!** before the new restrictions come into effect.)_\\r\\n\\r\\n[![Admin Apps Page](images/Admin-Apps-Page-1024x529.png)](images/Admin-Apps-Page-1024x529.png)\\r\\n\\r\\n_One other note - we\'ve updated our [Terms of Service](http://getbraincloud.com/terms-of-service/ \\"Terms of Service\\"), [Privacy Policy](http://getbraincloud.com/privacy-policy/ \\"Privacy Policy\\") and [Acceptable Usage](http://getbraincloud.com/acceptable-use-policy/ \\"Acceptable Use Policy\\") policies. \xa0You\'ll be asked to re-accept them the next time you log into the portal._\\r\\n\\r\\n# Release\xa0Highlights\\r\\n\\r\\n- **Managing and\xa0Publishing Apps** - We\'ve re-designed our app management screens\xa0to allow you to better manage your Apps\xa0through the development and publishing lifecyle. \xa0For more information, check out our guide pages on [Managing Apps](/learn/portal-tutorials/managing-apps/ \\"Managing Apps\\") and [Publishing Apps](/learn/portal-tutorials/publishing-apps/ \\"Publishing Apps\\").\\r\\n- **Open Source Unity Client** - you\'ve asked, we\'ve delivered. I\'m pleased to announce that\xa0the source code for our Unity Client is now available on GitHub. \xa0You can find it at [http://github/getbraincloud](http://github/getbraincloud \\"http://github/getbraincloud\\"). \xa0We\'ve just got the Unity Client and some examples there for now, but we plan to release more of the clients in the future.\\r\\n- **Facebook Integration Improvements** - Facebook has been busy, changing the requirements for minimum API levels for new\xa0apps (and removing their support for FQL). \xa0We\'ve made some short-term changes to accomodate, but are also making some longer-term changes\xa0to our approach to allow us to better keep up with their ever-changing API.\\r\\n- **Push Notifications** -\xa0streamlined the configuration and usage of push notifications. \xa0New configuration screen. \xa0iOS configuration now validates the certificate that is uploaded, determining whether it\'s a production or sandbox certificate. \xa0The appropriate servers will be utilized during pushes according to the certificate configured.\\r\\n- **External Identity Support** - we\'ve added the ability to easily integrate with 3rd party directories. \xa0More info [here](/learn/key-concepts/authentication/external-authentication/ \\"External Authentication\\").\\r\\n- **Unity IL2CPP Compatibility** - Finally, we\'ve recently updated our Unity Libraries to support their new IL2CPP Compiler. \xa064-bit iOS here we come!\\r\\n\\r\\n# Portal Changes\\r\\n\\r\\n- New **Design |\xa0Authentication** section in the portal, with the new External Identity feature being configured here. \xa0_In the next release, the rest of the Authentication settings (E-mail authentication, Facebook authentication, etc.) will move over to this section as well._\\r\\n- Multiple pages revamped to better support [**Publishing Apps**](/learn/portal-tutorials/publishing-apps/ \\"Publishing Apps\\") and our new **Billing**\xa0system:\\r\\n    - **Admin | Home page** -\xa0now display\'s your company\'s billing _Account Status_\\r\\n    - **Admin | Apps page** - enhanced to display the Publishing status of your app, and whether any run-time restrictions are being applied. \xa0Includes a new actions menu to Go Live, Apply Coupons, etc.\\r\\n    - **Admin | Company Info page** \\\\-\xa0provides access to the **Billing Portal** for configuring payment methods, etc.\\r\\n    - **Reporting | API Usage** - now includes a proper breakdown of all counts that contribute to the API Usage metric\\r\\n- New **Push Notification** configuration screen (**Design | Notifications | Settings**)\\r\\n- **New User Summary page** (Monitoring | User Monitoring | User Summary) - presents key information about the user in a more logical manner. \xa0_Also includes a cool new ability to log into the API Explorer as this user - see the **[Login as User]** button in the bottom-right of the screen -- great for trouble-shooting!_\\r\\n\\r\\n# API Changes / Additions\\r\\n\\r\\n- CashInItunesReceipt() renamed to VerifyItunesReceipt in C++ libs and API Explorer\\r\\n- New HttpClientServiceProxy object is now availble for S2S and Cloud Code\\r\\n- Removed the deprecated Leaderboard API parameters, as per the notes in the [2.7.0 release notes](/release/2015/04/02/release-2-7-0 \\"Release 2.7.0\\")\\r\\n- New ExternalAuthenticate() method used for integrating with external user directories\\r\\n\\r\\n# Misc. Changes / Fixes\\r\\n\\r\\n- Features\\r\\n    - Improved Exception Handling in Cloud Code scripts.\\r\\n    - Clan Cloud Code example (as part of exception handling documentation).\\r\\n    - iOS Push Notification interval removed from developer settings (we\'ll control this centrally in brainCloud)\\r\\n- Fixes\\r\\n    - Fixed defect where some Global Entities could not be viewed / edited from the Monitoring section of the portal\\r\\n    - VerifyMicrosoftReciept() method added to the \xa0API Explorer\\r\\n- Documentation\xa0improvements\\r\\n    - Matchmaking - _updated to clarify\xa0that Matchmaking needs to be explicitely enabled for a player to be eligible_\\r\\n    - Server-to-Server - _additional documentation in place_"},{"id":"/2015/04/02/release-2-7-0","metadata":{"permalink":"/braincloud-apiref/release/2015/04/02/release-2-7-0","source":"@site/release/2015-04-02-release-2-7-0/index.md","title":"Release 2.7.0","description":"We\'re happy to present brainCloud 2.7 - Easter Bunny Edition! :)","date":"2015-04-02T00:00:00.000Z","formattedDate":"April 2, 2015","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":2.345,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.7.0","date":"2015-04-02","tags":["release-history"]},"prevItem":{"title":"Release 2.8.0","permalink":"/braincloud-apiref/release/2015/05/07/release-2-8-0"},"nextItem":{"title":"Release 2.6.0","permalink":"/braincloud-apiref/release/2015/03/13/release-2-6"}},"content":"We\'re happy to present brainCloud 2.7 - Easter Bunny Edition! :)\\r\\n\\r\\nIt\'s been a busy couple of weeks as we prepare brainCloud for some pretty significant updates. \xa0In the meantime, we\'re delivering some smaller easter eggs of goodness just in time for the holidays.\\r\\n\\r\\n### Highlights\\r\\n\\r\\n- **External Web Services** - Cloud Code scripts can now call external web services. \xa0This greatly opens up the power of Cloud Code - allowing your apps to securely integrate with your own custom servers and/or third party services. \xa0More details, including a tutorial.\\r\\n- **Leaderboard API changes** - in release 2.6 we introduced paging and relative views to our global leaderboards. The response was very favourable (some of you have already live with the new APIs!) - but alas we believe we missed a feature or two - like returning the total number of entries. We\'ve addressed this, and restructured the APIs a bit to allow even more features in the future!\\r\\n- **Reset User\xa0Stats** - another popular request - it is now possible to reset a stat to its original value for the entire population of your app! Just click on the lightning bolt!\\r\\n\\r\\n### ![Reset User Stat](images/Reset_User_Stat.png)\\r\\n\\r\\n### Portal Changes\\r\\n\\r\\n- **[New] Cloud Code Web Services Page** - located under **Design | Cloud Code | Web Services**, this page is used to construct a whitelist of services that\xa0can be called from your Cloud Code scripts.\\r\\n- **[Updated] User Stats Page** - new **<Lightning Bolt\\\\>** button allows you to reset a stat across all users\\r\\n- **[Updated] Apps Management Page** - redesigned to allow us to add additional features/functions in the future. \xa0As a bonus, now includes a count of the number of users your app has... \xa0(calculated nightly)\\r\\n- **[Redesigned]** **User Monitor Page** - redesigned user monitoring page, with a new **[Log In As User]** button at the bottom.\\r\\n\\r\\n[![Updated User Summary Page](images/Updated_User_Summary_Page-1024x995.png)](images/Updated_User_Summary_Page.png)\\r\\n\\r\\n### API Changes / Additions\\r\\n\\r\\n- **New** **HttpProxyService**\xa0- called from Cloud Code to allow calls to external web services. \xa0Developers must create an entry in the web services\xa0whitelist first. [Go to **Design | Cloud Code | Web Services** ]. \xa0For more details, see the API Docs.\\r\\n- **Leaderboard API changes** - Based on developer feedback, we\'ve made some modifications to the Leaderboard APIs introduced in Release 2.6. \xa0The updated APIs can be viewed on the API Docs page.\xa0 _Important Note - Release 2.7 still supports the 2.6 parameters, but that support will be removed in 2.8 (targeted for April 15th) - so upgrade to the\xa0new APIs now!_\\r\\n\\r\\n### Misc Changes\\r\\n\\r\\n- **[Updated] API Explorer - Authenticate service**\xa0 - E-mail authentication is now the default authentication type.\xa0We\'ve also changed the system defaults so that e-mail validation is \\\\*not\\\\* required for users to log in... \xa0(a friendlier default\xa0for most apps)\\r\\n- **Misc Improvements / Updates to the API Docs**"},{"id":"/2015/03/13/release-2-6","metadata":{"permalink":"/braincloud-apiref/release/2015/03/13/release-2-6","source":"@site/release/2015-03-13-release-2-6/index.md","title":"Release 2.6.0","description":"Fresh from GDC - it\'s release 2.6 - Con Plague edition!","date":"2015-03-13T00:00:00.000Z","formattedDate":"March 13, 2015","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":2.155,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.6.0","date":"2015-03-13","tags":["release-history"]},"prevItem":{"title":"Release 2.7.0","permalink":"/braincloud-apiref/release/2015/04/02/release-2-7-0"},"nextItem":{"title":"Release 2.5.0","permalink":"/braincloud-apiref/release/2015/02/26/release-2-5-0"}},"content":"Fresh from GDC - it\'s release 2.6 - Con Plague edition!\\r\\n\\r\\n_(Just kidding - other than lack of sleep, we\'re good.)_\\r\\n\\r\\nIn addition to the GDC rush of new game devs,\xa0_over the past few months, we\'ve had a surprising number of developers sign-up to use brainCloud for\xa0apps \\\\*other\\\\* than games._ They\'ve wisely recognized that gaming (and brainCloud in particular) is ahead-of-the-curve in terms of engaging and monetizing users - and want to take advantage of brainCloud\'s advanced features (like push notifications, pricing controls, receipt validation and promotions) in a non-gaming context.\\r\\n\\r\\nHey, who are we to argue - the more the merrier! \xa0So, to make them feel more welcome, we\'ve combined some work we were already doing (to better standardize our usage of terms throughout the portal) with the ability to hide confusing gaming-related features from the non-initiated. \xa0We hope you agree that the result is more consistent, and more welcoming to developers of all types of apps.\\r\\n\\r\\nFor the full details on this week\'s update, keep reading! :)\\r\\n\\r\\n### Highlights\\r\\n\\r\\n- **New\xa0Global Leaderboard APIs**\xa0- quickly\xa0view the leaderboard around the player\'s score, plus paging support\\r\\n- **Portal Polish** - we\'ve taken a pass over the terminology used in the portal to make it more consistent, as well as more understandable by all types of developers\\r\\n\\r\\n### Portal Changes\\r\\n\\r\\n- **Show/hide Game Features**\xa0-\xa0To make things less confusing for the folks building non-game apps on top of brainCloud, we\'ve added an ability to hide the gaming features (such as Leaderboards, Achievements, Multiplayer, etc.)\\r\\n- **Create app flow** - improved flow for\xa0creating new apps, with more consistent usage of terms throughout the portal.\\r\\n- **Consistent\xa0terms**\xa0- more consistent usage of terms throughout the portal.\\r\\n- **End-User Forgotten Password** - You can now trigger the _Forgotten Password_\xa0feature for any end\xa0user that is\xa0using E-mail authentication. \xa0Just click the [envelope] icon next to any Email-authentication type credential\xa0at the bottom of the **User Summary** page.\\r\\n- The **Versioning** page has been renamed to **Platforms**\\r\\n\\r\\n### API Changes / Additions\\r\\n\\r\\n- **(New) Paged Leaderboards** - call **GetGlobalLeaderboardPage()**\xa0to get a subset of the leaderboard, starting at a specified entry\\r\\n- **(New) Relative Leaderboards** - call **GetGlobalLeaderboardView()**\xa0to get a view of the leaderboard centered around a player\\r\\n- **(Updated) Authenticate\\\\*() API methods** - now return complete Player State information - eliminating the need for a redundant ReadPlayerState() call when apps first start\\r\\n\\r\\n### Misc Changes\\r\\n\\r\\n- You can now send Events from the S2S interface\\r\\n- Exporting and Importing of metadata files now uses consistent, lower-case filename extensions\\r\\n- Improvements / updates to the API docs\\r\\n- Mix fixes and performance updates"},{"id":"/2015/02/26/release-2-5-0","metadata":{"permalink":"/braincloud-apiref/release/2015/02/26/release-2-5-0","source":"@site/release/2015-02-26-release-2-5-0/index.md","title":"Release 2.5.0","description":"Just in time for GDC - it\'s brainCloud 2.5!","date":"2015-02-26T00:00:00.000Z","formattedDate":"February 26, 2015","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":2.23,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.5.0","date":"2015-02-26","tags":["release-history"]},"prevItem":{"title":"Release 2.6.0","permalink":"/braincloud-apiref/release/2015/03/13/release-2-6"},"nextItem":{"title":"Release 2.4.0","permalink":"/braincloud-apiref/release/2015/02/13/release-2-4-0"}},"content":"Just in time for GDC - it\'s brainCloud 2.5!\\r\\n\\r\\nOkay, truthfully this is more of a housekeeping update as we prep some bigger features for releases to come.\\r\\n\\r\\nSpeaking of housekeeping - we notice that some of you may have inadvertently created **multiple company accounts**. This can happen when multiple team members register for brainCloud independently, instead of inviting additional members to their account.\\r\\n\\r\\nIn hindsight, _the old process\xa0was clunky_. \xa0You needed to first\xa0add the user, including picking a password for them, and then separately communicate with them their account information so that they could log in (whereupon they\'d want to change their password).\\r\\n\\r\\nYou\'ll be happy to know that we\'ve cleaned that up. \xa0Now you only need to enter a name and e-mail, and we\'ll handle the e-mailing for you - including prompting the\xa0team member to pick their own password. \xa0Easy peasy!\\r\\n\\r\\n[![inviting_new_team_members](images/inviting_new_team_members-1024x655.png)](images/inviting_new_team_members.png)\\r\\n\\r\\nIf any of you with multiple accounts would like to merge them, just hit the green **Chat** button and we\'ll help you out. \xa0It\'s pretty simple to do, but the tools are only available to us super-users right now.\\r\\n\\r\\nAnyway, check out the release details below - and remember, if you\'re going to GDC\xa0be sure to look us up - we\'d love to meet you!\\r\\n\\r\\n### Highlights\\r\\n\\r\\n- **Google Play Services Authentication** added. \xa0Great for your Android games!\\r\\n- **Updated Java Library.**\xa0 We\'ve done a major update to our\xa0Java library - you\'ll find it on the **Client Libs** download page\\r\\n- **Updated Javascript Library.**\xa0 We\'ve updated our Javascript library - you\'ll find it on the\xa0**Client Libs**\xa0download page.\\r\\n- **Updated Javascript Example.**\xa0\xa0In case you missed it, we introduced a Javascript Example Game last week - Acey Deucey!\\r\\n\\r\\n### Portal Changes\\r\\n\\r\\n- **New invite team member flow** \\\\- now just type\xa0in their name and e-mail address, and brainCloud sends the invite for you. \xa0_[Yeah, we know, it always should have been that way!]_\\r\\n- **Improved\xa0[Select Players] screen**\xa0- now finding players to view and debug in **Player Monitoring** is easier than ever!\\r\\n- **(Minor) Versioning** tab under **Design | Core Game Info** has been renamed to **Platforms.**\\r\\n\\r\\n### API Changes\\r\\n\\r\\n- **AuthenticateGoogle()**\xa0added to the brainCloud\xa0client APIs.\\r\\n- **Android libs** now support\xa0capturing of region, timezone and language during authentication.\xa0_[Note - requires some custom client configuration - instructions coming soon!]_\\r\\n\\r\\n### Misc Fixes\\r\\n\\r\\n- **S2S Improvements** - we\'ve added access to more services and APIs, and squashed a few bugs!\\r\\n- **Google Play Purchases -** we\'ve streamlined our implementation to make it more compatible with 3rd party libraries (like Prime31)\\r\\n- **Javascript documentation** - we\'ve updated much of the documentation\xa0with the lastest JavaScript APIs. We still have a bit further to go - bear with us!\\r\\n\\r\\n[![BC_TwitterPromo_18](images/BC_TwitterPromo_18-1024x512.png)](images/BC_TwitterPromo_18.png)"},{"id":"/2015/02/13/release-2-4-0","metadata":{"permalink":"/braincloud-apiref/release/2015/02/13/release-2-4-0","source":"@site/release/2015-02-13-release-2-4-0/index.md","title":"Release 2.4.0","description":"Just in time for Valentine\'s Day - brainCloud 2.4!","date":"2015-02-13T00:00:00.000Z","formattedDate":"February 13, 2015","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":3.315,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.4.0","date":"2015-02-13","tags":["release-history"]},"prevItem":{"title":"Release 2.5.0","permalink":"/braincloud-apiref/release/2015/02/26/release-2-5-0"},"nextItem":{"title":"Release 2.3.0","permalink":"/braincloud-apiref/release/2015/01/30/release-2-3-0"}},"content":"Just in time for Valentine\'s Day - brainCloud 2.4!\\r\\n\\r\\nIn this release, we\'ve greatly improved\xa0our Cloud Code system. \xa0We\'ve expanded upon what can be done, and improved our documentation on how to do it. \xa0That said, Cloud Code is a big area, and\xa0it\'s difficult to anticipate every possible usage of the system. \xa0If you have questions, just\xa0hit the green Chat button and we\'ll help!\\r\\n\\r\\n### Highlights\\r\\n\\r\\n- **New Cloud Code\xa0Features!** We\'ve\xa0greatly expanded our Cloud Code feature set.\\r\\n    - **API Hooks**\xa0- cloud code scripts can now be configured to run automatically before or after (pre or post) core API methods\\r\\n    - **New Security** - cloud code scripts must now\xa0be specifically enabled to be callable from the client - ensures that your most sensitive scripts are only invokable server-side (note - existing scripts default to client-callable)\\r\\n    - **Server-to-server (S2S)\xa0Scripts**\xa0 - our\xa0new S2S feature allows you to\xa0call your scripts\xa0from custom servers and tools. \xa0Unlike client callable scripts, S2S scripts don\'t require the context of an end-user session to run.\\r\\n    - **S2S Server configuration** - to safeguard S2S scripts you must declare\xa0the servers that they will be called from. \xa0Each server has it\'s own secret, and you can even\xa0specify a set of ip ranges that will be used to\xa0validate requests. \xa0The new **S2S Config** screen can be found in **Design | Core Game Info | S2S Config**.\\r\\n    - **S2S Explorer** - Of course, you need to be able to test your S2S scripts - so we\'ve added a new S2S Explorer for just that purpose. \xa0You\'ll find it at\xa0**Design | Cloud Code | S2S Explorer**.\\r\\n    - **Updated Clode Code documentation** - cloud-callable APIs are now documented in the reference in the \\"CC\\" (i.e. \\"Cloud Code\\") tabs of methods. We\'ve also got more information on how scripts and the service bridges work.\\r\\n- **Updated Javascript Library.**\xa0 We\'ve updated our Javascript library - you\'ll find it on the **Client Libs** download page.\\r\\n- **Updated C++ for Android Library.**\xa0\xa0Includes all the functionality present in the iOS C++ library. We\'ve also upgraded our Cocos2d-x example project and tutorial to use it. \xa0You\'ll find the library in\xa0the Client Libs download page.\\r\\n\\r\\n[caption id=\\"attachment\\\\_798\\" align=\\"alignnone\\" width=\\"536\\"][![brainCloud S2S API](images/brainCloud-S2S-API.png)](images/brainCloud-S2S-API.png) brainCloud S2S API[/caption]\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Portal Changes\\r\\n\\r\\n- **(New) Ability to edit player [user] entities -** now not only can you view player entities, you can actually edit them straight from the portal and save the updates. \xa0Great for debugging and user support.\\r\\n- **(New) Ability to edit global entities -** like player entities, you can now edit and save global entities. \xa0Note - we plan to further add the ability to create global entities from the editor in the future (think by end-of-March).\\r\\n- **(New) Newly added players screen** - super handy during development and testing - you\'ll see it when you first select **Player Monitoring**. \xa0We\'ll be further adding new player search features in the next release.\\r\\n- **(New) User Platforms** - The **Player Summary** screen now shows what platforms a user has logged in from.\\r\\n\\r\\n[caption id=\\"attachment\\\\_795\\" align=\\"alignnone\\" width=\\"474\\"]![Window](images/Window-1024x621.png) Newly added players screen[/caption]\\r\\n\\r\\n\xa0\\r\\n\\r\\n### API Changes\\r\\n\\r\\n- **Javascript library**\xa0now available for download\\r\\n- **C++ for Android library**\xa0now available for download\\r\\n- **AuthenticateFacebook** added to the brainCloud Wrapper class for Unity/C#\\r\\n- New client-callable permission is configurable for cloud scripts. \xa0By default (for best security), all new cloud scripts will have client-callable set to false.\\r\\n\\r\\n\xa0\\r\\n\\r\\n### Misc Fixes\\r\\n\\r\\n- **Recent Logs** screen now only selects **Sys Error** and **App Error** filters by default - **App Warning** and **App Info** messages are by default suppressed\\r\\n- **Server version** has been added to the detailed\xa0Stack Info page of **Recent Logs**. \xa0Helps to diagnose if an error might be related to a specific release of the software.\\r\\n- **Cloud Code APIs** have now been documented\\r\\n- Supported\xa0**Localization** languages has been expanded to 32\xa0- go to **Design | Core Game Info | Localization** for the full list.\\r\\n- All client libs (except Android) are now capturing region, timezone and language during authentication (useful for segments)"},{"id":"/2015/01/30/release-2-3-0","metadata":{"permalink":"/braincloud-apiref/release/2015/01/30/release-2-3-0","source":"@site/release/2015-01-30-release-2-3-0/index.md","title":"Release 2.3.0","description":"We\'re pleased to announce the full public availability of brainCloud 2.3.0!","date":"2015-01-30T00:00:00.000Z","formattedDate":"January 30, 2015","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":1.235,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.3.0","date":"2015-01-30","tags":["release-history"]},"prevItem":{"title":"Release 2.4.0","permalink":"/braincloud-apiref/release/2015/02/13/release-2-4-0"},"nextItem":{"title":"Release 2.2.0","permalink":"/braincloud-apiref/release/2015/01/14/release-2-2-0"}},"content":"We\'re pleased to announce the full public availability of **brainCloud 2.3.0!**\\r\\n\\r\\nNew features in this release include:\\r\\n\\r\\n**Highlights**\\r\\n\\r\\n- **E-mail\xa0Identity improvements** -\xa0you asked, we\xa0delivered\xa0-\xa0brainCloud\xa0now supports **E-mail Validation** for those of you using our E-mail + Password Identity Authentication. \xa0We\'ve added **Forgotten Password** flows as well - all customizable with your own text and branding.\\r\\n- **Segment Definitions**\xa0- we\'ve completely re-done our Segment\xa0design screens, made them simpler and more flexible,\xa0while vastly improving the underlying data structures that represent segment criteria. \xa0This was necessary work to support new segment features to come.\\r\\n\\r\\n_Note -\xa0the new segment data structures aren\'t compatible with how things were being defined in 2.2.X and previous. \xa0As a result, we\'ve disabled any previously defined Segments - apologies about that. \xa0You\'ll need to select each of your segments, quickly recreate the criteria, and save\xa0them. \xa0Once again, apologies, but this was a one-time situation that couldn\'t be helped (and it\'s honestly very quick to fix)._\\r\\n\\r\\n\xa0\\r\\n\\r\\n**Portal\xa0Changes**\\r\\n\\r\\n- **Design | Core Game Info | E-mail Authentication** - options for customizing the e-mails sent for validation and forgotten passwords. \xa0Includes a **[Test]** button to send a test e-mail to validate (note that the test e-mails don\'t actually contain the URL links)\\r\\n- **Design | Segments** - screens have been completely redone\\r\\n\\r\\n[![VIPs Leaving Segment](images/vip_leaving_segment-1024x410.png)](images/vip_leaving_segment.png)\\r\\n\\r\\n**API Changes**\\r\\n\\r\\n- New Forgotten Password API for EmailPassword Authentication\\r\\n\\r\\n**Misc Fixes**\\r\\n\\r\\n- Fixes to **Import Configuration** to properly re-evaluate level caps if new XP levels\xa0have been added\\r\\n- Misc fixes and performance improvements"},{"id":"/2015/01/14/release-2-2-0","metadata":{"permalink":"/braincloud-apiref/release/2015/01/14/release-2-2-0","source":"@site/release/2015-01-14-release-2-2-0/index.md","title":"Release 2.2.0","description":"We\'re pleased to announce the full public availability\xa0of brainCloud 2.2.0!","date":"2015-01-14T00:00:00.000Z","formattedDate":"January 14, 2015","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":0.735,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.2.0","date":"2015-01-14","tags":["release-history"]},"prevItem":{"title":"Release 2.3.0","permalink":"/braincloud-apiref/release/2015/01/30/release-2-3-0"},"nextItem":{"title":"Release 2.1.0","permalink":"/braincloud-apiref/release/2014/12/12/release-2-1-0"}},"content":"We\'re pleased to announce the full public availability\xa0of **brainCloud 2.2.0**!\\r\\n\\r\\nNew features in this release include:\\r\\n\\r\\nAPI & Client Features:\\r\\n\\r\\n- Promotions can now replace\xa0products in\xa0the active store. This allows swapping in new\xa0products during a promotion that pay out extra currency etc\\r\\n- C++ library now includes easier Facebook authentication using the BrainCloudWrapper class\\r\\n- Cocos 2d-x example upgraded to Cocos 2d-x 3.3 which includes Facebook support from C++\\r\\n- Cocos 2d-x example allows user to choose between three types of authentication now: Universal, Anonymous, and Facebook\\r\\n- Misc fixes and improvements\\r\\n\\r\\nPortal/Server Features:\\r\\n\\r\\n- Segments - Now you can target only test users to be included in a segment. This allows for segments to be more easily tested before they\'re launched\\r\\n- Misc fixes and improvements\\r\\n\\r\\nWe\'ve continued to improve the documentation in our\xa0Apidocs portal. As usual, you can check it out by visiting: [brainCloud Docs](/learn/introduction/)"},{"id":"/2014/12/12/release-2-1-0","metadata":{"permalink":"/braincloud-apiref/release/2014/12/12/release-2-1-0","source":"@site/release/2014-12-12-release-2-1-0/index.md","title":"Release 2.1.0","description":"We\'re pleased to announce the full public availability\xa0of brainCloud 2.1.0!","date":"2014-12-12T00:00:00.000Z","formattedDate":"December 12, 2014","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":0.95,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.1.0","date":"2014-12-12","tags":["release-history"]},"prevItem":{"title":"Release 2.2.0","permalink":"/braincloud-apiref/release/2015/01/14/release-2-2-0"},"nextItem":{"title":"Release 2.0.0","permalink":"/braincloud-apiref/release/2014/11/11/release-2-0-0"}},"content":"We\'re pleased to announce the full public availability\xa0of **brainCloud 2.1.0**!\\r\\n\\r\\nNew features in this release include:\\r\\n\\r\\nAPI Features:\\r\\n\\r\\n- Client library version and game version verification is now working properly\\r\\n- Platform constants changed for Windows Phone and Mac - removed versioning\\r\\n- C++ library now easier to integrate into your project (fixed 64 bit iOS targets and upgraded jsoncpp to 1.0.0)\\r\\n- C++ and C# client libraries improved to use additional enums/structures for certain method calls\\r\\n- Cocos 2d-x example posted to tutorials section\\r\\n- Misc fixes and improvements\\r\\n\\r\\nPortal/Server Features:\\r\\n\\r\\n- Player monitoring - can now reset player\'s segments, promotions, and associated criteria data to facilitate easier testing\\r\\n- Request / Response log now includes inner status codes\\r\\n- Cloud code logger object added to allow easier debugging of scripts\\r\\n- Authentication exceptions now log the profile id\\r\\n- Anonymous identity segment criteria now applies to users who \\\\*only\\\\* have an anonymous identity\\r\\n- Automated promotions improved\\r\\n- Javascript/image/page caching issues fixed\\r\\n- Misc fixes and improvements\\r\\n\\r\\nPlus we\'ve refreshed the look of our Apidocs portal, and continue to add new content.\\r\\n\\r\\nCheck it out at [brainCloud Docs](/learn/introduction/)"},{"id":"/2014/11/11/release-2-0-0","metadata":{"permalink":"/braincloud-apiref/release/2014/11/11/release-2-0-0","source":"@site/release/2014-11-11-release-2-0-0/index.md","title":"Release 2.0.0","description":"We\'re pleased to announce the full public availability\xa0of brainCloud 2.0.0!","date":"2014-11-11T00:00:00.000Z","formattedDate":"November 11, 2014","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":0.33,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 2.0.0","date":"2014-11-11","tags":["release-history"]},"prevItem":{"title":"Release 2.1.0","permalink":"/braincloud-apiref/release/2014/12/12/release-2-1-0"},"nextItem":{"title":"Release 1.9.0","permalink":"/braincloud-apiref/release/2014/10/27/release-1-9-0"}},"content":"We\'re pleased to announce the full public availability\xa0of **brainCloud 2.0.0**!\\r\\n\\r\\nNew features in this release include:\\r\\n\\r\\nAPI Features:\\r\\n\\r\\n- **Global Properties**\xa0- now sends\xa0user language, region, and timezone to brainCloud server on login.\\r\\n- Misc fixes and improvements\\r\\n\\r\\nPortal Features:\\r\\n\\r\\n- **Automated\xa0Promotions** \\\\- promotions can now be automated (ie when a user joins a target segment).\\r\\n- **Segments** \\\\- further refinements to\xa0criteria\\r\\n- Misc fixes and improvements"},{"id":"/2014/10/27/release-1-9-0","metadata":{"permalink":"/braincloud-apiref/release/2014/10/27/release-1-9-0","source":"@site/release/2014-10-27-release-1-9-0/index.md","title":"Release 1.9.0","description":"We\'re pleased to announce the availability\xa0of brainCloud 1.9.0!","date":"2014-10-27T00:00:00.000Z","formattedDate":"October 27, 2014","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":0.525,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 1.9.0","date":"2014-10-27","tags":["release-history"]},"prevItem":{"title":"Release 2.0.0","permalink":"/braincloud-apiref/release/2014/11/11/release-2-0-0"},"nextItem":{"title":"Release 1.8.3","permalink":"/braincloud-apiref/release/2014/10/13/release-1-8-3"}},"content":"We\'re pleased to announce the availability\xa0of **brainCloud 1.9.0**!\\r\\n\\r\\nNew features in this release include:\\r\\n\\r\\nAPI Features:\\r\\n\\r\\n- **Unity Client**\xa0- now sends\xa0user language, region, and timezone to brainCloud server on login.\\r\\n- **Windows Phone IAP support** \\\\- now able to verify windows phone IAP receipts\\r\\n- Misc fixes and improvements\\r\\n\\r\\nPortal Features:\\r\\n\\r\\n- **Multiple Language Notifications**\xa0-\xa0notifications will now be sent according to the user\'s language preference\\r\\n- **Scheduled Promotions** \\\\- promotions can be scheduled for a specific time range and can apply based on user segments. Allows dynamic pricing adjustments to be made.\\r\\n- **Segments** \\\\- new criteria added to segments\\r\\n- Misc fixes and improvements"},{"id":"/2014/10/13/release-1-8-3","metadata":{"permalink":"/braincloud-apiref/release/2014/10/13/release-1-8-3","source":"@site/release/2014-10-13-release-1-8-3/index.md","title":"Release 1.8.3","description":"We\'re pleased to announce the availability\xa0of brainCloud 1.8.3!","date":"2014-10-13T00:00:00.000Z","formattedDate":"October 13, 2014","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":0.755,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 1.8.3","date":"2014-10-13","tags":["release-history"]},"prevItem":{"title":"Release 1.9.0","permalink":"/braincloud-apiref/release/2014/10/27/release-1-9-0"},"nextItem":{"title":"Release 1.8.2","permalink":"/braincloud-apiref/release/2014/09/29/release-1-8-2"}},"content":"We\'re pleased to announce the availability\xa0of **brainCloud 1.8.3**!\\r\\n\\r\\nNew features in this release include:\\r\\n\\r\\nAPI Features:\\r\\n\\r\\n- **Google Play Store IAP Receipt Validation**\xa0- clients can now validate IAP receipts from the Google Play Store.\\r\\n- Misc fixes and improvements\\r\\n\\r\\nPortal Features:\\r\\n\\r\\n- **One Way Match Multiplayer Monitoring**\xa0- new page to view the multiplayer match state and logs. Super useful for debugging!\\r\\n- **Global Monitoring** - added a number of handy ways to sort/filter logs.\\r\\n- **Import/Export** - now includes all cloud scripts and S3 files for the game.\\r\\n- **Cloud Scripts** - can now define test parameters per script\\r\\n- **Player Monitoring Log** - got a facelift!\\r\\n- **Game Config** - added a max concurrent sessions parameter to control how many concurrent sessions a user can have running\\r\\n- **Notifications** - now able to define templates and send to users\\r\\n- **Segments** - added additional criteria\\r\\n- Misc fixes and improvements"},{"id":"/2014/09/29/release-1-8-2","metadata":{"permalink":"/braincloud-apiref/release/2014/09/29/release-1-8-2","source":"@site/release/2014-09-29-release-1-8-2/index.md","title":"Release 1.8.2","description":"We\'re pleased to announce the availability\xa0of brainCloud 1.8.2!","date":"2014-09-29T00:00:00.000Z","formattedDate":"September 29, 2014","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":0.355,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 1.8.2","date":"2014-09-29","tags":["release-history"]},"prevItem":{"title":"Release 1.8.3","permalink":"/braincloud-apiref/release/2014/10/13/release-1-8-3"},"nextItem":{"title":"Release 1.8.1","permalink":"/braincloud-apiref/release/2014/09/16/release-1-8-1"}},"content":"We\'re pleased to announce the availability\xa0of **brainCloud 1.8.2**!\\r\\n\\r\\nNew features in this release include:\\r\\n\\r\\nAPI Features:\\r\\n\\r\\n- **Update Shared Entities** - clients can now make updates to shared player entities.\\r\\n- Misc fixes and improvements\\r\\n\\r\\nPortal Features:\\r\\n\\r\\n- **API Explorer**\xa0- The API explorer now automatically uses your email address for authentication. As well navigating away from the page and back again will save your session state.\\r\\n- Misc fixes and improvements"},{"id":"/2014/09/16/release-1-8-1","metadata":{"permalink":"/braincloud-apiref/release/2014/09/16/release-1-8-1","source":"@site/release/2014-09-16-release-1-8-1/index.md","title":"Release 1.8.1","description":"We\'re pleased to announce the availability\xa0of brainCloud 1.8.1!","date":"2014-09-16T00:00:00.000Z","formattedDate":"September 16, 2014","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":0.445,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 1.8.1","date":"2014-09-16","tags":["release-history"]},"prevItem":{"title":"Release 1.8.2","permalink":"/braincloud-apiref/release/2014/09/29/release-1-8-2"},"nextItem":{"title":"Release 1.8.0","permalink":"/braincloud-apiref/release/2014/09/03/release-1-8-0"}},"content":"We\'re pleased to announce the availability\xa0of **brainCloud 1.8.1**!\\r\\n\\r\\nNew features in this release include:\\r\\n\\r\\nAPI Features:\\r\\n\\r\\n- **Global Entity Count** - new api to request Global Entity Counts from the portal before fetching the data itself.\\r\\n- Misc fixes and improvements\\r\\n\\r\\nPortal Features:\\r\\n\\r\\n- **New Leaderboard Type** \\\\- now you can define a leaderboard that always takes the last score\xa0posted. In the portal, use\xa0the \\"LAST\\\\_VALUE\\" type.\\r\\n- **Global Entity Improvements** - the portal provides\xa0options to filter and delete Global Entities displayed in the Global Monitoring section.\\r\\n- **Misc Fixes**"},{"id":"/2014/09/03/release-1-8-0","metadata":{"permalink":"/braincloud-apiref/release/2014/09/03/release-1-8-0","source":"@site/release/2014-09-03-release-1-8-0/index.md","title":"Release 1.8.0","description":"We\'re pleased to announce the availability\xa0of brainCloud 1.8 - and along with that announce that from here on out we\'ll be updating brainCloud every two weeks!","date":"2014-09-03T00:00:00.000Z","formattedDate":"September 3, 2014","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":0.74,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 1.8.0","date":"2014-09-03","tags":["release-history"]},"prevItem":{"title":"Release 1.8.1","permalink":"/braincloud-apiref/release/2014/09/16/release-1-8-1"},"nextItem":{"title":"Release 1.7.0","permalink":"/braincloud-apiref/release/2014/08/16/release-1-7-0"}},"content":"We\'re pleased to announce the availability\xa0of **brainCloud 1.8** - and along with that announce that from here on out we\'ll be updating brainCloud every two weeks!\\r\\n\\r\\nNew features in this release include:\\r\\n\\r\\nAPI Features:\\r\\n\\r\\n- Misc fixes and improvements\\r\\n\\r\\nPortal Features:\\r\\n\\r\\n- **Online Support** - we\'ve integrated with intercom.io to give you the best support experience possible. If you need assistance, just click on the green [?] in the bottom-right-hand corner of the screen, and we\'ll help! \xa0Note - you can also e-mail **support@18.220.113.13**.\\r\\n- **Product + Pricing revamp** - we\'ve totally re-designed our product and pricing management system to make it easier to use (and to pave the way for more powerful features coming soon!)\\r\\n- **Forgot Password support** - now if you forget your brainCloud password, you won\'t need another administrator to reset it for you!\\r\\n- **New leaderboard configuration screen** - better, more intuitive layout!"},{"id":"/2014/08/16/release-1-7-0","metadata":{"permalink":"/braincloud-apiref/release/2014/08/16/release-1-7-0","source":"@site/release/2014-08-16-release-1-7-0/index.md","title":"Release 1.7.0","description":"We\'re pleased to announce the release of brainCloud 1.7.0!","date":"2014-08-16T00:00:00.000Z","formattedDate":"August 16, 2014","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":0.42,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 1.7.0","date":"2014-08-16","tags":["release-history"]},"prevItem":{"title":"Release 1.8.0","permalink":"/braincloud-apiref/release/2014/09/03/release-1-8-0"},"nextItem":{"title":"Release 1.6.0","permalink":"/braincloud-apiref/release/2014/06/06/hello-world"}},"content":"We\'re pleased to announce the release of brainCloud 1.7.0!\\r\\n\\r\\nThis brainCloud update brings the following new features:\\r\\n\\r\\nAPI Additions:\\r\\n\\r\\n- Singleton support added to Global Entities API\\r\\n- Expiry support added to Global Entities API\\r\\n\\r\\nPortal Additions:\\r\\n\\r\\n- Analytics - basic analytics support with Dashboard!\\r\\n- Display of Async Turn-by-Turn matches in the Portal (Player Monitoring)\\r\\n- Custom file support - upload files to be available for client download\\r\\n- Added MatchMaking to API Tester\\r\\n- Improved Quest creation/management screens\\r\\n- New Pacer configuration"},{"id":"/2014/06/06/hello-world","metadata":{"permalink":"/braincloud-apiref/release/2014/06/06/hello-world","source":"@site/release/2014-06-06-hello-world/index.md","title":"Release 1.6.0","description":"We\'re pleased to announce that we have released brainCloud version 1.6 to the world! Included in this version of brainCloud are many key features including:","date":"2014-06-06T00:00:00.000Z","formattedDate":"June 6, 2014","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":0.48,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 1.6.0","date":"2014-06-06","tags":["release-history"]},"prevItem":{"title":"Release 1.7.0","permalink":"/braincloud-apiref/release/2014/08/16/release-1-7-0"},"nextItem":{"title":"Release 1.5.0","permalink":"/braincloud-apiref/release/2014/05/01/braincloud-portal-updates-hot-and-heavy"}},"content":"We\'re pleased to announce that we have released brainCloud version 1.6 to the world! Included in this version of brainCloud are many key features including:\\r\\n\\r\\n- Windows 8 Support\\r\\n- Windows Store In-app Purchase Support\\r\\n- Global Entities API\\r\\n- Shared Data API\\r\\n- OneWay Multiplayer Support\\r\\n- Matchmaking API\\r\\n- New API\xa0Explorer\\r\\n- Support for Real-time Facebook Payments and disputes\\r\\n- And much, much more!\\r\\n\\r\\nbrainCloud platform 1.6 is compatible with older versions of our client libraries, but we recommend that you all upgrade to the latest SDKs to take advantage of the new features!"},{"id":"/2014/05/01/braincloud-portal-updates-hot-and-heavy","metadata":{"permalink":"/braincloud-apiref/release/2014/05/01/braincloud-portal-updates-hot-and-heavy","source":"@site/release/2014-05-01-braincloud-portal-updates-hot-and-heavy/index.md","title":"Release 1.5.0","description":"Hi folks","date":"2014-05-01T00:00:00.000Z","formattedDate":"May 1, 2014","tags":[{"label":"release-history","permalink":"/braincloud-apiref/release/tags/release-history"}],"readingTime":0.43,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"Release 1.5.0","date":"2014-05-01","tags":["release-history"]},"prevItem":{"title":"Release 1.6.0","permalink":"/braincloud-apiref/release/2014/06/06/hello-world"}},"content":"Hi folks\\r\\n\\r\\nAs you may have noticed, we\'ve kicked our web portal development into high gear! \xa0We\'ve recently expanded our web team, and are moving mountains to get brainCloud ready for it\'s upcoming beta and 2.0 release!\\r\\n\\r\\nWe apologize ahead-of-time if things get a bit confusing while we move the feature-set around to improve the brainCloud experience.\\r\\n\\r\\nBe sure to notify your account rep if you find you are blocked or confused - and we\'ll jump in right away to help!\\r\\n\\r\\nHappy coding!\\r\\n\\r\\nThe brainCloud Team"}]}')}}]);