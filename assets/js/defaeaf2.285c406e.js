"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[14420],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>b});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),c=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=c(e.components);return r.createElement(o.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(a),d=n,b=p["".concat(o,".").concat(d)]||p[d]||m[d]||i;return a?r.createElement(b,s(s({ref:t},u),{},{components:a})):r.createElement(b,s({ref:t},u))}));function b(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,s=new Array(i);s[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[p]="string"==typeof e?e:n,s[1]=l;for(var c=2;c<i;c++)s[c]=a[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},77571:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>k,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=a(87462),n=(a(67294),a(3905));const i={},s="FindPlayersWithAttributesUsingFilter",l={unversionedId:"api/capi/matchmaking/findplayerswithattributesusingfilter",id:"api/capi/matchmaking/findplayerswithattributesusingfilter",title:"FindPlayersWithAttributesUsingFilter",description:"Overview",source:"@site/docs/api/2_capi/matchmaking/findplayerswithattributesusingfilter.md",sourceDirName:"api/2_capi/matchmaking",slug:"/api/capi/matchmaking/findplayerswithattributesusingfilter",permalink:"/braincloud-apiref/api/capi/matchmaking/findplayerswithattributesusingfilter",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/matchmaking/findplayerswithattributesusingfilter.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1672193365,formattedLastUpdatedAt:"Dec 28, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"FindPlayersWithAttributes",permalink:"/braincloud-apiref/api/capi/matchmaking/findplayerswithattributes"},next:{title:"FindPlayersWithAttributesUsingScript",permalink:"/braincloud-apiref/api/capi/matchmaking/findplayerswithattributesusingscript"}},o={},c=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",t)},p=u("PartialServop"),m=u("BrowserWindow"),d=u("Tabs"),b=u("TabItem"),g={toc:c};function k(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"findplayerswithattributesusingfilter"},"FindPlayersWithAttributesUsingFilter"),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"Finds matchmaking enabled players using a cloud code filter and additional attributes."),(0,n.kt)("p",null,"Additional information of filters can be found under ",(0,n.kt)("a",{parentName:"p",href:"/api/capi/matchmaking/#matchmaking-filters"},"Matchmaking Filters"),"."),(0,n.kt)(p,{service_name:"matchMaking",operation_name:"FIND_PLAYERS_USING_FILTER",mdxType:"PartialServop"}),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)(m,{mdxType:"BrowserWindow"},(0,n.kt)(d,{mdxType:"Tabs"},(0,n.kt)(b,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'int rangeDelta = 10;\nint numMatches = 1;\nstring jsonAttributes = "{\\"key\\":\\"value\\"}";\nstring jsonExtraParms = "{\\"parm1\\":10}";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.MatchMakingService.FindPlayersWithAttributesUsingFilter(rangeDelta, numMatches, jsonAttributes, jsonExtraParms, successCallback, failureCallback);\n'))),(0,n.kt)(b,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},'int rangeDelta = 10;\nint numMatches = 1;\nconst char *jsonAttributes = "{\\"key\\":\\"value\\"}";\nconst char *jsonExtraParms = "{\\"parm1\\":10}";\n_bc->getMatchMakingService()->findPlayersWithAttributesUsingFilter(rangeDelta, numMatches, jsonAttributes, jsonExtraParms, this);\n'))),(0,n.kt)(b,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-objectivec"},'int rangeDelta = 10;\nint numMatches = 1;\nNSString *jsonAttributes = @"{\\"key\\":\\"value\\"}";\nNSString *jsonExtraParms = @"{\\"parm1\\":10}";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc matchMakingService] findPlayersWithAttributesUsingFilter:rangeDelta\n                 numMatches:numMatches\n             jsonAttributes:jsonAttributes\n             jsonExtraParms:jsonExtraParms\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,n.kt)(b,{value:"java",label:"Java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'int rangeDelta = 10;\nint numMatches = 1;\nString jsonAttributes = "{\\"key\\":\\"value\\"}";\nString jsonExtraParms = "{\\"parm1\\":10}";\nthis; // implements IServerCallback\n\n_bc.getMatchMakingService().findPlayersWithAttributesUsingFilter(rangeDelta, numMatches, jsonAttributes, jsonExtraParms, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,n.kt)(b,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'var rangeDelta = 10;\nvar numMatches = 1;\nvar jsonAttributes = {\n    "key": "value"\n};\nvar jsonExtraParms = {\n    "parm1": 10\n};\n\n_bc.matchMaking.findPlayersWithAttributesUsingFilter(rangeDelta, numMatches, jsonAttributes, jsonExtraParms, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,n.kt)(b,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cfscript"},'var rangeDelta = 10;\nvar numMatches = 1;\nvar jsonAttributes = {\n    "key": "value"\n};\nvar jsonExtraParms = {\n    "parm1": 10\n};\nvar matchMakingProxy = bridge.getMatchMakingServiceProxy();\n\nvar postResult = matchMakingProxy.findPlayersWithAttributesUsingFilter(rangeDelta, numMatches, jsonAttributes, jsonExtraParms);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,n.kt)(b,{value:"r",label:"Raw",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-r"},'{\n  "rangeDelta": 10,\n  "numMatches": 1,\n  "attributes": {\n    "key": "value"\n  },\n  "extraParms": {\n    "parm1": 10\n  }\n}\n'))))),(0,n.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"rangeDelta"),(0,n.kt)("td",{parentName:"tr",align:null},"How close an opponents rating must be to yours")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"numMatches"),(0,n.kt)("td",{parentName:"tr",align:null},"The maximum number of matches to return")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"jsonAttributes"),(0,n.kt)("td",{parentName:"tr",align:null},"Attributes match criteria")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"jsonExtraParms"),(0,n.kt)("td",{parentName:"tr",align:null},"Parameters to be passed to the filter")))))}k.isMDXComponent=!0}}]);