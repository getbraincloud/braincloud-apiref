"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[20573],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>m});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=a.createContext({}),u=function(e){var r=a.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},c=function(e){var r=u(e.components);return a.createElement(s.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},f=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(t),f=n,m=p["".concat(s,".").concat(f)]||p[f]||d[f]||o;return t?a.createElement(m,l(l({ref:r},c),{},{components:t})):a.createElement(m,l({ref:r},c))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,l=new Array(o);l[0]=f;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[p]="string"==typeof e?e:n,l[1]=i;for(var u=2;u<o;u++)l[u]=t[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},80524:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var a=t(87462),n=(t(67294),t(3905));const o={title:"brainCloud and log4shell (CVE-2021-44228)",date:"2021-12-14",tags:["release-history"]},l=void 0,i={permalink:"/braincloud-apiref/release/2021/12/14/braincloud-and-log4shell-cve-2021-44228",source:"@site/release/2021-12-14-braincloud-and-log4shell-cve-2021-44228/index.md",title:"brainCloud and log4shell (CVE-2021-44228)",description:"As you are likely aware, a serious vulnerability has been discovered in Apache Log4J 2, a very popular logging library for Java services. This attack is informally referred to as log4shell, presumably due to the way it allows an attacker to make privileged JNDI calls via the logging of simple input data from an API or web form.",date:"2021-12-14T00:00:00.000Z",formattedDate:"December 14, 2021",tags:[{label:"release-history",permalink:"/braincloud-apiref/release/tags/release-history"}],readingTime:.975,hasTruncateMarker:!1,authors:[],frontMatter:{title:"brainCloud and log4shell (CVE-2021-44228)",date:"2021-12-14",tags:["release-history"]},prevItem:{title:"brainCloud Atlas migration - Feb 22-23, 2022",permalink:"/braincloud-apiref/release/2022/02/11/braincloud-atlas-migration"},nextItem:{title:"brainCloud 4.9.5 is live!",permalink:"/braincloud-apiref/release/2021/11/30/braincloud-4-9-5"}},s={authorsImageUrls:[]},u=[],c={toc:u};function p(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"As you are likely aware, a serious ",(0,n.kt)("a",{parentName:"p",href:"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44228"},"vulnerability")," has been discovered in ",(0,n.kt)("a",{parentName:"p",href:"https://logging.apache.org/log4j/2.x/"},"Apache Log4J 2"),", a very popular logging library for Java services. This attack is informally referred to as ",(0,n.kt)("strong",{parentName:"p"},"log4shell"),", presumably due to the way it allows an attacker to make privileged JNDI calls via the logging of simple input data from an API or web form."),(0,n.kt)("p",null,"We are pleased to report that brainCloud's Production Services are unaffected by this vulnerability - and that we have further patched our services to completely eliminate any future risk of attack."),(0,n.kt)("p",null,"More specifically:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"brainCloud's API and Portal services do not use Log4J 2 - and are thus not affected by log4shell."),(0,n.kt)("li",{parentName:"ul"},"Some secondary Datastream and RTT services ",(0,n.kt)("em",{parentName:"li"},"do")," use Log4J 2 - but these services do not log raw input data in our Production configuration - and thus, once again - are not affected by log4shell."),(0,n.kt)("li",{parentName:"ul"},"To completely eliminate any future risk of exposure, we have now patched all services that use Log4J 2 to version 2.16.0, which disables the compromisable functionality.")),(0,n.kt)("p",null,"The security of your apps and user data is of utmost importance to us. Thank you for trusting your business to brainCloud!"))}p.isMDXComponent=!0}}]);