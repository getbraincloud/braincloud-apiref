"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[39511],{3905:(e,a,t)=>{t.d(a,{Zo:()=>m,kt:()=>y});var r=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function c(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?c(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},c=Object.keys(e);for(r=0;r<c.length;r++)t=c[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)t=c[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=r.createContext({}),i=function(e){var a=r.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},m=function(e){var a=i(e.components);return r.createElement(l.Provider,{value:a},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},p=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,c=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=i(t),p=n,y=d["".concat(l,".").concat(p)]||d[p]||u[p]||c;return t?r.createElement(y,o(o({ref:a},m),{},{components:t})):r.createElement(y,o({ref:a},m))}));function y(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var c=t.length,o=new Array(c);o[0]=p;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s[d]="string"==typeof e?e:n,o[1]=s;for(var i=2;i<c;i++)o[i]=t[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},26062:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>b,frontMatter:()=>c,metadata:()=>s,toc:()=>i});var r=t(87462),n=(t(67294),t(3905));const c={},o="UpdateMatchSummaryData",s={unversionedId:"api/capi/asyncmatch/updatematchsummarydata",id:"api/capi/asyncmatch/updatematchsummarydata",title:"UpdateMatchSummaryData",description:"Overview",source:"@site/docs/api/2_capi/asyncmatch/updatematchsummarydata.md",sourceDirName:"api/2_capi/asyncmatch",slug:"/api/capi/asyncmatch/updatematchsummarydata",permalink:"/braincloud-apiref/api/capi/asyncmatch/updatematchsummarydata",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/asyncmatch/updatematchsummarydata.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671831235,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"SubmitTurn",permalink:"/braincloud-apiref/api/capi/asyncmatch/submitturn"},next:{title:"Authentication",permalink:"/braincloud-apiref/api/capi/authentication/"}},l={},i=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],m=e=>function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",a)},d=m("PartialServop"),u=m("BrowserWindow"),p=m("Tabs"),y=m("TabItem"),h={toc:i};function b(e){let{components:a,...t}=e;return(0,n.kt)("wrapper",(0,r.Z)({},h,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"updatematchsummarydata"},"UpdateMatchSummaryData"),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"Allows the current player (only) to update Summary data without having to submit a whole turn."),(0,n.kt)(d,{service_name:"asyncMatch",operation_name:"UPDATE_SUMMARY",mdxType:"PartialServop"}),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)(u,{mdxType:"BrowserWindow"},(0,n.kt)(p,{mdxType:"Tabs"},(0,n.kt)(y,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'string ownerId = "internalPlayerId";\nstring matchId = "matchId";\nstring jsonSummary = "{\\"Address\\":\\"North America\\"}";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.AsyncMatchService.UpdateMatchSummaryData(ownerId, matchId, version, jsonSummary, successCallback, failureCallback);\n'))),(0,n.kt)(y,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *ownerId = "internalPlayerId";\nconst char *matchId = "matchId";\nconst char *jsonSummary = "{\\"Address\\":\\"North America\\"}";\n_bc->getAsyncMatchService()->updateMatchSummaryData(ownerId, matchId, version, jsonSummary, this);\n'))),(0,n.kt)(y,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *ownerId = @"internalPlayerId";\nNSString *matchId = @"matchId";\nNSString *jsonSummary = @"{\\"Address\\":\\"North America\\"}";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc asyncMatchService] updateMatchSummaryData:ownerId\n                    matchId:matchId\n                    version:version\n                jsonSummary:jsonSummary\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,n.kt)(y,{value:"java",label:"Java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'String ownerId = "internalPlayerId";\nString matchId = "matchId";\nString jsonSummary = "{\\"Address\\":\\"North America\\"}";\nthis; // implements IServerCallback\n\n_bc.getAsyncMatchService().updateMatchSummaryData(ownerId, matchId, version, jsonSummary, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,n.kt)(y,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'var ownerId = "internalPlayerId";\nvar matchId = "matchId";\nvar jsonSummary = {\n    "Address": "North America"\n};\n\n_bc.asyncMatch.updateMatchSummaryData(ownerId, matchId, version, jsonSummary, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,n.kt)(y,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cfscript"},'var ownerId = "internalPlayerId";\nvar matchId = "matchId";\nvar jsonSummary = {\n    "Address": "North America"\n};\nvar asyncMatchProxy = bridge.getAsyncMatchServiceProxy();\n\nvar postResult = asyncMatchProxy.updateMatchSummaryData(ownerId, matchId, version, jsonSummary);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,n.kt)(y,{value:"r",label:"Raw",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "asyncMatch",\n    "operation": "UPDATE_SUMMARY",\n    "data": {\n        "ownerId": "the-owner-id",\n        "matchId": "the-match-id",\n        "version": 1,\n        "summary": {\n            "Address": "North America"\n        },\n        "pushContent": "The async-match has been updated!"\n    }\n}\n'))))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"JSON Response"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 200,\n    "data": {\n        "gameId": "145677",\n        "ownerId": "2bd723c6-c2ec-4946-a1a8-02b7a38540ad",\n        "matchId": "1aac24b2-7976-4fd7-b7c6-44d7ae6d26a4",\n        "version": 2,\n        "players": [\n            {\n                "playerId": "2bd723c6-c2ec-4946-a1a8-02b7a38540ad",\n                "playerName": "UserA",\n                "pictureUrl": null,\n                "summaryFriendData": null\n            },\n            {\n                "playerId": "11c2dd4d-9ed1-416d-bd04-5228c1efafac",\n                "playerName": "UserB",\n                "pictureUrl": null,\n                "summaryFriendData": null\n            }\n        ],\n        "status": {\n            "status": "PENDING",\n            "currentPlayer": "11c2dd4d-9ed1-416d-bd04-5228c1efafac"\n        },\n        "summary": {\n            "resources": 2564\n        },\n        "createdAt": 1442507219609,\n        "updatedAt": 1442507550372\n    }\n}\n'))),(0,n.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ownerId"),(0,n.kt)("td",{parentName:"tr",align:null},"Match owner identifier")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"matchId"),(0,n.kt)("td",{parentName:"tr",align:null},"Match identifier")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"version"),(0,n.kt)("td",{parentName:"tr",align:null},"Game state version to ensure turns are submitted once and in order")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"jsonSummary"),(0,n.kt)("td",{parentName:"tr",align:null},"JSON string provided by the caller that other players will see as a summary of the game when listing their games")))))}b.isMDXComponent=!0}}]);