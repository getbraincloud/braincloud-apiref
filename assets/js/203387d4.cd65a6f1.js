"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[92620],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),l=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},s=function(e){var t=l(e.components);return a.createElement(u.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,u=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=l(r),m=n,d=c["".concat(u,".").concat(m)]||c[m]||g[m]||o;return r?a.createElement(d,p(p({ref:t},s),{},{components:r})):a.createElement(d,p({ref:t},s))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,p=new Array(o);p[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[c]="string"==typeof e?e:n,p[1]=i;for(var l=2;l<o;l++)p[l]=r[l];return a.createElement.apply(null,p)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6760:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>b,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var a=r(87462),n=(r(67294),r(3905));const o={},p="AutoJoinGroup",i={unversionedId:"api/capi/group/autojoingroup",id:"api/capi/group/autojoingroup",title:"AutoJoinGroup",description:"Overview",source:"@site/docs/api/2_capi/group/autojoingroup.md",sourceDirName:"api/2_capi/group",slug:"/api/capi/group/autojoingroup",permalink:"/braincloud-apiref/api/capi/group/autojoingroup",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/group/autojoingroup.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671831235,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"ApproveGroupJoinRequest",permalink:"/braincloud-apiref/api/capi/group/approvegroupjoinrequest"},next:{title:"AutoJoinGroupMulti",permalink:"/braincloud-apiref/api/capi/group/autojoingroupmulti"}},u={},l=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],s=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",t)},c=s("PartialServop"),g=s("BrowserWindow"),m=s("Tabs"),d=s("TabItem"),y={toc:l};function b(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},y,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"autojoingroup"},"AutoJoinGroup"),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"Automatically join an open group (isOpenGroup) that matches the search criteria and has space available."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"isOpenGroup")," - the isOpenGroup flag is set on group creation, or via the ",(0,n.kt)("a",{parentName:"li",href:"/api/capi/group/setgroupopen"},"SetGroupOpen")," method.")),(0,n.kt)("p",null,"AutoJoinStrategy is defined by enum or constant in most of the client libraries.  For those that take a string, these are the valid values:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"JoinFirstGroup")," - Joins the first group found that matches the specified criteria."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"JoinRandomGroup")," - Finds all groups that matches the specified criteria and then randomly chooses one to join.")),(0,n.kt)(c,{service_name:"group",operation_name:"AUTO_JOIN_GROUP",mdxType:"PartialServop"}),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)(g,{mdxType:"BrowserWindow"},(0,n.kt)(m,{mdxType:"Tabs"},(0,n.kt)(d,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'string groupType = "a-group-type-name";\nAutoJoinStrategy autoJoinStrategy = AutoJoinStrategy.JoinRandomGroup;\nstring dataQueryJson = "{}";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.Group.AutoJoinGroup(groupType, autoJoinStrategy, dataQueryJson, successCallback, failureCallback);\n'))),(0,n.kt)(d,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *groupType = "a-group-type-name";\neAutoJoinStrategy autoJoinStrategy = eAutoJoinStrategy::JoinFirstGroup;\nconst char *dataQueryJson = "{}";\n\n_bc->getGroup()->autoJoinGroup(groupType, autoJoinStrategy, dataQueryJson, this);\n'))),(0,n.kt)(d,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *groupType = @"a-group-type-name";\nAutoJoinStrategy autoJoinStrategy = JoinFirstGroup;\nNSString *dataQueryJson = @"{}";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc groupService]\n            autoJoinGroup:groupType\n         autoJoinStrategy:autoJoinStrategy\n          completionBlock:successBlock\n     errorCompletionBlock:failureBlock\n                     cbObject:nil];\n'))),(0,n.kt)(d,{value:"java",label:"Java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'String groupType = "a-group-type-name";\nAutoJoinStrategy autoJoinStrategy = AutoJoinStrategy.JoinRandomGroup;\nString dataQueryJson = "{}";\nthis; // implements IServerCallback\n\n_bc.getGroup().autoJoinGroup(groupType, autoJoinStrategy, dataQueryJson, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,n.kt)(d,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'var groupType = "a-group-type-name";\nvar autoJoinStrategy = "JoinRandomGroup";\nvar dataQueryJson = {};\n\n_bc.group.autoJoinGroup(groupType, autoJoinStrategy, dataQueryJson, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,n.kt)(d,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cfscript"},'var groupType = "a-group-type-name";\nvar autoJoinStrategy = "JoinRandomGroup";\nvar dataQueryJson = {};\nvar groupProxy = bridge.getGroupServiceProxy();\n\nvar postResult = groupProxy.autoJoinGroup(groupType, autoJoinStrategy, dataQueryJson);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,n.kt)(d,{value:"r",label:"Raw",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "group",\n    "operation": "AUTO_JOIN_GROUP",\n    "data": {\n        "groupType": "a-group-type-name",\n        "autoJoinStrategy": "JoinRandomGroup",\n        "where": {}\n    }\n}\n'))))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"JSON Response"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 200,\n    "data": {\n        "gameId": "20595",\n        "groupId": "fee55a37-5e86-43e8-942e-06bcbe1b701e",\n        "ownerId": "ee8cad26-16f2-4ef8-9045-3aab84ce6362",\n        "name": "group-1",\n        "groupType": "test2",\n        "createdAt": 1462223553243,\n        "updatedAt": 1462223553243,\n        "members": {\n            "ee8cad26-16f2-4ef8-9045-3aab84ce6362": {\n                "role": "OWNER",\n                "attributes": {}\n            },\n            "295c510f-507f-4bcf-80e1-ebc73708ec3c": {\n                "role": "MEMBER",\n                "attributes": {}\n            }\n        },\n        "pendingMembers": {},\n        "version": 1,\n        "data": {},\n        "isOpenGroup": false,\n        "defaultMemberAttributes": {},\n        "memberCount": 2,\n        "invitedPendingMemberCount": 0,\n        "requestingPendingMemberCount": 0,\n        "acl": {\n            "member": 2,\n            "other": 1\n        }\n    }\n}\n'))),(0,n.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"groupTypeName"),(0,n.kt)("td",{parentName:"tr",align:null},"Name of the associated group type")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"autoJoinStrategy"),(0,n.kt)("td",{parentName:"tr",align:null},"Selection strategy to employ when there are multiple matches")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"dataQueryJson"),(0,n.kt)("td",{parentName:"tr",align:null},"Query parameters (optional)")))))}b.isMDXComponent=!0}}]);