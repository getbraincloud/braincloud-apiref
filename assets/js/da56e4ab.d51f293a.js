"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[53211],{3905:(e,a,t)=>{t.d(a,{Zo:()=>m,kt:()=>y});var n=t(67294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function s(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?s(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=n.createContext({}),c=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},m=function(e){var a=c(e.components);return n.createElement(l.Provider,{value:a},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=c(t),u=r,y=d["".concat(l,".").concat(u)]||d[u]||p[u]||s;return t?n.createElement(y,o(o({ref:a},m),{},{components:t})):n.createElement(y,o({ref:a},m))}));function y(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=u;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i[d]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<s;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7652:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>f,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=t(87462),r=(t(67294),t(3905));const s={},o="SendAdvancedEmailByAddress",i={unversionedId:"api/capi/mail/sendadvancedemailbyaddress",id:"api/capi/mail/sendadvancedemailbyaddress",title:"SendAdvancedEmailByAddress",description:"Overview",source:"@site/docs/api/2_capi/mail/sendadvancedemailbyaddress.md",sourceDirName:"api/2_capi/mail",slug:"/api/capi/mail/sendadvancedemailbyaddress",permalink:"/braincloud-apiref/api/capi/mail/sendadvancedemailbyaddress",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/mail/sendadvancedemailbyaddress.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671831235,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"SendAdvancedEmail",permalink:"/braincloud-apiref/api/capi/mail/sendadvancedemail"},next:{title:"SendBasicEmail",permalink:"/braincloud-apiref/api/capi/mail/sendbasicemail"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],m=e=>function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",a)},d=m("PartialServop"),p=m("BrowserWindow"),u=m("Tabs"),y=m("TabItem"),v={toc:c};function f(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},v,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sendadvancedemailbyaddress"},"SendAdvancedEmailByAddress"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Sends an advanced email to the specified email address.  The advanced API takes a set of parameters that are\ndependant on the mail service configured in the brainCloud Portal.\nFor a list of all available parameters see the top of the Mail service documentation."),(0,r.kt)(d,{service_name:"mail",operation_name:"SEND_ADVANCED_EMAIL_BY_ADDRESS",mdxType:"PartialServop"}),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)(p,{mdxType:"BrowserWindow"},(0,r.kt)(u,{mdxType:"Tabs"},(0,r.kt)(y,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'string emailAddress = "test@email.com";\nstring jsonServiceParams = "{\\"fromAddress\\":\\"email@company.com\\",\\"fromName\\":\\"Jane Doe\\",\\"replyToAddress\\":\\"optional@company.com\\",\\"replyToName\\":\\"Optional ReplyTo\\",\\"templateId\\":\\"d-www-xxx-yyy-zzz\\",\\"dynamicData\\":{\\"user\\":{\\"firstName\\":\\"John\\",\\"lastName\\":\\"Doe\\"},\\"resetLink\\":\\"www.dummuyLink.io\\"},\\"categories\\":[\\"category1\\",\\"category2\\"],\\"attachments\\":[{\\"content\\":\\"VGhpcyBhdHRhY2htZW50IHRleHQ=\\",\\"filename\\":\\"attachment.txt\\"}]}";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.MailService.SendAdvancedEmailByAddress(emailAddress, jsonServiceParams, successCallback, failureCallback);\n'))),(0,r.kt)(y,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *emailAddress = "test@email.com";\nconst char *jsonServiceParams = "{\\"fromAddress\\":\\"email@company.com\\",\\"fromName\\":\\"Jane Doe\\",\\"replyToAddress\\":\\"optional@company.com\\",\\"replyToName\\":\\"Optional ReplyTo\\",\\"templateId\\":\\"d-www-xxx-yyy-zzz\\",\\"dynamicData\\":{\\"user\\":{\\"firstName\\":\\"John\\",\\"lastName\\":\\"Doe\\"},\\"resetLink\\":\\"www.dummuyLink.io\\"},\\"categories\\":[\\"category1\\",\\"category2\\"],\\"attachments\\":[{\\"content\\":\\"VGhpcyBhdHRhY2htZW50IHRleHQ=\\",\\"filename\\":\\"attachment.txt\\"}]}";\n_bc->getMailService()->sendAdvancedEmailByAddress(emailAddress, jsonServiceParams, this);\n'))),(0,r.kt)(y,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *emailAddress = @"test@email.com";\nNSString *jsonServiceParams = @"{\\"fromAddress\\":\\"email@company.com\\",\\"fromName\\":\\"Jane Doe\\",\\"replyToAddress\\":\\"optional@company.com\\",\\"replyToName\\":\\"Optional ReplyTo\\",\\"templateId\\":\\"d-www-xxx-yyy-zzz\\",\\"dynamicData\\":{\\"user\\":{\\"firstName\\":\\"John\\",\\"lastName\\":\\"Doe\\"},\\"resetLink\\":\\"www.dummuyLink.io\\"},\\"categories\\":[\\"category1\\",\\"category2\\"],\\"attachments\\":[{\\"content\\":\\"VGhpcyBhdHRhY2htZW50IHRleHQ=\\",\\"filename\\":\\"attachment.txt\\"}]}";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc mailService] sendAdvancedEmailByAddress:emailAddress\n          jsonServiceParams:jsonServiceParams\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,r.kt)(y,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'String emailAddress = "test@email.com";\nString jsonServiceParams = "{\\"fromAddress\\":\\"email@company.com\\",\\"fromName\\":\\"Jane Doe\\",\\"replyToAddress\\":\\"optional@company.com\\",\\"replyToName\\":\\"Optional ReplyTo\\",\\"templateId\\":\\"d-www-xxx-yyy-zzz\\",\\"dynamicData\\":{\\"user\\":{\\"firstName\\":\\"John\\",\\"lastName\\":\\"Doe\\"},\\"resetLink\\":\\"www.dummuyLink.io\\"},\\"categories\\":[\\"category1\\",\\"category2\\"],\\"attachments\\":[{\\"content\\":\\"VGhpcyBhdHRhY2htZW50IHRleHQ=\\",\\"filename\\":\\"attachment.txt\\"}]}";\nthis; // implements IServerCallback\n\n_bc.getMailService().sendAdvancedEmailByAddress(emailAddress, jsonServiceParams, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,r.kt)(y,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var emailAddress = "test@email.com";\nvar jsonServiceParams = {\n    "fromAddress": "email@company.com",\n    "fromName": "Jane Doe",\n    "replyToAddress": "optional@company.com",\n    "replyToName": "Optional ReplyTo",\n    "templateId": "d-www-xxx-yyy-zzz",\n    "dynamicData": {\n        "user": {\n            "firstName": "John",\n            "lastName": "Doe"\n        },\n        "resetLink": "www.dummuyLink.io"\n    },\n    "categories": [\n        "category1",\n        "category2"\n    ],\n    "attachments": [\n        {\n            "content": "VGhpcyBhdHRhY2htZW50IHRleHQ=",\n            "filename": "attachment.txt"\n        }\n    ]\n};\n\n_bc.mail.sendAdvancedEmailByAddress(emailAddress, jsonServiceParams, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,r.kt)(y,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cfscript"},'var emailAddress = "test@email.com";\nvar jsonServiceParams = {\n    "fromAddress": "email@company.com",\n    "fromName": "Jane Doe",\n    "replyToAddress": "optional@company.com",\n    "replyToName": "Optional ReplyTo",\n    "templateId": "d-www-xxx-yyy-zzz",\n    "dynamicData": {\n        "user": {\n            "firstName": "John",\n            "lastName": "Doe"\n        },\n        "resetLink": "www.dummuyLink.io"\n    },\n    "categories": [\n        "category1",\n        "category2"\n    ],\n    "attachments": [\n        {\n            "content": "VGhpcyBhdHRhY2htZW50IHRleHQ=",\n            "filename": "attachment.txt"\n        }\n    ]\n};\nvar mailProxy = bridge.getMailServiceProxy();\n\nvar postResult = mailProxy.sendAdvancedEmailByAddress(emailAddress, jsonServiceParams);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,r.kt)(y,{value:"r",label:"Raw",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cfscript"},'var emailAddress = "test@email.com";\nvar jsonServiceParams = {\n    "fromAddress": "email@company.com",\n    "fromName": "Jane Doe",\n    "replyToAddress": "optional@company.com",\n    "replyToName": "Optional ReplyTo",\n    "templateId": "d-www-xxx-yyy-zzz",\n    "dynamicData": {\n        "user": {\n            "firstName": "John",\n            "lastName": "Doe"\n        },\n        "resetLink": "www.dummuyLink.io"\n    },\n    "categories": [\n        "category1",\n        "category2"\n    ],\n    "attachments": [\n        {\n            "content": "VGhpcyBhdHRhY2htZW50IHRleHQ=",\n            "filename": "attachment.txt"\n        }\n    ]\n};\nvar mailProxy = bridge.getMailServiceProxy();\n\nvar postResult = mailProxy.sendAdvancedEmailByAddress(emailAddress, jsonServiceParams);\nif (postResult.status == 200) {\n    // Success!\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"JSON Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 200,\n    "data": {\n        "message": "Email sent successfully"\n    }\n}\n'))),(0,r.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"emailAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"The address to send the email to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"serviceParams"),(0,r.kt)("td",{parentName:"tr",align:null},"Set of parameters dependant on the mail service configured")))))}f.isMDXComponent=!0}}]);