"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[60911],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),s=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(r),m=a,f=u["".concat(o,".").concat(m)]||u[m]||d[m]||l;return r?n.createElement(f,i(i({ref:t},p),{},{components:r})):n.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=m;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c[u]="string"==typeof e?e:a,i[1]=c;for(var s=2;s<l;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},10310:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>c,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const l={title:"RestrictClientCalls script",date:"2019-01-07"},i=void 0,c={unversionedId:"learn/cloud-code-central/handy-cloud-code-scripts/restrictclientcalls-script/index",id:"learn/cloud-code-central/handy-cloud-code-scripts/restrictclientcalls-script/index",title:"RestrictClientCalls script",description:"Purpose",source:"@site/docs/learn/4_cloud-code-central/handy-cloud-code-scripts/restrictclientcalls-script/index.md",sourceDirName:"learn/4_cloud-code-central/handy-cloud-code-scripts/restrictclientcalls-script",slug:"/learn/cloud-code-central/handy-cloud-code-scripts/restrictclientcalls-script/",permalink:"/braincloud-apiref/learn/cloud-code-central/handy-cloud-code-scripts/restrictclientcalls-script/",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/learn/4_cloud-code-central/handy-cloud-code-scripts/restrictclientcalls-script/index.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1672679892,formattedLastUpdatedAt:"Jan 2, 2023",frontMatter:{title:"RestrictClientCalls script",date:"2019-01-07"},sidebar:"learnSidebar",previous:{title:"RankGame_FinishMatch",permalink:"/braincloud-apiref/learn/cloud-code-central/handy-cloud-code-scripts/rankgame_finishmatch/"},next:{title:"ScriptScheduler script",permalink:"/braincloud-apiref/learn/cloud-code-central/handy-cloud-code-scripts/scriptscheduler-script/"}},o={},s=[{value:"Purpose",id:"purpose",level:2},{value:"Script",id:"script",level:2},{value:"Usage / Setup",id:"usage--setup",level:2},{value:"Notes",id:"notes",level:2}],p={toc:s};function u(e){let{components:t,...l}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"purpose"},"Purpose"),(0,a.kt)("p",null,"Allows an app to severely restrict access to brainCloud Client APIs. Very useful if your app has significant security requirements."),(0,a.kt)("p",null,"The script can be configured in one of two ways:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"whitelist - all services and operations specified are ",(0,a.kt)("em",{parentName:"li"},"allowed"),". Any API calls not specified are not allowed."),(0,a.kt)("li",{parentName:"ul"},"blacklist - disallow access to the services and operations specified. All other API calls allowed.")),(0,a.kt)("h2",{id:"script"},"Script"),(0,a.kt)("p",null,"Click ",(0,a.kt)("a",{target:"_blank",href:r(36643).Z},"RestrictClientCalls.ccjs.zip")," to download the file."),(0,a.kt)("h2",{id:"usage--setup"},"Usage / Setup"),(0,a.kt)("p",null,"To configure this script, you must first import it into your app."),(0,a.kt)("p",null,"Then go to the ",(0,a.kt)("strong",{parentName:"p"},"Design | Cloud Code | API Hooks")," screen, and click the ",(0,a.kt)("strong",{parentName:"p"},"[+ Create]")," button to configure the script."),(0,a.kt)("p",null,"On the configuration dialog that displays, choose:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},'Service: "Dispatcher"'),(0,a.kt)("li",{parentName:"ul"},'Operation: "ProcessMessage"'),(0,a.kt)("li",{parentName:"ul"},'Pre/Post: "Pre"'),(0,a.kt)("li",{parentName:"ul"},'Script: "RestrictClientCalls"')),(0,a.kt)("p",null,"And then in the ",(0,a.kt)("em",{parentName:"p"},"Params")," section, you can configure a whitelist or blacklist of services and operations to enable or restrict. Here is an example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'{\n    "listtype": "whitelist",\n    "services": {\n        "entity": { "READ": 1 },\n        "globalEntity": { "GET_LIST": 1, "GET_LIST_COUNT": 1 },\n        "heartbeat": { "READ": 1 },\n        "playerState": {},\n        "script": {}\n    }\n}\n')),(0,a.kt)("p",null,"The example above allows calls to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},'"entity" service, "READ" operation only'),(0,a.kt)("li",{parentName:"ul"},'"globalEntitity" service, "GET_LIST" and "GET_LIST_COUNT" operations'),(0,a.kt)("li",{parentName:"ul"},'"heartbeat" service, "READ" operation only <- important - heartbeats are used to keep your client sessions alive!'),(0,a.kt)("li",{parentName:"ul"},'"playerState" service - any operation'),(0,a.kt)("li",{parentName:"ul"},'"script" service - any operation... <- note, individual script permissions still apply')),(0,a.kt)("h2",{id:"notes"},"Notes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},'Calls to the "authenticationV2" service are always allowed.')),(0,a.kt)("li",{parentName:"ul"},"Rejected API calls will return an HTTP status of 500 with a 40639 ",(0,a.kt)("inlineCode",{parentName:"li"},"reason_code"),".")),(0,a.kt)("p",null,"Warning"),(0,a.kt)("p",null,"This approach is complete and secure - but does result in a lot of additional API calls being incurred by your app. For a more targeted approach, see ",(0,a.kt)("a",{parentName:"p",href:"http://help.getbraincloud.com/en/articles/1852058-is-there-a-way-to-prevent-a-client-apps-from-making-certain-api-calls"},"this")," knowledge base article."))}u.isMDXComponent=!0},36643:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/files/RestrictClientCalls.ccjs-ec281200954da393f2311f648afe8afb.zip"}}]);