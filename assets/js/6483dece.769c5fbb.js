"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[40614],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),p=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(a),d=r,h=s["".concat(c,".").concat(d)]||s[d]||m[d]||i;return a?n.createElement(h,o(o({ref:t},u),{},{components:a})):n.createElement(h,o({ref:t},u))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},87658:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>b,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={},o="AttachParentWithIdentity",l={unversionedId:"api/capi/identity/attachparentwithidentity",id:"api/capi/identity/attachparentwithidentity",title:"AttachParentWithIdentity",description:"Overview",source:"@site/docs/api/2_capi/identity/attachparentwithidentity.md",sourceDirName:"api/2_capi/identity",slug:"/api/capi/identity/attachparentwithidentity",permalink:"/braincloud-apiref/api/capi/identity/attachparentwithidentity",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/identity/attachparentwithidentity.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"AttachOculusIdentity",permalink:"/braincloud-apiref/api/capi/identity/attachoculusidentity"},next:{title:"AttachParseIdentity",permalink:"/braincloud-apiref/api/capi/identity/attachparseidentity"}},c={},p=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},s=u("PartialServop"),m=u("BrowserWindow"),d=u("Tabs"),h=u("TabItem"),y={toc:p};function b(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"attachparentwithidentity"},"AttachParentWithIdentity"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Attach a parent identity to the current profile. Create if necessary."),(0,r.kt)(s,{service_name:"identity",operation_name:"ATTACH_PARENT_WITH_IDENTITY",mdxType:"PartialServop"}),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)(m,{mdxType:"BrowserWindow"},(0,r.kt)(d,{mdxType:"Tabs"},(0,r.kt)(h,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'string externalId = "email@email.com";\nstring authenticationToken = "email@email.com";\nAuthenticationType authenticationType = AuthenticationType.Email;\nstring externalAuthName = "";\nbool forceCreate = true;\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.IdentityService.AttachParentWithIdentity(externalId, authenticationToken, authenticationType, externalAuthName, forceCreate, successCallback, failureCallback);\n'))),(0,r.kt)(h,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *externalId = "email@email.com";\nconst char *authenticationToken = "email@email.com";\nAuthenticationType authenticationType = AuthenticationType::Email;\nconst char *externalAuthName = "";\nbool forceCreate = true;\n_bc->getIdentityService()->attachParentWithIdentity(externalId, authenticationToken, authenticationType, externalAuthName, forceCreate, this);\n'))),(0,r.kt)(h,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *externalId = @"email@email.com";\nNSString *authenticationToken = @"email@email.com";\nAuthenticationTypeObjc authenticationType = [AuthenticationTypeObjc Email];\nNSString *externalAuthName = @"";\nbool forceCreate = true;\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc identityService] attachParentWithIdentity:externalId\n        authenticationToken:authenticationToken\n         authenticationType:authenticationType\n           externalAuthName:externalAuthName\n                forceCreate:forceCreate\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,r.kt)(h,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'String externalId = "email@email.com";\nString authenticationToken = "email@email.com";\nAuthenticationType authenticationType = AuthenticationType.Email;\nString externalAuthName = "";\nboolean forceCreate = true;\nthis; // implements IServerCallback\n\n_bc.getIdentityService().attachParentWithIdentity(externalId, authenticationToken, authenticationType, externalAuthName, forceCreate, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,r.kt)(h,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var externalId = "email@email.com";\nvar authenticationToken = "email@email.com";\nvar authenticationType = "_bc.identity.authenticationType.email;\nvar externalAuthName = "";\nvar forceCreate = true;\n\n_bc.identity.attachParentWithIdentity(externalId, authenticationToken, authenticationType, externalAuthName, forceCreate, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,r.kt)(h,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cfscript"},'var externalId = "email@email.com";\nvar authenticationToken = "email@email.com";\nvar authenticationType = "Email";\nvar externalAuthName = "";\nvar forceCreate = true;\nvar identityProxy = bridge.getIdentityServiceProxy();\n\nvar postResult = identityProxy.attachParentWithIdentity(externalId, authenticationToken, authenticationType, externalAuthName, forceCreate);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,r.kt)(h,{value:"r",label:"Raw",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "identity",\n    "operation": "ATTACH_PARENT_WITH_IDENTITY",\n    "data": {\n        "externalId": "email@email.com",\n        "authenticationToken": "email@email.com",\n        "authenticationType": "Email",\n        "externalAuthName": "",\n        "forceCreate": true\n    }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"JSON Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 200,\n    "data": {\n        "profileId": "1234-1234-1234-1234",\n        "newUser": false\n    }\n}\n'))),(0,r.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"externalId"),(0,r.kt)("td",{parentName:"tr",align:null},"User ID")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"authenticationToken"),(0,r.kt)("td",{parentName:"tr",align:null},"Password or client side token")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"authenticationType"),(0,r.kt)("td",{parentName:"tr",align:null},"Type of authentication. Full list of types can be found ",(0,r.kt)("a",{parentName:"td",href:"/api/appendix/authtypes"},"here"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"externalAuthName"),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the external authentication mechanism (optional, used for custom authentication types)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"forceCreate"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to create the profile if it does not exist")))))}b.isMDXComponent=!0}}]);