"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[75244],{3905:(t,e,a)=>{a.d(e,{Zo:()=>c,kt:()=>m});var r=a(67294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function s(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function n(t,e){if(null==t)return{};var a,r,l=function(t,e){if(null==t)return{};var a,r,l={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var o=r.createContext({}),p=function(t){var e=r.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):s(s({},e),t)),a},c=function(t){var e=p(t.components);return r.createElement(o.Provider,{value:e},t.children)},d="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},b=r.forwardRef((function(t,e){var a=t.components,l=t.mdxType,i=t.originalType,o=t.parentName,c=n(t,["components","mdxType","originalType","parentName"]),d=p(a),b=l,m=d["".concat(o,".").concat(b)]||d[b]||u[b]||i;return a?r.createElement(m,s(s({ref:e},c),{},{components:a})):r.createElement(m,s({ref:e},c))}));function m(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var i=a.length,s=new Array(i);s[0]=b;var n={};for(var o in e)hasOwnProperty.call(e,o)&&(n[o]=e[o]);n.originalType=t,n[d]="string"==typeof t?t:l,s[1]=n;for(var p=2;p<i;p++)s[p]=a[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}b.displayName="MDXCreateElement"},32361:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>s,default:()=>b,frontMatter:()=>i,metadata:()=>n,toc:()=>p});var r=a(87462),l=(a(67294),a(3905));const i={},s="Global Statistics",n={unversionedId:"api/capi/globalstats/index",id:"api/capi/globalstats/index",title:"Global Statistics",description:"Overview",source:"@site/docs/api/2_capi/globalstats/index.md",sourceDirName:"api/2_capi/globalstats",slug:"/api/capi/globalstats/",permalink:"/braincloud-apiref/api/capi/globalstats/",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/globalstats/index.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"SysRenameFolder",permalink:"/braincloud-apiref/api/capi/globalfile/sysrenamefolder"},next:{title:"IncrementGlobalStats",permalink:"/braincloud-apiref/api/capi/globalstats/incrementglobalstats"}},o={},p=[{value:"Overview",id:"overview",level:2},{value:"API Summary",id:"api-summary",level:3},{value:"Global Statistics",id:"global-statistics-1",level:3}],c=(d="DocCardList",function(t){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,l.kt)("div",t)});var d;const u={toc:p};function b(t){let{components:e,...a}=t;return(0,l.kt)("wrapper",(0,r.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"global-statistics"},"Global Statistics"),(0,l.kt)("h2",{id:"overview"},"Overview"),(0,l.kt)("p",null,"The Global Statistics service allows you to retrieve and update your app's predefined statistics defined on the\n",(0,l.kt)("a",{parentName:"p",href:"https://portal.braincloudservers.com/admin/dashboard#/development/stats-game"},"Global Statistics")," page of the brainCloud portal."),(0,l.kt)("p",null,"Global Statistics must be pre-defined from the ",(0,l.kt)("a",{parentName:"p",href:"https://portal.braincloudservers.com/admin/dashboard#/development/stats-game"},"Statistics Rules - Global Statistics page"),"\nof the brainCloud portal.  If instead you need to create them dynamically at runtime, you can enable the Generate App Statistic Rule Enabled setting on the\n",(0,l.kt)("a",{parentName:"p",href:"https://portal.braincloudservers.com/admin/dashboard#/development/core-settings-advanced-settings"},"Advanced Settings page")," of your app in the brainCloud portal."),(0,l.kt)("p",null,"Global (or App) Statistics are similar to User Stats, except that they are stored centrally across all of an app's users."),(0,l.kt)("h3",{id:"api-summary"},"API Summary"),(0,l.kt)("h3",{id:"global-statistics-1"},"Global Statistics"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/api/capi/globalstats/readallglobalstats"},"ReadAllGlobalStats")," - Returns all of the global statistics."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/api/capi/globalstats/readglobalstatsforcategory"},"ReadGlobalStatsForCategory")," - Reads a subset of global statistics belonging to the specified category (all if omitted)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/api/capi/globalstats/readglobalstatssubset"},"ReadGlobalStatsSubset")," - Reads a subset of global statistics as defined by the input JSON."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/api/capi/globalstats/incrementglobalstats"},"IncrementGlobalStats")," - Atomically increment (or decrement) global statistics."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/api/capi/globalstats/processstatistics"},"ProcessStatistics")," - Apply statistics grammar to a partial set of statistics.")),(0,l.kt)(c,{mdxType:"DocCardList"}))}b.isMDXComponent=!0}}]);