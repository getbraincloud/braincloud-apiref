"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[51281],{3905:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>f});var a=r(67294);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function l(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?l(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function o(e,n){if(null==e)return{};var r,a,t=function(e,n){if(null==e)return{};var r,a,t={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var c=a.createContext({}),s=function(e){var n=a.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},d=function(e){var n=s(e.components);return a.createElement(c.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,l=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=s(r),m=t,f=u["".concat(c,".").concat(m)]||u[m]||p[m]||l;return r?a.createElement(f,i(i({ref:n},d),{},{components:r})):a.createElement(f,i({ref:n},d))}));function f(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var l=r.length,i=new Array(l);i[0]=m;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o[u]="string"==typeof e?e:t,i[1]=o;for(var s=2;s<l;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},19156:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>v,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=r(87462),t=(r(67294),r(3905));const l={},i="ListFriends",o={unversionedId:"api/capi/friend/listfriends",id:"api/capi/friend/listfriends",title:"ListFriends",description:"Overview",source:"@site/docs/api/2_capi/friend/listfriends.md",sourceDirName:"api/2_capi/friend",slug:"/api/capi/friend/listfriends",permalink:"/braincloud-apiref/api/capi/friend/listfriends",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/friend/listfriends.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"GetUsersOnlineStatus",permalink:"/braincloud-apiref/api/capi/friend/getusersonlinestatus"},next:{title:"ReadFriendEntity",permalink:"/braincloud-apiref/api/capi/friend/readfriendentity"}},c={},s=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],d=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,t.kt)("div",n)},u=d("PartialServop"),p=d("BrowserWindow"),m=d("Tabs"),f=d("TabItem"),b={toc:s};function v(e){let{components:n,...r}=e;return(0,t.kt)("wrapper",(0,a.Z)({},b,r,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"listfriends"},"ListFriends"),(0,t.kt)("h2",{id:"overview"},"Overview"),(0,t.kt)("p",null,"Retrieves a list of user and friend platform information for all friends of the current user."),(0,t.kt)(u,{service_name:"friend",operation_name:"LIST_FRIENDS",mdxType:"PartialServop"}),(0,t.kt)("h2",{id:"usage"},"Usage"),(0,t.kt)(p,{mdxType:"BrowserWindow"},(0,t.kt)(m,{mdxType:"Tabs"},(0,t.kt)(f,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-csharp"},'FriendPlatform friendPlatform = FriendPlatform.Facebook;\nbool includeSummaryData = true;\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.Friend.ListFriends(friendPlatform, includeSummaryData, successCallback, failureCallback);\n'))),(0,t.kt)(f,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-cpp"},"FriendPlatform friendPlatform = FriendPlatform::Facebook;\nbool includeSummaryData = true;\n\n_bc->getFriend()->listFriends(friendPlatform, includeSummaryData, this);\n"))),(0,t.kt)(f,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-objectivec"},"FriendPlatformObjc friendPlatform = [FriendPlatformObjc Facebook];\nbool includeSummaryData = true;\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc friendService] listFriends:friendPlatform\n         includeSummaryData:includeSummaryData\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n"))),(0,t.kt)(f,{value:"java",label:"Java",mdxType:"TabItem"},(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-java"},'FriendPlatform friendPlatform = FriendPlatform.Facebook;\nboolean includeSummaryData = true;\nthis; // implements IServerCallback\n\n_bc.getFriend().listFriends(friendPlatform, includeSummaryData, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,t.kt)(f,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-javascript"},'var friendPlatform = _bc.friend.friendPlatform.Facebook;\nvar includeSummaryData = true;\n\n_bc.friend.listFriends(friendPlatform, includeSummaryData, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,t.kt)(f,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-cfscript"},'var friendPlatform = "Facebook";\nvar includeSummaryData = true;\nvar friendProxy = bridge.getFriendServiceProxy();\n\nvar postResult = friendProxy.listFriends(friendPlatform, includeSummaryData);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,t.kt)(f,{value:"r",label:"Raw",mdxType:"TabItem"},(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "friend",\n    "operation": "LIST_FRIENDS",\n    "data": {\n        "friendPlatform": "brainCloud",\n        "includeSummaryData": true\n    }\n}\n'))))),(0,t.kt)("details",null,(0,t.kt)("summary",null,"JSON Response"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-json"},'// Example 1: for friendPlatform = All\n{\n    "status": 200,\n    "data": {\n        "friends": [\n            {\n                "externalData": {\n                    "Facebook": {\n                        "pictureUrl": "https://scontent.xx.fbcdn.net/hprofile-xfp1/v/t1.0-1/p50x50/XXX.jpg?oh=YYY&oe=ZZZ",\n                        "name": "scientist at large",\n                        "externalId": "100003668521730"\n                    },\n                    "brainCloud": {}\n                },\n                "playerId": "1aa3428c-5877-4624-a909-f2b1af931f00",\n                "name": "Mr. Peabody",\n                "summaryFriendData": {\n                    "LEVEL": -4\n                },\n                "pictureUrl": "www.exampleurl.com"\n            },\n            {\n                "externalData": {\n                    "Facebook": {\n                        "pictureUrl": "https://scontent.xx.fbcdn.net/hprofile-xfa1/v/t1.0-1/c0.11.50.50/p50x50/3AAA.jpg?oh=BBBa&oe=CCC",\n                        "name": "Aquaman",\n                        "externalId": "100003509724516"\n                    }\n                },\n                "playerId": "1598c5b6-1b09-431b-96bc-9c2c928cad3b",\n                "name": null,\n                "summaryFriendData": {\n                    "LEVEL": 1\n                },\n                "pictureUrl": "www.exampleurl.com"\n            }\n        ],\n        "server_time": 1458224807855\n    }\n}\n\n// Example 2: for friendPlatform = Facebook\n{\n    "status": 200,\n    "data": {\n        "friends": [\n            {\n                "externalData": {\n                    "Facebook": {\n                        "pictureUrl": "https://scontent.xx.fbcdn.net/hprofile-xfp1/v/t1.0-1/p50x50/XXX.jpg?oh=YYY&oe=ZZZ",\n                        "name": "scientist at large",\n                        "externalId": "100003668521730"\n                    }\n                },\n                "playerId": "1aa3428c-5877-4624-a909-f2b1af931f00",\n                "name": "Mr. Peabody",\n                "summaryFriendData": {\n                    "LEVEL": -4\n                }\n            },\n            {\n                "externalData": {\n                    "Facebook": {\n                        "pictureUrl": "https://scontent.xx.fbcdn.net/hprofile-xfa1/v/t1.0-1/c0.11.50.50/p50x50/3AAA.jpg?oh=BBBa&oe=CCC",\n                        "name": "Aquaman",\n                        "externalId": "100003509724516"\n                    }\n                },\n                "playerId": "1598c5b6-1b09-431b-96bc-9c2c928cad3b",\n                "name": null,\n                "summaryFriendData": {\n                    "LEVEL": 1\n                }\n            }\n        ],\n        "server_time": 1458224807855\n    }\n}\n'))),(0,t.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,t.kt)("table",null,(0,t.kt)("thead",{parentName:"table"},(0,t.kt)("tr",{parentName:"thead"},(0,t.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,t.kt)("th",{parentName:"tr",align:null},"Description"))),(0,t.kt)("tbody",{parentName:"table"},(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",{parentName:"tr",align:null},"friendPlatform"),(0,t.kt)("td",{parentName:"tr",align:null},'Friend platform to query. Valid values are "Facebook", "brainCloud" and "All".')),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",{parentName:"tr",align:null},"includeSummaryData"),(0,t.kt)("td",{parentName:"tr",align:null},"True if including summary data; false otherwise.")))))}v.isMDXComponent=!0}}]);