"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[70377],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),c=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(r),g=n,m=d["".concat(l,".").concat(g)]||d[g]||s[g]||o;return r?a.createElement(m,p(p({ref:t},u),{},{components:r})):a.createElement(m,p({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,p=new Array(o);p[0]=g;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:n,p[1]=i;for(var c=2;c<o;c++)p[c]=r[c];return a.createElement.apply(null,p)}return a.createElement.apply(null,r)}g.displayName="MDXCreateElement"},50158:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>p,default:()=>b,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=r(87462),n=(r(67294),r(3905));const o={},p="UpdateGroupEntityAcl",i={unversionedId:"api/capi/group/updategroupentityacl",id:"api/capi/group/updategroupentityacl",title:"UpdateGroupEntityAcl",description:"Overview",source:"@site/docs/api/2_capi/group/updategroupentityacl.md",sourceDirName:"api/2_capi/group",slug:"/api/capi/group/updategroupentityacl",permalink:"/braincloud-apiref/api/capi/group/updategroupentityacl",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/group/updategroupentityacl.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"UpdateGroupData",permalink:"/braincloud-apiref/api/capi/group/updategroupdata"},next:{title:"UpdateGroupEntityData",permalink:"/braincloud-apiref/api/capi/group/updategroupentitydata"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",t)},d=u("PartialServop"),s=u("BrowserWindow"),g=u("Tabs"),m=u("TabItem"),y={toc:c};function b(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},y,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"updategroupentityacl"},"UpdateGroupEntityAcl"),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"Update the acl settings for a group entity, enforcing ownership."),(0,n.kt)(d,{service_name:"group",operation_name:"UPDATE_GROUP_ENTITY_ACL",mdxType:"PartialServop"}),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)(s,{mdxType:"BrowserWindow"},(0,n.kt)(g,{mdxType:"Tabs"},(0,n.kt)(m,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'string groupId = "a-group-id";\nstring entityId = "a-group-entity-id";\nstring acl = "{ \\"member\\": 1, \\"other\\": 0 }";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n  Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n  Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.GroupService.UpdateGroupEntityAcl(groupId, entityId, acl, successCallback, failureCallback);\n'))),(0,n.kt)(m,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *groupId = "a-group-id";\nconst char *entityId = "a-group-entity-id";\nconst char *acl = "{ \\"member\\": 1, \\"other\\": 0 }";\n\n_bc->getGroupService()->updateGroupEntityAcl(groupId, entityId, acl, this);\n'))),(0,n.kt)(m,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *groupId = @"a-group-id";\nNSString *entityId = @"a-group-entity-id";\nNSString *acl = "{ \\"member\\": 1, \\"other\\": 0 }";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc groupService] updateGroupEntityAcl:\n                       groupId:groupId\n                      entityId:entityId\n                           acl:acl\n               completionBlock:successBlock\n          errorCompletionBlock:failureBlock\n                      cbObject:nil];\n'))),(0,n.kt)(m,{value:"java",label:"Java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'String groupId = "a-group-id";\nString entityId = "a-group-entity-id";\nString acl = "{ \\"member\\": 1, \\"other\\": 0 }";\nthis; // implements IServerCallback\n\n_bc.getGroupService().updateGroupEntityAcl(groupId, entityId, acl, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n  System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n  System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,n.kt)(m,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'var groupId = "a-group-id";\nvar entityId = "a-group-entity-id";\nvar acl = {\n  "member": 1,\n  "other": 0\n};\n\n_bc.group.updateGroupEntityAcl(groupId, entityId, acl, result =>\n{\n  var status = result.status;\n  console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,n.kt)(m,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cfscript"},'var groupId = "a-group-id";\nvar entityId = "a-group-entity-id";\nvar acl = {\n  "member": 1,\n  "other": 0\n};\nvar groupProxy = bridge.getGroupServiceProxy();\n\nvar postResult = groupProxy.updateGroupEntityAcl(groupId, entityId, acl);\nif (postResult.status == 200) {\n  // Success!\n}\n'))),(0,n.kt)(m,{value:"r",label:"Raw",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-r"},'{\n  "service": "group",\n  "operation": "UPDATE_GROUP_ENTITY_ACL",\n  "data":\n  {\n    "groupId": "a-group-id",\n    "entityId": "a-group-entity-id",\n    "acl": {\n      "member": 1,\n      "other": 0\n    }\n  }\n}\n'))))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"JSON Response"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "createdAt": 1666994425075,\n    "entityType": "myEntityType",\n    "groupId": "2bf538d1-19ea-4e14-9862-f979215e09b7",\n    "entityId": "e62dfe16-e6ec-4ebf-b044-2bb3626027e8",\n    "acl": {\n      "member": 1,\n      "other": 0\n    },\n    "ownerId": null,\n    "version": 2,\n    "updatedAt": 1666994963444\n  },\n  "status": 200\n}\n'))),(0,n.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"groupId"),(0,n.kt)("td",{parentName:"tr",align:null},"The id of the group.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"entityId"),(0,n.kt)("td",{parentName:"tr",align:null},"The id of the entity to update.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"acl"),(0,n.kt)("td",{parentName:"tr",align:null},"Access control list for the group entity.")))))}b.isMDXComponent=!0}}]);