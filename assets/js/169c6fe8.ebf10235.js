"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[7560],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),f=a,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||i;return r?n.createElement(m,o(o({ref:t},p),{},{components:r})):n.createElement(m,o({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},31977:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>v,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(87462),a=(r(67294),r(3905));const i={},o="GetProfileInfoForCredentialIfExists",l={unversionedId:"api/capi/friend/getprofileinfoforcredentialifexists",id:"api/capi/friend/getprofileinfoforcredentialifexists",title:"GetProfileInfoForCredentialIfExists",description:"Overview",source:"@site/docs/api/2_capi/friend/getprofileinfoforcredentialifexists.md",sourceDirName:"api/2_capi/friend",slug:"/api/capi/friend/getprofileinfoforcredentialifexists",permalink:"/braincloud-apiref/api/capi/friend/getprofileinfoforcredentialifexists",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/friend/getprofileinfoforcredentialifexists.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"GetProfileInfoForCredential",permalink:"/braincloud-apiref/api/capi/friend/getprofileinfoforcredential"},next:{title:"GetProfileInfoForExternalAuthId",permalink:"/braincloud-apiref/api/capi/friend/getprofileinfoforexternalauthid"}},c={},s=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},d=p("PartialServop"),u=p("BrowserWindow"),f=p("Tabs"),m=p("TabItem"),b={toc:s};function v(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},b,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getprofileinfoforcredentialifexists"},"GetProfileInfoForCredentialIfExists"),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Retrieves profile information for the specified user. Silently fails"),(0,a.kt)(d,{service_name:"friend",operation_name:"GET_PROFILE_INFO_FOR_CREDENTIAL_IF_EXISTS",mdxType:"PartialServop"}),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)(u,{mdxType:"BrowserWindow"},(0,a.kt)(f,{mdxType:"Tabs"},(0,a.kt)(m,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'string externalId = "profileId";\nstring authenticationType = "Facebook";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n  Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n  Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.FriendService.GetProfileInfoForCredentialIfExists(externalId, authenticationType, successCallback, failureCallback);\n'))),(0,a.kt)(m,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'const chat *externalId = "profileId";\nconst chat *authenticationType = "Facebook";\n\n_bc->getFriendService()->getProfileInfoForCredentialIfExists(externalId, authenticationType, this);\n'))),(0,a.kt)(m,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *externalId = @"profileId";\nNSString *authenticationType = @"Facebook";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc friendService] getProfileInfoForCredentialIfExists:externalId\n            authenticationType:authenticationType\n               completionBlock:successBlock\n          errorCompletionBlock:failureBlock\n                      cbObject:nil];\n'))),(0,a.kt)(m,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'String externalId = "profileId";\nString authenticationType = "Facebook";\nthis; // implements IServerCallback\n\n_bc.getFriendService().getProfileInfoForCredentialIfExists(externalId, authenticationType, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n  System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n  System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,a.kt)(m,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'var externalId = "profileId";\nvar authenticationType = "Facebook";\n\n_bc.friend.getProfileInfoForCredentialIfExists(externalId, authenticationType, result =>\n{\n  var status = result.status;\n  console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,a.kt)(m,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cfscript"},'var externalId = "profileId";\nvar authenticationType = "Facebook";\nvar friendProxy = bridge.getFriendServiceProxy();\n\nvar postResult = friendProxy.getProfileInfoForCredentialIfExists(externalId, authenticationType);\nif (postResult.status == 200) {\n  // Success!\n}\n'))),(0,a.kt)(m,{value:"r",label:"Raw",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-r"},'{\n  "service": "friend",\n  "operation": "GET_PROFILE_INFO_FOR_CREDENTIAL_IF_EXISTS",\n  "data":\n  {\n    "externalId": "profileId",\n    "authenticationType": "Facebook"\n  }\n}\n'))))),(0,a.kt)("details",null,(0,a.kt)("summary",null,"JSON Response"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "status" : 200,\n  "data" : {}\n}\n'))),(0,a.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"externalId"),(0,a.kt)("td",{parentName:"tr",align:null},"External id.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"authenticationType"),(0,a.kt)("td",{parentName:"tr",align:null},"Associated authentication type.")))))}v.isMDXComponent=!0}}]);