"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[63350],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>g});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(a),u=r,g=p["".concat(d,".").concat(u)]||p[u]||m[u]||o;return a?n.createElement(g,i(i({ref:t},c),{},{components:a})):n.createElement(g,i({ref:t},c))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},28590:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>k,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=a(87462),r=(a(67294),a(3905));const o={},i="GenerateCodes",l={unversionedId:"api/capi/redemptioncode/generatecodes",id:"api/capi/redemptioncode/generatecodes",title:"GenerateCodes",description:"Overview",source:"@site/docs/api/2_capi/redemptioncode/generatecodes.md",sourceDirName:"api/2_capi/redemptioncode",slug:"/api/capi/redemptioncode/generatecodes",permalink:"/braincloud-apiref/api/capi/redemptioncode/generatecodes",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/redemptioncode/generatecodes.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"AddCode",permalink:"/braincloud-apiref/api/capi/redemptioncode/addcode"},next:{title:"GenerateCodesInline",permalink:"/braincloud-apiref/api/capi/redemptioncode/generatecodesinline"}},d={},s=[{value:"Overview",id:"overview",level:2},{value:"Status Codes",id:"status-codes",level:3},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},p=c("PartialServop"),m=c("BrowserWindow"),u=c("Tabs"),g=c("TabItem"),v={toc:s};function k(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},v,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"generatecodes"},"GenerateCodes"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Generates specified quantity of redemption codes."),(0,r.kt)("h3",{id:"status-codes"},"Status Codes"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Code"),(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"40399"),(0,r.kt)("td",{parentName:"tr",align:null},"REDEMPTION_CODE_TYPE_NOT_FOUND"),(0,r.kt)("td",{parentName:"tr",align:null},"The specified code type was not found")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"40753"),(0,r.kt)("td",{parentName:"tr",align:null},"REDEMPTION_CODE_TYPE_DISABLED"),(0,r.kt)("td",{parentName:"tr",align:null},"Invalid code. Redemption code type has been disabled")))),(0,r.kt)(p,{service_name:"redemptionCode",operation_name:"GENERATE_CODES",mdxType:"PartialServop"}),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)(m,{mdxType:"BrowserWindow"},(0,r.kt)(u,{mdxType:"Tabs"},(0,r.kt)(g,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'string codeType = "the-code-type";\nstring codeState = "Available";\nint quantity = 100;\nstring customCodeInfo = "{}";\nstring prefix = "";\nstring algorithmName = "FiveByFive";\nstring algorithmDetailsJson = "{ \\"includeCheck\\": false }";\nstring emailAddress = "email@email.com";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n  Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n  Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.RedemptionCodeService.GenerateCodes(codeType, codeState, quantity, customCodeInfo, prefix, algorithmName, algorithmDetailsJson, emailAddress, successCallback, failureCallback);\n'))),(0,r.kt)(g,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *codeType = "the-code-type";\nconst char *codeState = "Available";\nint quantity = 100;\nconst char *customCodeInfo = "{}";\nconst char *prefix = "";\nconst char *algorithmName = "FiveByFive";\nconst char *algorithmDetailsJson = "{ \\"includeCheck\\": false }";\nconst char *emailAddress = "email@email.com";\n\n_bc->getRedemptionCodeService()->generateCodes(codeType, codeState, quantity, customCodeInfo, prefix, algorithmName, algorithmDetailsJson, emailAddress, this);\n'))),(0,r.kt)(g,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *codeType = @"the-code-type";\nNSString *codeState = @"Available";\nint quantity = 100;\nNSString *customCodeInfo = "{}";\nNSString *prefix = @"";\nNSString *algorithmName = @"FiveByFive";\nNSString *algorithmDetailsJson = "{ \\"includeCheck\\": false }";\nNSString *emailAddress = @"email@email.com";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc redemptionCodeService] generateCodes:codeType\n                     codeState:codeState\n                      quantity:quantity\n                customCodeInfo:customCodeInfo\n                        prefix:prefix\n                 algorithmName:algorithmName\n          algorithmDetailsJson:algorithmDetailsJson\n                  emailAddress:emailAddress\n               completionBlock:successBlock\n          errorCompletionBlock:failureBlock\n                      cbObject:nil];\n'))),(0,r.kt)(g,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'String codeType = "the-code-type";\nString codeState = "Available";\nint quantity = 100;\nString customCodeInfo = "{}";\nString prefix = "";\nString algorithmName = "FiveByFive";\nString algorithmDetailsJson = "{ \\"includeCheck\\": false }";\nString emailAddress = "email@email.com";\nthis; // implements IServerCallback\n\n_bc.getRedemptionCodeService().generateCodes(codeType, codeState, quantity, customCodeInfo, prefix, algorithmName, algorithmDetailsJson, emailAddress, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n  System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n  System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,r.kt)(g,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var codeType = "the-code-type";\nvar codeState = "Available";\nvar quantity = 100;\nvar customCodeInfo = {};\nvar prefix = "";\nvar algorithmName = "FiveByFive";\nvar algorithmDetailsJson = {\n  "includeCheck": false\n};\nvar emailAddress = "email@email.com";\n\n_bc.redemptionCode.generateCodes(codeType, codeState, quantity, customCodeInfo, prefix, algorithmName, algorithmDetailsJson, emailAddress, result =>\n{\n  var status = result.status;\n  console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,r.kt)(g,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cfscript"},'var codeType = "the-code-type";\nvar codeState = "Available";\nvar quantity = 100;\nvar customCodeInfo = {};\nvar prefix = "";\nvar algorithmName = "FiveByFive";\nvar algorithmDetailsJson = {\n  "includeCheck": false\n};\nvar emailAddress = "email@email.com";\nvar redemptionCodeProxy = bridge.getRedemptionCodeServiceProxy();\n\nvar postResult = redemptionCodeProxy.generateCodes(codeType, codeState, quantity, customCodeInfo, prefix, algorithmName, algorithmDetailsJson, emailAddress);\nif (postResult.status == 200) {\n  // Success!\n}\n'))),(0,r.kt)(g,{value:"r",label:"Raw",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'{\n  "service": "redemptionCode",\n  "operation": "GENERATE_CODES",\n  "data":\n  {\n    "codeType": "the-code-type",\n    "codeState": "Available",\n    "quantity": 100,\n    "customCodeInfo": {},\n    "prefix": "",\n    "algorithmName": "FiveByFive",\n    "algorithmDetailsJson": {\n      "includeCheck": false\n    },\n    "emailAddress": "email@email.com"\n  }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"JSON Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "message": "Generating 100 redemption codes using FiveByFive algorithm and options (includeCheck=false)"\n  },\n  "status": 200\n}\n'))),(0,r.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"codeType"),(0,r.kt)("td",{parentName:"tr",align:null},"The code type.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"codeState"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional. Initial state of the redemption code: 'Inactive' or 'Available'. Defaults to 'Inactive'.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"quantity"),(0,r.kt)("td",{parentName:"tr",align:null},"The quantity of scan codes to be generated.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"customCodeInfo"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional custom information, as JSON object.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"prefix"),(0,r.kt)("td",{parentName:"tr",align:null},"Prefix for all scan codes generate. Optional.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"algorithmName"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the algorithm to be used to generate the codes. Currently supporting 'StructuredGuid' and 'FiveByFive'.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"algorithmDetailsJson"),(0,r.kt)("td",{parentName:"tr",align:null},"Optional algorithm details, as JSON object.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"emailAddress"),(0,r.kt)("td",{parentName:"tr",align:null},"Email address to send to for background generated codes. Optional.")))))}k.isMDXComponent=!0}}]);