"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[12911],{3905:(e,t,a)=>{a.d(t,{Zo:()=>h,kt:()=>c});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},h=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,h=i(e,["components","mdxType","originalType","parentName"]),u=p(a),d=r,c=u["".concat(s,".").concat(d)]||u[d]||m[d]||l;return a?n.createElement(c,o(o({ref:t},h),{},{components:a})):n.createElement(c,o({ref:t},h))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},95475:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const l={title:"brainCloud Bombers Example Game",date:"2015-06-23"},o=void 0,i={unversionedId:"learn/sdk-tutorials/unity-tutorials/braincloud-bombers-example-game/index",id:"learn/sdk-tutorials/unity-tutorials/braincloud-bombers-example-game/index",title:"brainCloud Bombers Example Game",description:"This is a legacy tutorial for those using our UNET or Photon examples. Please find our latest tutorial here -- using brainCloud Relay server.",source:"@site/docs/learn/6_sdk-tutorials/unity-tutorials/braincloud-bombers-example-game/index.md",sourceDirName:"learn/6_sdk-tutorials/unity-tutorials/braincloud-bombers-example-game",slug:"/learn/sdk-tutorials/unity-tutorials/braincloud-bombers-example-game/",permalink:"/braincloud-apiref/learn/sdk-tutorials/unity-tutorials/braincloud-bombers-example-game/",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/learn/6_sdk-tutorials/unity-tutorials/braincloud-bombers-example-game/index.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1673023815,formattedLastUpdatedAt:"Jan 6, 2023",frontMatter:{title:"brainCloud Bombers Example Game",date:"2015-06-23"},sidebar:"learnSidebar",previous:{title:"brainCloud AyncMatchService + RTT",permalink:"/braincloud-apiref/learn/sdk-tutorials/unity-tutorials/braincloud-ayncmatchservice-rtt/"},next:{title:"brainCloud + Unity + Steam Integration",permalink:"/braincloud-apiref/learn/sdk-tutorials/unity-tutorials/braincloud-unity-steam-integration/"}},s={},p=[{value:"<strong>Play Now!</strong>",id:"play-now",level:2},{value:"Full Source Available",id:"full-source-available",level:2},{value:"Step 1: Retrieve the source code",id:"step-1-retrieve-the-source-code",level:3},{value:"Step 2: Register with brainCloud",id:"step-2-register-with-braincloud",level:3},{value:"Step 3: Create the brainCloud Bombers App",id:"step-3-create-the-braincloud-bombers-app",level:3},{value:"Step 4:\xa0Update the brainCloud appId and secret in the source code",id:"step-4update-the-braincloud-appid-and-secret-in-the-source-code",level:3},{value:"Step 5: Import the Bomber meta-data",id:"step-5-import-the-bomber-meta-data",level:3},{value:"Step 6: Register with Photon",id:"step-6-register-with-photon",level:3},{value:"UNET Step 6: Register with\xa0UNET",id:"unet-step-6-register-withunet",level:3},{value:"Step 7:\xa0Update the Photon app id",id:"step-7update-the-photon-app-id",level:3},{value:"UNET Step 7:\xa0Update the\xa0Cloud Project ID",id:"unet-step-7update-thecloud-project-id",level:3},{value:"Step 8:\xa0Play the game!",id:"step-8play-the-game",level:3},{value:"<strong>Experience Levels and Ranking Up</strong>",id:"experience-levels-and-ranking-up",level:2},{value:"<strong>Custom Player User Statistics</strong>",id:"custom-player-user-statistics",level:2},{value:"<strong>Global\xa0Leaderboards</strong>",id:"globalleaderboards",level:2},{value:"Achievement Tracking",id:"achievement-tracking",level:2},{value:"Global\xa0Properties",id:"globalproperties",level:2},{value:"<strong>Email Authentication</strong>",id:"email-authentication",level:2}],h={toc:p};function u(e){let{components:t,...l}=e;return(0,r.kt)("wrapper",(0,n.Z)({},h,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("em",{parentName:"p"},"This is a legacy tutorial for those using our UNET or Photon examples. Please find our latest tutorial")," ",(0,r.kt)("a",{parentName:"p",href:"/learn/sdk-tutorials/unity-tutorials/bombers-rtt-example-game/"},(0,r.kt)("em",{parentName:"a"},"here -- using brainCloud Relay server")),(0,r.kt)("em",{parentName:"p"},"."))),(0,r.kt)("hr",null),(0,r.kt)("p",null,"The latest version of the Bombers project can always be found ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/getbraincloud/UnityExamples/"},"here")," on GitHub"),(0,r.kt)("p",null,"brainCloud Bombers is a\xa0fun little\xa0game, written in ",(0,r.kt)("strong",{parentName:"p"},"Unity"),", that\xa0demonstrates how brainCloud can work together with external multiplayer tech (such as ",(0,r.kt)("a",{parentName:"p",href:"http://unity3d.com/services/multiplayer"},"Unity UNET")," or\xa0",(0,r.kt)("a",{parentName:"p",href:"https://www.exitgames.com/en/Realtime"},"Exit Games' Photon"),") to produce real-time multiplayer game experiences."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"brainCloud includes everything you need for turn-based (i.e. Trivia Crack) and offline (i.e. Clash of Clans) multiplayer, also provide real-time (i.e. Team Fortress 2) or near real-time (i.e. Hearthstone) multiplayer support.]")),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(82155).Z},(0,r.kt)("img",{alt:"Unity_Web_Player___PhotonDemo",src:a(32144).Z,width:"1024",height:"715"}))),(0,r.kt)("p",null,"Bombers is a fun\xa0multiplayer game\xa0with the following features:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Game objective: Destroy the other team's fleet to win"),(0,r.kt)("li",{parentName:"ul"},"Two stage gameplay: Dogfight\xa0to collect bombs, then drop the bombs\xa0to destroy enemy ships"),(0,r.kt)("li",{parentName:"ul"},"Controls: Keyboard + mouse"),(0,r.kt)("li",{parentName:"ul"},"Players: Max 8 players per match"),(0,r.kt)("li",{parentName:"ul"},"Leaderboards: Global leaderboards"),(0,r.kt)("li",{parentName:"ul"},"Achievements: 3 achievements to earn"),(0,r.kt)("li",{parentName:"ul"},"Cloud saves: Player progression\xa0is saved as they level up")),(0,r.kt)("h2",{id:"play-now"},(0,r.kt)("strong",{parentName:"h2"},"Play Now!")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://sharedprod.braincloudservers.com/s3/brainCloudExamples/unity/bombersUnet/brainCloudBombersUNET_OSX_1.0.0.zip"},"Bombers UNET version (Mac)")),"\xa0- download and install to play"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://sharedprod.braincloudservers.com/s3/brainCloudExamples/unity/bombersUnet/brainCloudBombersUNET_Windows_1.0.0.zip"},"Bombers UNET version (PC)")),"\xa0- download and install to play"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"http://sharedprod.braincloudservers.com/s3/brainCloudExamples/unity/bombers/brainCloudBombers.html"},"Bombers Photon version (Web)"))," - uses the Unity Web Player,\xa0so be sure to use a compatible browser!")),(0,r.kt)("h2",{id:"full-source-available"},"Full Source Available"),(0,r.kt)("p",null,"The full source of brainCloud bombers\xa0has been made available for our developers. Feel free to use and extend it - but please replace all art for commercial efforts and be sure to use brainCloud! Good luck!"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/learn/sdk-tutorials/unity-tutorials/about-bombers-rtt/"},"Read")," about how brainCloud bombers was written"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/getbraincloud/UnityExamples"},"View")," the\xa0source (Github)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/learn/sdk-tutorials/unity-tutorials//bombers-rtt-example-game/"},"Build")," it yourself!"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://assetstore.unity.com/packages/templates/tutorials/braincloud-bombers-for-photon-50657"},"Download")," it from the Unity Asset Store!")),(0,r.kt)("hr",null),(0,r.kt)("h1",{id:"building-bombers"},"Building Bombers"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Note \u2013 these instructions assume that you\u2019ve already made yourself familiar with the game via the Intro and Overview postings.")),(0,r.kt)("p",null,"To build the\xa0",(0,r.kt)("strong",{parentName:"p"},"Photon"),"\xa0version of brainCloud bombers:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Step 1: Retrieve the source code"),(0,r.kt)("li",{parentName:"ul"},"Step 2: Register with brainCloud (if you haven\u2019t already)"),(0,r.kt)("li",{parentName:"ul"},"Step 3: Create the brainCloud Bombers app"),(0,r.kt)("li",{parentName:"ul"},"Step 4: Update the brainCloud appId and secret in the source code"),(0,r.kt)("li",{parentName:"ul"},"Step 5: Import the brainCloud Bombers meta-data"),(0,r.kt)("li",{parentName:"ul"},"Step 6: Register with Photon"),(0,r.kt)("li",{parentName:"ul"},"Step 7: Update the Photon appid and secret"),(0,r.kt)("li",{parentName:"ul"},"Step 8: Build!")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"To build the UNET version of Bombers, just use UNET Step 6 and UNET Step 7."))),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"step-1-retrieve-the-source-code"},"Step 1: Retrieve the source code"),(0,r.kt)("p",null,"The brainCloud Bombers source is stored on GitHub. \xa0You can find it in the\xa0\u201cBombers\u201d directory\xa0",(0,r.kt)("a",{parentName:"p",href:"https://github.com/getbraincloud/UnityExamples"},"here"),"."),(0,r.kt)("h3",{id:"step-2-register-with-braincloud"},"Step 2: Register with brainCloud"),(0,r.kt)("p",null,"Registering with brainCloud is easy and free. \xa0Go to\xa0",(0,r.kt)("a",{parentName:"p",href:"http://getbraincloud.com/"},"getBrainCloud.com"),"\xa0and click\xa0",(0,r.kt)("strong",{parentName:"p"},"[Sign Up]"),"\xa0in the top-right-hand corner."),(0,r.kt)("h3",{id:"step-3-create-the-braincloud-bombers-app"},"Step 3: Create the brainCloud Bombers App"),(0,r.kt)("p",null,"To create the app:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Go to the\xa0",(0,r.kt)("strong",{parentName:"li"},"Administration"),"\xa0section of the Portal by clicking on the \u201cGear\u201d icon in the top-right"),(0,r.kt)("li",{parentName:"ul"},"Click on the\xa0",(0,r.kt)("strong",{parentName:"li"},"[+]"),"\xa0button in the \u201cYour Apps\u201d section of the\xa0",(0,r.kt)("strong",{parentName:"li"},"Home"),"\xa0page"),(0,r.kt)("li",{parentName:"ul"},"Fill out the\xa0",(0,r.kt)("strong",{parentName:"li"},"New App"),"\xa0dialog \u2013 be sure to enable game features and choose the platforms to run upon.")),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(3488).Z},(0,r.kt)("img",{alt:"New App Dialog",src:a(87084).Z,width:"277",height:"300"}))),(0,r.kt)("p",null,"New App Dialog"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Go to the app by clicking on its name in the\xa0",(0,r.kt)("strong",{parentName:"li"},"Your Apps"),"\xa0list, or by choosing the\xa0",(0,r.kt)("strong",{parentName:"li"},"Design"),"\xa0tab, and then selecting it from the drop-down"),(0,r.kt)("li",{parentName:"ul"},"You\u2019ll see the brainCloud App ID and App Secret on the\xa0",(0,r.kt)("strong",{parentName:"li"},"Core App Info | Application IDs"),"\xa0page\u2026. \xa0we\u2019ll use those in our next step.")),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(90208).Z},(0,r.kt)("img",{alt:"Bomber_app_id",src:a(34595).Z,width:"1024",height:"300"}))),(0,r.kt)("h3",{id:"step-4update-the-braincloud-appid-and-secret-in-the-source-code"},"Step 4:\xa0Update the brainCloud appId and secret in the source code"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Load the bomber project,\xa0\u201cPhotonDemo\u201d, into Unity"),(0,r.kt)("li",{parentName:"ul"},"Choose\xa0",(0,r.kt)("strong",{parentName:"li"},"brainCloud | Settings"),"\xa0from the Unity menu bar"),(0,r.kt)("li",{parentName:"ul"},"Enter the\xa0",(0,r.kt)("em",{parentName:"li"},"brainCloud\xa0app id"),"\xa0into the\xa0",(0,r.kt)("em",{parentName:"li"},"Game Id"),"\xa0field"),(0,r.kt)("li",{parentName:"ul"},"Enter the\xa0",(0,r.kt)("em",{parentName:"li"},"brainCloud secret"),"\xa0into the\xa0",(0,r.kt)("em",{parentName:"li"},"Game Secret"),"\xa0field"),(0,r.kt)("li",{parentName:"ul"},"Also, hit\xa0",(0,r.kt)("strong",{parentName:"li"},"[Reset to Default Server URL]"),"\xa0to ensure that the client is set to connect to the proper endpoint")),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(79663).Z},(0,r.kt)("img",{alt:"Unity_settings",src:a(88154).Z,width:"300",height:"186"}))),(0,r.kt)("h3",{id:"step-5-import-the-bomber-meta-data"},"Step 5: Import the Bomber meta-data"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Back in the brainCloud portal, go to\xa0",(0,r.kt)("strong",{parentName:"li"},"Design | Admin Tools"),"\xa0for the your app"),(0,r.kt)("li",{parentName:"ul"},"Click the ","[Import]"," button in the Configuration Data section",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Choose\xa0",(0,r.kt)("strong",{parentName:"li"},"[Select Configuration File (bcconfig)]"),", and navigate to the\xa0",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"Bombers/ImportData/Bombers"),"<some",(0,r.kt)("em",{parentName:"strong"},"date>.bcconfig")),"file\xa0included with the bomber source"),(0,r.kt)("li",{parentName:"ul"},"You can leave the two \u201cDo not overwrite\u201d options blank \u2013 they\u2019re not used in this example"),(0,r.kt)("li",{parentName:"ul"},"Click\xa0",(0,r.kt)("strong",{parentName:"li"},"[Upload]"),"\xa0to import the data"),(0,r.kt)("li",{parentName:"ul"},"You\u2019ll immediately note that the brainCloud Bombers icon is now associated with your project. \xa0You\u2019ll also see user statistics, achievements, and XP levels filled in throughout the application.")))),(0,r.kt)("h3",{id:"step-6-register-with-photon"},"Step 6: Register with Photon"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Go to\xa0",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"https://www.exitgames.com/en/PUN"},"https://www.exitgames.com/en/PUN")),"\xa0to set up a free Photon account"),(0,r.kt)("li",{parentName:"ul"},"Once you\u2019ve registered, click\xa0",(0,r.kt)("strong",{parentName:"li"},"[Dashboard]"),"\xa0to view the free app that Photon has automatically configured for you"),(0,r.kt)("li",{parentName:"ul"},"You\u2019ll notice the Photon App ID \u2013 we\u2019ll be using that in the next step")),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(23062).Z},(0,r.kt)("img",{alt:"Photon_Setup",src:a(83674).Z,width:"1024",height:"411"}))),(0,r.kt)("h3",{id:"unet-step-6-register-withunet"},"UNET Step 6: Register with\xa0UNET"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Go to\xa0",(0,r.kt)("a",{parentName:"li",href:"http://unet.cloud.unity3d.com/"},(0,r.kt)("strong",{parentName:"a"},"https://www.unet.cloud.unity3d.com")),"\xa0to set up a free Unity Cloud\xa0account"),(0,r.kt)("li",{parentName:"ul"},"Once you\u2019ve registered, click\xa0",(0,r.kt)("strong",{parentName:"li"},"[Multiplayer]")," at the top left and click the ","[Create Project]"," button at the top right"),(0,r.kt)("li",{parentName:"ul"},"Type in a name, a maximum number of players per room, and accept"),(0,r.kt)("li",{parentName:"ul"},"Copy the\xa0",(0,r.kt)("strong",{parentName:"li"},"UPID"),"\xa0field from this page")),(0,r.kt)("h3",{id:"step-7update-the-photon-app-id"},"Step 7:\xa0Update the Photon app id"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Back in Unity,\xa0Choose\xa0",(0,r.kt)("strong",{parentName:"li"},"Window | Photon Unity Networking | Local Settings Asset"),"\xa0from the drop-down menu"),(0,r.kt)("li",{parentName:"ul"},"In the Inspector windows that shows, enter the Photon AppID")),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(2223).Z},(0,r.kt)("img",{alt:"Photon_app_id_in_Unity",src:a(74191).Z,width:"300",height:"137"}))),(0,r.kt)("h3",{id:"unet-step-7update-thecloud-project-id"},"UNET Step 7:\xa0Update the\xa0Cloud Project ID"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Back in Unity,\xa0Choose\xa0",(0,r.kt)("strong",{parentName:"li"},"Edit\xa0| Project Settings\xa0| Player"),"\xa0from the drop-down menu"),(0,r.kt)("li",{parentName:"ul"},"In the Inspector windows that shows, enter the you\xa0",(0,r.kt)("strong",{parentName:"li"},"UPID"),"\xa0into the\xa0",(0,r.kt)("strong",{parentName:"li"},"Cloud Project Id")," field")),(0,r.kt)("h3",{id:"step-8play-the-game"},"Step 8:\xa0Play the game!"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"From the\xa0",(0,r.kt)("strong",{parentName:"li"},"Project"),"\xa0window, choose the\xa0",(0,r.kt)("strong",{parentName:"li"},"Assets"),"\xa0folder on the left, and then choose the Scenes subfolder"),(0,r.kt)("li",{parentName:"ul"},"Select the\xa0",(0,r.kt)("strong",{parentName:"li"},"Connect"),"\xa0Scene in the\xa0",(0,r.kt)("strong",{parentName:"li"},"Assets"),"\xa0folder of the project, and then click\xa0",(0,r.kt)("strong",{parentName:"li"},"Play!")," Have fun!")),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(76387).Z},(0,r.kt)("img",{alt:"Run_bombers",src:a(63026).Z,width:"300",height:"142"}))),(0,r.kt)("hr",null),(0,r.kt)("h1",{id:"more-about-braincloud-bombers"},"More about ",(0,r.kt)("strong",{parentName:"h1"},"brainCloud Bombers")),(0,r.kt)("p",null,"brainCloud Bombers is an example project meant to show the compatibility between brainCloud and real-time multiplayer technologies (such as Unity 5 UNET and Photon). Players create accounts, log into the game, play against other players in real-time multiplayer battles, and their stats are saved between sessions via\xa0brainCloud. The example also shows various features of brainCloud, including:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Experience levels and ranking up"),(0,r.kt)("li",{parentName:"ul"},"Custom player statistics and entities"),(0,r.kt)("li",{parentName:"ul"},"Multiple global\xa0leaderboards"),(0,r.kt)("li",{parentName:"ul"},"Achievement tracking and unlocking"),(0,r.kt)("li",{parentName:"ul"},"Global properties"),(0,r.kt)("li",{parentName:"ul"},"Email authentication")),(0,r.kt)("p",null,"Please refer to the specific individual sections for some description, overview, and functionality of each feature. \xa0",(0,r.kt)("em",{parentName:"p"},"The source for both UNET and Photon versions of brainCloud Bombers can be found\xa0",(0,r.kt)("a",{parentName:"em",href:"https://github.com/getbraincloud/UnityExamples"},"here"),".")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Dash_XP_and_Stats",src:a(55828).Z,width:"244",height:"307"})),(0,r.kt)("p",null,"Bombers XP & Stats Dashboard"),(0,r.kt)("h2",{id:"experience-levels-and-ranking-up"},(0,r.kt)("strong",{parentName:"h2"},"Experience Levels and Ranking Up")),(0,r.kt)("p",null,"In brainCloud Bombers, players can earn experience for destroying enemy planes in-game. Experience is awarded at the end of each match and kept track of on the brainCloud servers. Players can view their total experience on the Matchmaking menu, beneath the player\u2019s name. brainCloud also has custom levels defined, each having an experience value and a name. Players can see their current rank (as well as its numeric value) on the Matchmaking menu, beneath the player\u2019s name. Experience is incremented live, so brainCloud sends messages to clients when they have made it to the next rank. This is shown to the player through a dialog that appears at the end of a match."),(0,r.kt)("p",null,"Experience and levels can be read through the PlayerStateService in the brainCloud API. The call returns the current player\u2019s experience level and rank name/numeric value, all of which are saved as public member variables in the BrainCloudStats class. These stats are updated live on the brainCloud server, but on the local client, they are only updated when the player visits the Matchmaking menu, reducing the number of API calls required per user."),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(82516).Z},(0,r.kt)("img",{src:a(80665).Z,width:"713",height:"431"}))),(0,r.kt)("p",null,"Xp levels"),(0,r.kt)("h2",{id:"custom-player-user-statistics"},(0,r.kt)("strong",{parentName:"h2"},"Custom Player ","[User]"," Statistics")),(0,r.kt)("p",null,"Every player in brainCloud bombers has a number of custom statistics that are stored on the brainCloud servers. These statistics include the number of ships they have sunk, the number of times they have fired their weapon, their total number of wins, and more. These statistics are updated at the end of each match. Players can view their statistics on the Matchmaking menu, where they are shown on the left side, below the player\u2019s name. These statistics were created on the brainCloud design portal, and can also be edited from the monitoring section of the portal\xa0for each user."),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(94077).Z},(0,r.kt)("img",{src:a(16587).Z,width:"713",height:"316"}))),(0,r.kt)("p",null,"User Statistics"),(0,r.kt)("p",null,"Player statistics can be read through the PlayerStatisticsService in the brainCloud API. The call returns all of the current player\u2019s statistics, including the statistics\u2019 name, value, and description (all defined from the brainCloud dashboard), of which only the value is saved in public member variables in the BrainCloudStats class. These stats are updated live on the brainCloud server, but on the local client, they are only updated when the player visits the Matchmaking menu, reducing the number of API calls required per user."),(0,r.kt)("h2",{id:"globalleaderboards"},(0,r.kt)("strong",{parentName:"h2"},"Global\xa0Leaderboards")),(0,r.kt)("p",null,"brainCloud Bombers has two separate global\xa0leaderboards defined, that players may view at their leisure from the Matchmaking menu. The first leaderboard keeps track of the number of enemy plane takedowns that each player has, with the least number of deaths as the tiebreaker, and the second leaderboard keeps track of the number of ship weak-points destroyed by each player, with the least number bombs dropped as the tiebreaker. Both leaderboards feature the player\u2019s place in the leaderboard, name, their rank (and numeric value of rank), and score. brainCloud keeps tracks of all aspects of the leaderboards, and scores are updated at the end of each match."),(0,r.kt)("p",null,"Leaderboards can be accessed through the SocialLeaderboardService in the brainCloud API. The call returns the entire listing of a given leaderboard, or can be broken up into just the current player\u2019s score, or individual sections of the leaderboard with variable length. The values for the currently observed leaderboard are stored as a public member variable in the BrainCloudStats class. The leaderboards are updated live on the brainCloud server, but on the local client the leaderboards are only fetched when the player wishes to see them from the Matchmaking menu, reducing the number of API calls required per user."),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(27336).Z},(0,r.kt)("img",{alt:"leaderboards",src:a(25300).Z,width:"273",height:"300"}))),(0,r.kt)("p",null,"Bomber Leaderboards"),(0,r.kt)("h2",{id:"achievement-tracking"},"Achievement Tracking"),(0,r.kt)("p",null,"Three achievements have been implemented for brainCloud Bombers: destroying 50 enemy planes, sinking 10 ships, and destroying five enemy planes in a single match. brainCloud tracks whether the achievements have been unlocked or not, and can even automatically award the achievements based on player stats using Milestones. At the end of the match, bombers sends the stats updates to brainCloud, and then checks the response to see if any Achievements have been awarded. \xa0","[Exception: note that the Quickshot achievement is handled manually by the client code in real-time during the match.]"),(0,r.kt)("p",null,"Achievements can be accessed through the GamificationService in the brainCloud API. The call returns all of the achievements in the system, their names, the urls for their icons, their descriptions, and whether or not the current user has unlocked any of them. The achievement data is stored in a public member variable in the BrainCloudStats class. The achievements are updated from the server when the player visits the Matchmaking menu."),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(39723).Z},(0,r.kt)("img",{alt:"achievements_png",src:a(63833).Z,width:"390",height:"391"}))),(0,r.kt)("p",null,"Bomber achievements"),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(63070).Z},(0,r.kt)("img",{src:a(65261).Z,width:"636",height:"795"}))),(0,r.kt)("p",null,"\xa01. When this condition is satisfied.\xa0",(0,r.kt)("br",{parentName:"p"}),"\n","2. Award this achievement."),(0,r.kt)("h2",{id:"globalproperties"},"Global\xa0Properties"),(0,r.kt)("p",null,"brainCloud Global Properties can be used in place of constants in your games \u2013 allowing games to be tuned and/or patched on the fly without having to release new builds. A number of properties\xa0have been utilized in\xa0brainCloud Bombers, to tune such things as\xa0player fire rate, respawn time, bullet speed, player health, and more."),(0,r.kt)("p",null,"These properties\xa0can be read through the GlobalAppService in the brainCloud API. The call returns all of the currently saved global variables, which are then stored as public member variables in the BrainCloudStats class. To reduce API calls from the client, these values are only read once when the game is started, meaning clients will need to restart the app to get any changes, but they could be checked more often for the sake of app security or faster testing."),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(73628).Z},(0,r.kt)("img",{src:a(5350).Z,width:"1144",height:"498"}))),(0,r.kt)("p",null,"Global Properties"),(0,r.kt)("h2",{id:"email-authentication"},(0,r.kt)("strong",{parentName:"h2"},"Email Authentication")),(0,r.kt)("p",null,"brainCloud Bombers requires users to sign in with an email and password, with the authentication being done through brainCloud. If a player uses an email that hasn\u2019t been registered, an account is created for them and an authentication email is sent to the email address used. brainCloud also has the ability to\xa0",(0,r.kt)("em",{parentName:"p"},"require"),"\xa0email authentication before being able to log in, though this feature is turned off for brainCloud Bombers. Players may also submit a \u201cForgot Password\u201d request from the login screen, prompting them to enter their email and sending a password reset link to the entered email."),(0,r.kt)("p",null,"User authentication is done through the BrainCloudWrapper instance, and is taken care of on the server end. The server will send a message back saying whether the authentication was successful or not, and the error that occurred if it wasn\u2019t successful. Since brainCloud Bombers uses external servers (UNET or Photon), the player must wait until they are connected to their servers before logging in to brainCloud. This requirement is optional; the services do not depend on each other\xa0\u2013\xa0this is done under\xa0",(0,r.kt)("strong",{parentName:"p"},"Design | Authentication | Email\xa0Authentication"),"."),(0,r.kt)("p",null,(0,r.kt)("a",{target:"_blank",href:a(76515).Z},(0,r.kt)("img",{src:a(20577).Z,width:"805",height:"593"}))),(0,r.kt)("p",null,"Email Authentication Settings"),(0,r.kt)("hr",null),(0,r.kt)("h1",{id:"braincloud-bombers-app-overview"},(0,r.kt)("strong",{parentName:"h1"},"brainCloud Bombers App Overview")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"The source code for brainCloud Bombers can be found\xa0",(0,r.kt)("a",{parentName:"em",href:"https://github.com/getbraincloud/UnityExamples"},"here"),".")),(0,r.kt)("p",null,"brainCloud Bombers uses a mixture of scenes and state machines to achieve the flow-through for the game. Please refer to the following section for the general functionality of each of the classes. The scene and main class order is as follows:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Connect Scene",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Connect"),(0,r.kt)("li",{parentName:"ol"},"BrainCloudStats"))),(0,r.kt)("li",{parentName:"ol"},"Matchmaking Scene",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Matchmaking"))),(0,r.kt)("li",{parentName:"ol"},"Game Scene",(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"GameManager"),(0,r.kt)("li",{parentName:"ol"},"PlayerController"),(0,r.kt)("li",{parentName:"ol"},"WeaponController")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"General Script Functionality")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Connect.cs"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Connects the user to the multiplayer\xa0server"),(0,r.kt)("li",{parentName:"ul"},"Handles the email and password input for brainCloud"),(0,r.kt)("li",{parentName:"ul"},"Handles error messages from the login process"),(0,r.kt)("li",{parentName:"ul"},"Initializes the BrainCloudStats script after the player has logged in"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"BrainCloudStats.cs"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Reads a variety of information from the brainCloud server and stores it in public member variables",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Statistics for the authenticated user"),(0,r.kt)("li",{parentName:"ul"},"Experience and Level for the authenticated user"),(0,r.kt)("li",{parentName:"ul"},"General information about experience levels (names, value, etc.)"),(0,r.kt)("li",{parentName:"ul"},"General information about achievements (including whether the authenticated user has achieved them or not)"),(0,r.kt)("li",{parentName:"ul"},"Global Properties for brainCloud Bombers"),(0,r.kt)("li",{parentName:"ul"},"Social Leaderboards for brainCloud Bombers"))),(0,r.kt)("li",{parentName:"ul"},"Handles error messages from the brainCloud server"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Matchmaking.cs"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Uses a state machine to implement functionality for a number of menus available to the player",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"GAME_STATE_SHOW_ROOMS: Shows the main matchmaking menu, allowing the player to join games, create games, view the leaderboards, view the controls, view their achievements, and shows the player\u2019s stats."),(0,r.kt)("li",{parentName:"ul"},"GAME_STATE_NEW_ROOM_OPTIONS: Shows the create new room dialogue, allowing the player to set the options for a new room, and then joining into it automatically"),(0,r.kt)("li",{parentName:"ul"},"GAME_STATE_SHOW_LEADERBOARDS: Displays one of the social leaderboards for brainCloud Bombers, allowing the player to switch between them, and displaying a chevron beside the player\u2019s own entry (if one exists)"),(0,r.kt)("li",{parentName:"ul"},"GAME_STATE_SHOW_CONTROLS: Displays the basic controls for the game, as well as the goal and some instructions on what to do"),(0,r.kt)("li",{parentName:"ul"},"GAME_STATE_SHOW_ACHIEVEMENTS: Shows the available achievements for brainCloud Bombers, and tells the player whether they have achieved them or not."))),(0,r.kt)("li",{parentName:"ul"},"Checks the multiplayer\xa0server for open rooms, and allows the player to join any room that is not full and within their level range."),(0,r.kt)("li",{parentName:"ul"},"Allows players to filter room results using a number of filters"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"GameManager.cs"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Uses a state machine to implement functionality for a number of menus available to the player",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"GAME_STATE_WAITING_FOR_PLAYERS: Shows the \u201cBombers Assemble\u201d menu, showing the players connected to the game on both teams, giving players the ability to switch teams, and allowing the host to start the game prematurely before the room is full"),(0,r.kt)("li",{parentName:"ul"},"GAME_STATE_STARTING_GAME: Fades the screen in anticipation for the match to begin, telling players to get ready"),(0,r.kt)("li",{parentName:"ul"},"GAME_STATE_PLAYING_GAME: The main state, showing the players their HUD and handling a number of interactions for the actual game, including updating the local scores and tracking the time left in the match"),(0,r.kt)("li",{parentName:"ul"},"GAME_STATE_GAME_OVER: Shows the results screen to the players, telling them which team won and the scores for each player. The host may go back to the \u201cBombers Assemble\u201d menu when they wish, and players may leave the room"))),(0,r.kt)("li",{parentName:"ul"},"Contains the majority of functionality for the live multiplayer, implementing a number of RPCs and controlling their effects (Photon version only)"),(0,r.kt)("li",{parentName:"ul"},"Controls much of the game logic on the host side"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"PlayerController.cs"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Accepts inputs from the player to control their plane"),(0,r.kt)("li",{parentName:"ul"},"Sends movement information to the player\u2019s plane"),(0,r.kt)("li",{parentName:"ul"},"Controls the health and death messages for the player\u2019s plane"),(0,r.kt)("li",{parentName:"ul"},"Contains the majority of \xa0functionality for the live multiplayer, implementing a number of commands and client RPCs (UNET version only)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"WeaponController.cs"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Accepts inputs from the player to control the weapons on their plane, including the main guns, bombs, and flares"),(0,r.kt)("li",{parentName:"ul"},"Sends network messages through the\xa0",(0,r.kt)("strong",{parentName:"li"},"GameManager"),"\xa0to spawn projectiles of all sorts"),(0,r.kt)("li",{parentName:"ul"},"Controls the bomb targeting reticule for the player"),(0,r.kt)("li",{parentName:"ul"},"Controls the offscreen enemy ship indicator for the player")))))}u.isMDXComponent=!0},90208:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/Bomber_app_id-1024x300-fad6261c34f387307aa10ceb10c2c7b7.png"},3488:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/Bomber_new_app-277x300-b4307455651394b87ef45792f286c2a3.png"},76515:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/EmailAuth-492f7f6e7b01e9c49a20f0cb9f356d60.png"},73628:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/GlobalProps-3bc2a1f12a5a841be250f04b197aa488.png"},63070:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/Milestone-2-d925129367c5007e4015e606a86ed70f.png"},23062:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/Photon_Setup-1024x411-5eda3a15b12a048b47bc1b77c63789a6.png"},2223:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/Photon_app_id_in_Unity-300x137-799fab48af89a6ff57b651f7fe3540b5.png"},76387:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/Run_bombers-300x142-8f57f168f4323e11448097c9bbbf502b.png"},82155:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/Unity_Web_Player___PhotonDemo-1024x715-5d53ae1a5a9d6b2edac609390bb2df36.png"},79663:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/Unity_settings-300x186-26c8195155d8a0891f0c3b2bfcde98e3.png"},94077:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/UserStats-3e921c7781461da01b719ff6ca0a0370.png"},39723:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/achievements_png-ccd4b36db6874c98ff61e70c41b09042.png"},27336:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/leaderboards-273x300-663b19e971affeaff4dc6efc9323097e.png"},82516:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/xp_levels-60a51cbc2f0d1548ddddc9bf1520fb73.png"},34595:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Bomber_app_id-1024x300-fad6261c34f387307aa10ceb10c2c7b7.png"},87084:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Bomber_new_app-277x300-b4307455651394b87ef45792f286c2a3.png"},55828:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Dash_XP_and_Stats-276979ffb9b4ecc0102678de13ca1ccd.png"},20577:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/EmailAuth-492f7f6e7b01e9c49a20f0cb9f356d60.png"},5350:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/GlobalProps-3bc2a1f12a5a841be250f04b197aa488.png"},65261:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Milestone-2-d925129367c5007e4015e606a86ed70f.png"},83674:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Photon_Setup-1024x411-5eda3a15b12a048b47bc1b77c63789a6.png"},74191:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Photon_app_id_in_Unity-300x137-799fab48af89a6ff57b651f7fe3540b5.png"},63026:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Run_bombers-300x142-8f57f168f4323e11448097c9bbbf502b.png"},32144:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Unity_Web_Player___PhotonDemo-1024x715-5d53ae1a5a9d6b2edac609390bb2df36.png"},88154:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Unity_settings-300x186-26c8195155d8a0891f0c3b2bfcde98e3.png"},16587:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/UserStats-3e921c7781461da01b719ff6ca0a0370.png"},63833:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/achievements_png-ccd4b36db6874c98ff61e70c41b09042.png"},25300:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/leaderboards-273x300-663b19e971affeaff4dc6efc9323097e.png"},80665:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/xp_levels-60a51cbc2f0d1548ddddc9bf1520fb73.png"}}]);