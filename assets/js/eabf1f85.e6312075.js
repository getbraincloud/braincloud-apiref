"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[82539],{3905:(e,a,t)=>{t.d(a,{Zo:()=>p,kt:()=>g});var n=t(67294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=n.createContext({}),o=function(e){var a=n.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},p=function(e){var a=o(e.components);return n.createElement(c.Provider,{value:a},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},d=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=o(t),d=r,g=m["".concat(c,".").concat(d)]||m[d]||u[d]||l;return t?n.createElement(g,i(i({ref:a},p),{},{components:t})):n.createElement(g,i({ref:a},p))}));function g(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=d;var s={};for(var c in a)hasOwnProperty.call(a,c)&&(s[c]=a[c]);s.originalType=e,s[m]="string"==typeof e?e:r,i[1]=s;for(var o=2;o<l;o++)i[o]=t[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},19131:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>c,contentTitle:()=>i,default:()=>k,frontMatter:()=>l,metadata:()=>s,toc:()=>o});var n=t(87462),r=(t(67294),t(3905));const l={},i="FindPlayersUsingFilter",s={unversionedId:"api/capi/matchmaking/findplayersusingfilter",id:"api/capi/matchmaking/findplayersusingfilter",title:"FindPlayersUsingFilter",description:"Overview",source:"@site/docs/api/2_capi/matchmaking/findplayersusingfilter.md",sourceDirName:"api/2_capi/matchmaking",slug:"/api/capi/matchmaking/findplayersusingfilter",permalink:"/braincloud-apiref/api/capi/matchmaking/findplayersusingfilter",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/matchmaking/findplayersusingfilter.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"FindPlayers",permalink:"/braincloud-apiref/api/capi/matchmaking/findplayers"},next:{title:"FindPlayersUsingScript",permalink:"/braincloud-apiref/api/capi/matchmaking/findplayersusingscript"}},c={},o=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],p=e=>function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",a)},m=p("PartialServop"),u=p("BrowserWindow"),d=p("Tabs"),g=p("TabItem"),b={toc:o};function k(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},b,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"findplayersusingfilter"},"FindPlayersUsingFilter"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Finds matchmaking enabled players using a cloud code filter."),(0,r.kt)(m,{service_name:"matchMaking",operation_name:"FIND_PLAYERS_USING_FILTER",mdxType:"PartialServop"}),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)(u,{mdxType:"BrowserWindow"},(0,r.kt)(d,{mdxType:"Tabs"},(0,r.kt)(g,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'int rangeDelta = 10;\nint numMatches = 1;\nstring jsonExtraParams = "{\\"parm1\\":10}";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.MatchMakingService.FindPlayersUsingFilter(rangeDelta, numMatches, jsonExtraParams, successCallback, failureCallback);\n'))),(0,r.kt)(g,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'int rangeDelta = 10;\nint numMatches = 1;\nconst char *jsonExtraParams = "{\\"parm1\\":10}";\n_bc->getMatchMakingService()->findPlayersUsingFilter(rangeDelta, numMatches, jsonExtraParams, this);\n'))),(0,r.kt)(g,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-objectivec"},'int rangeDelta = 10;\nint numMatches = 1;\nNSString *jsonExtraParams = @"{\\"parm1\\":10}";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc matchMakingService] findPlayersUsingFilter:rangeDelta\n                 numMatches:numMatches\n            jsonExtraParams:jsonExtraParams\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,r.kt)(g,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'int rangeDelta = 10;\nint numMatches = 1;\nString jsonExtraParams = "{\\"parm1\\":10}";\nthis; // implements IServerCallback\n\n_bc.getMatchMakingService().findPlayersUsingFilter(rangeDelta, numMatches, jsonExtraParams, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,r.kt)(g,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var rangeDelta = 10;\nvar numMatches = 1;\nvar jsonExtraParams = {\n    "parm1": 10\n};\n\n_bc.matchMaking.findPlayersUsingFilter(rangeDelta, numMatches, jsonExtraParams, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,r.kt)(g,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cfscript"},'var rangeDelta = 10;\nvar numMatches = 1;\nvar jsonExtraParams = {\n    "parm1": 10\n};\nvar matchMakingProxy = bridge.getMatchMakingServiceProxy();\n\nvar postResult = matchMakingProxy.findPlayersUsingFilter(rangeDelta, numMatches, jsonExtraParams);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,r.kt)(g,{value:"r",label:"Raw",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'{\n  "rangeDelta": 10,\n  "numMatches": 1,\n  "extraParms": {\n    "parm1": 10\n  }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"JSON Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 200,\n    "data": {\n        "matchesFound": [\n            {\n                "pictureUrl": null,\n                "playerName": "UserC-1239941736",\n                "playerId": "c2b88d3f-2s32-43a6-9a71-0f0157e46505",\n                "playerRating": 0,\n                "summaryFriendData": null\n            },\n            {\n                "pictureUrl": null,\n                "playerName": "UserA-914307852",\n                "playerId": "96afefc7-02b2-4148-8d36-c62855d917b6",\n                "playerRating": 0,\n                "summaryFriendData": null\n            }\n        ]\n    }\n}\n'))),(0,r.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rangeDelta"),(0,r.kt)("td",{parentName:"tr",align:null},"How close an opponents rating must be to yours")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"numMatches"),(0,r.kt)("td",{parentName:"tr",align:null},"The maximum number of matches to return")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"jsonExtraParms"),(0,r.kt)("td",{parentName:"tr",align:null},"Parameters to be passed to the filter")))))}k.isMDXComponent=!0}}]);