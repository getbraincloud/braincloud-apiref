"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[30512],{3905:(e,a,t)=>{t.d(a,{Zo:()=>d,kt:()=>m});var r=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var u=r.createContext({}),l=function(e){var a=r.useContext(u),t=a;return e&&(t="function"==typeof e?e(a):p(p({},a),e)),t},d=function(e){var a=l(e.components);return r.createElement(u.Provider,{value:a},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},g=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,u=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),s=l(t),g=n,m=s["".concat(u,".").concat(g)]||s[g]||c[g]||o;return t?r.createElement(m,p(p({ref:a},d),{},{components:t})):r.createElement(m,p({ref:a},d))}));function m(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,p=new Array(o);p[0]=g;var i={};for(var u in a)hasOwnProperty.call(a,u)&&(i[u]=a[u]);i.originalType=e,i[s]="string"==typeof e?e:n,p[1]=i;for(var l=2;l<o;l++)p[l]=t[l];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},5840:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>u,contentTitle:()=>p,default:()=>v,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=t(87462),n=(t(67294),t(3905));const o={},p="UpdateGroupData",i={unversionedId:"api/capi/group/updategroupdata",id:"api/capi/group/updategroupdata",title:"UpdateGroupData",description:"Overview",source:"@site/docs/api/2_capi/group/updategroupdata.md",sourceDirName:"api/2_capi/group",slug:"/api/capi/group/updategroupdata",permalink:"/braincloud-apiref/api/capi/group/updategroupdata",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/group/updategroupdata.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671831235,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"UpdateGroupAcl",permalink:"/braincloud-apiref/api/capi/group/updategroupacl"},next:{title:"UpdateGroupEntityAcl",permalink:"/braincloud-apiref/api/capi/group/updategroupentityacl"}},u={},l=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],d=e=>function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",a)},s=d("PartialServop"),c=d("BrowserWindow"),g=d("Tabs"),m=d("TabItem"),b={toc:l};function v(e){let{components:a,...t}=e;return(0,n.kt)("wrapper",(0,r.Z)({},b,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"updategroupdata"},"UpdateGroupData"),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"Update a group's data."),(0,n.kt)("p",null,"This method is affected by versioning. See the ",(0,n.kt)("a",{parentName:"p",href:"/api/appendix/version"},"versioning documentation")," for more information."),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},'There is a special index on a field called "indexedId" in the group data for effiicent group searching.')),(0,n.kt)(s,{service_name:"group",operation_name:"UPDATE_GROUP_DATA",mdxType:"PartialServop"}),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)(c,{mdxType:"BrowserWindow"},(0,n.kt)(g,{mdxType:"Tabs"},(0,n.kt)(m,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'string groupId = "a-group-id";\nint version = 3;\nstring jsonData = "{\\"indexedId\\":\\"a-group-index\\"}";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.Group.UpdateGroupData(groupId, version, jsonData, successCallback, failureCallback);\n'))),(0,n.kt)(m,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *groupId = "a-group-id";\nint version = 3;\nconst char *jsonData = "{\\"indexedId\\":\\"a-group-index\\"}";\n\n_bc->getGroup()->updateGroupData(groupId, version, jsonData, this);\n'))),(0,n.kt)(m,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *groupId = @"a-group-id";\nint version = 3;\nNSString *jsonData = "{\\"indexedId\\":\\"a-group-index\\"}";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc groupService] updateGroupData:groupId\n                    version:version\n                   jsonData:jsonData\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,n.kt)(m,{value:"java",label:"Java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'String groupId = "a-group-id";\nint version = 3;\nString jsonData = "{\\"indexedId\\":\\"a-group-index\\"}";\nthis; // implements IServerCallback\n\n_bc.getGroup().updateGroupData(groupId, version, jsonData, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,n.kt)(m,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'var groupId = "a-group-id";\nvar version = 3;\nvar jsonData = {\n    "indexedId": "a-group-index"\n};\n\n_bc.group.updateGroupData(groupId, version, jsonData, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,n.kt)(m,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cfscript"},'var groupId = "a-group-id";\nvar version = 3;\nvar jsonData = {\n    "indexedId": "a-group-index"\n};\nvar groupProxy = bridge.getGroupServiceProxy();\n\nvar postResult = groupProxy.updateGroupData(groupId, version, jsonData);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,n.kt)(m,{value:"r",label:"Raw",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "group",\n    "operation": "UPDATE_GROUP_DATA",\n    "data": {\n        "groupId": "a-group-id",\n        "version": 3,\n        "data": {\n            "indexedId": "a-group-index"\n        }\n    }\n}\n'))))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"JSON Response"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "gameId": "13229",\n    "groupId": "d373ff92-3327-4176-85ed-3565a09c43fa",\n    "ownerId": "ec52d988-3515-4032-a8fd-acc48e985792",\n    "name": "agroup",\n    "groupType": "group11",\n    "createdAt": 1605155742940,\n    "updatedAt": 1671123804120,\n    "members": {\n      "79ab573d-459e-42ce-ac65-c2fe8e81a3ae": {\n        "role": "MEMBER",\n        "attributes": {\n          "groupatt": "groupattvalue"\n        }\n      },\n      "32902825-37a1-43e2-89b7-47e849b1ec4b": {\n        "role": "MEMBER",\n        "attributes": {}\n      },\n      "ec52d988-3515-4032-a8fd-acc48e985792": {\n        "role": "OWNER",\n        "attributes": {}\n      },\n      "cd0356bd-ab7f-4fd7-bc58-9422cd3a2a59": {\n        "role": "MEMBER",\n        "attributes": {}\n      },\n      "8f9f8269-ad3e-4e3d-bc2a-3dd31afb0b17": {\n        "role": "MEMBER",\n        "attributes": {}\n      },\n      "8bd564a7-3f91-4a98-a4b3-43cd7d266133": {\n        "role": "MEMBER",\n        "attributes": {}\n      },\n      "336f36be-da11-4457-bda6-ccecd47b63e3": {\n        "role": "MEMBER",\n        "attributes": {}\n      },\n      "1e8c17bf-ede9-4976-b147-b44bd2da6817": {\n        "role": "MEMBER",\n        "attributes": {}\n      }\n    },\n    "pendingMembers": {},\n    "version": 5,\n    "summaryData": {},\n    "isOpenGroup": true,\n    "defaultMemberAttributes": {},\n    "memberCount": 8,\n    "invitedPendingMemberCount": 0,\n    "requestingPendingMemberCount": 0,\n    "acl": {\n      "member": 2,\n      "other": 0\n    }\n  },\n  "status": 200\n}\n'))),(0,n.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"groupId"),(0,n.kt)("td",{parentName:"tr",align:null},"ID of the group")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"version"),(0,n.kt)("td",{parentName:"tr",align:null},"Version to verify")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"jsonData"),(0,n.kt)("td",{parentName:"tr",align:null},"Data to apply")))))}v.isMDXComponent=!0}}]);