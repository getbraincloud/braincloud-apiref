"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[5630],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>f});var a=n(67294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,i=function(t,e){if(null==t)return{};var n,a,i={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var l=a.createContext({}),c=function(t){var e=a.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},u=function(t){var e=c(t.components);return a.createElement(l.Provider,{value:e},t.children)},p="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,i=t.mdxType,o=t.originalType,l=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),p=c(n),m=i,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(f,r(r({ref:e},u),{},{components:n})):a.createElement(f,r({ref:e},u))}));function f(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var o=n.length,r=new Array(o);r[0]=m;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[p]="string"==typeof t?t:i,r[1]=s;for(var c=2;c<o;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},27576:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>b,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(87462),i=(n(67294),n(3905));const o={},r="SendRichPushNotificationWithParams",s={unversionedId:"api/capi/pushnotification/sendrichpushnotificationwithparams",id:"api/capi/pushnotification/sendrichpushnotificationwithparams",title:"SendRichPushNotificationWithParams",description:"Overview",source:"@site/docs/api/2_capi/pushnotification/sendrichpushnotificationwithparams.md",sourceDirName:"api/2_capi/pushnotification",slug:"/api/capi/pushnotification/sendrichpushnotificationwithparams",permalink:"/braincloud-apiref/api/capi/pushnotification/sendrichpushnotificationwithparams",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/pushnotification/sendrichpushnotificationwithparams.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"SendRichPushNotification",permalink:"/braincloud-apiref/api/capi/pushnotification/sendrichpushnotification"},next:{title:"SendSimplePushNotification",permalink:"/braincloud-apiref/api/capi/pushnotification/sendsimplepushnotification"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],u=t=>function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",e)},p=u("PartialServop"),d=u("BrowserWindow"),m=u("Tabs"),f=u("TabItem"),h={toc:c};function b(t){let{components:e,...n}=t;return(0,i.kt)("wrapper",(0,a.Z)({},h,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"sendrichpushnotificationwithparams"},"SendRichPushNotificationWithParams"),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Sends a notification to a user based on a brainCloud portal configured notification template and includes JSON defining the substitution params to use with the template."),(0,i.kt)("p",null,"The format of the parameterized string is based on the MessageFormat java class."),(0,i.kt)("p",null,'A typical parameterized string could be "Hello {1}, welcome to the {0} game."".'),(0,i.kt)("p",null,"The substitution values are passed via a JSON structure as follows:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},'{ "1" : "George Smith", "0" : "Poker Pirates" }')),(0,i.kt)("p",null,"Note that the key of the JSON object is the substitution variable number and the value is the substitution value."),(0,i.kt)("p",null,'The resulting string would be "Hello George Smith, welcome to the Poker Pirates game.".'),(0,i.kt)(p,{service_name:"pushNotification",operation_name:"SEND_RICH",mdxType:"PartialServop"}),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)(d,{mdxType:"BrowserWindow"},(0,i.kt)(m,{mdxType:"Tabs"},(0,i.kt)(f,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'string toProfileId = "profile1";\nint notificationTemplateId = 1;\nstring substitutionJson = "{\\"0\\":\\"value0\\",\\"1\\":\\"value1\\"}";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.PushNotificationService.SendRichPushNotificationWithParams(toProfileId, notificationTemplateId, substitutionJson, successCallback, failureCallback);\n'))),(0,i.kt)(f,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *toProfileId = "profile1";\nint notificationTemplateId = 1;\nconst char *substitutionJson = "{\\"0\\":\\"value0\\",\\"1\\":\\"value1\\"}";\n_bc->getPushNotificationService()->sendRichPushNotificationWithParams(toProfileId, notificationTemplateId, substitutionJson, this);\n'))),(0,i.kt)(f,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *toProfileId = @"profile1";\nint notificationTemplateId = 1;\nNSString *substitutionJson = @"{\\"0\\":\\"value0\\",\\"1\\":\\"value1\\"}";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc pushNotificationService] sendRichPushNotificationWithParams:toProfileId\n     notificationTemplateId:notificationTemplateId\n           substitutionJson:substitutionJson\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,i.kt)(f,{value:"java",label:"Java",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'String toProfileId = "profile1";\nint notificationTemplateId = 1;\nString substitutionJson = "{\\"0\\":\\"value0\\",\\"1\\":\\"value1\\"}";\nthis; // implements IServerCallback\n\n_bc.getPushNotificationService().sendRichPushNotificationWithParams(toProfileId, notificationTemplateId, substitutionJson, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,i.kt)(f,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'var toProfileId = "profile1";\nvar notificationTemplateId = 1;\nvar substitutionJson = {\n    "0": "value0",\n    "1": "value1"\n};\n\n_bc.pushNotification.sendRichPushNotificationWithParams(toProfileId, notificationTemplateId, substitutionJson, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,i.kt)(f,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cfscript"},'var toProfileId = "profile1";\nvar notificationTemplateId = 1;\nvar substitutionJson = {\n    "0": "value0",\n    "1": "value1"\n};\nvar pushNotificationProxy = bridge.getPushNotificationServiceProxy();\n\nvar postResult = pushNotificationProxy.sendRichPushNotificationWithParams(toProfileId, notificationTemplateId, substitutionJson);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,i.kt)(f,{value:"r",label:"Raw",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "pushNotification",\n    "operation": "SEND_RICH",\n    "data": {\n        "toProfileId": "profile1",\n        "notificationTemplateId": 1,\n        "substitutions": {\n            "0": "value0",\n            "1": "value1"\n        }\n    }\n}\n'))))),(0,i.kt)("details",null,(0,i.kt)("summary",null,"JSON Response"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 200,\n    "data": null\n}\n'))),(0,i.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"toProfileId"),(0,i.kt)("td",{parentName:"tr",align:null},"The profileId of the user to receive the notification")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"notificationTemplateId"),(0,i.kt)("td",{parentName:"tr",align:null},"Id of the notification template")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"substitutionJson"),(0,i.kt)("td",{parentName:"tr",align:null},"JSON defining the substitution params to use with the template")))))}b.isMDXComponent=!0}}]);