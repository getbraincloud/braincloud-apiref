"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[98718],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>b});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),p=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(i.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(t),m=r,b=c["".concat(i,".").concat(m)]||c[m]||d[m]||o;return t?a.createElement(b,s(s({ref:n},u),{},{components:t})):a.createElement(b,s({ref:n},u))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=m;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l[c]="string"==typeof e?e:r,s[1]=l;for(var p=2;p<o;p++)s[p]=t[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},97761:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>v,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=t(87462),r=(t(67294),t(3905));const o={},s="SysListTournamentTemplates",l={unversionedId:"api/capi/tournament/syslisttournamenttemplates",id:"api/capi/tournament/syslisttournamenttemplates",title:"SysListTournamentTemplates",description:"Overview",source:"@site/docs/api/2_capi/tournament/syslisttournamenttemplates.md",sourceDirName:"api/2_capi/tournament",slug:"/api/capi/tournament/syslisttournamenttemplates",permalink:"/braincloud-apiref/api/capi/tournament/syslisttournamenttemplates",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/tournament/syslisttournamenttemplates.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"SysListDivisionSetConfigs",permalink:"/braincloud-apiref/api/capi/tournament/syslistdivisionsetconfigs"},next:{title:"SysReadDivisionSetConfig",permalink:"/braincloud-apiref/api/capi/tournament/sysreaddivisionsetconfig"}},i={},p=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],u=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",n)},c=u("PartialServop"),d=u("BrowserWindow"),m=u("Tabs"),b=u("TabItem"),y={toc:p};function v(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},y,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"syslisttournamenttemplates"},"SysListTournamentTemplates"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Lists all tournament templates."),(0,r.kt)(c,{service_name:"tournament",operation_name:"SYS_LIST_TOURNAMENT_TEMPLATES",mdxType:"PartialServop"}),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)(d,{mdxType:"BrowserWindow"},(0,r.kt)(m,{mdxType:"Tabs"},(0,r.kt)(b,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(b,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(b,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-objectivec"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(b,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(b,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(b,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cfscript"},'var optionsJson = {         \n      "sort": "ASCENDING"\n    };\n\nvar postResult = tournamentProxy.sysEditTournamentTemplate(optionsJson);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,r.kt)(b,{value:"r",label:"Raw",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "tournament",\n    "operation": "SYS_LIST_TOURNAMENT_TEMPLATES",\n    "data": {\n    "optionsJson": {\n      "sort": "ASCENDING"\n    }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"JSON Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "tournamentTemplatesCount": 2,\n    "tournamentTemplates": [\n      {\n        "tournamentCode": "testTournamentId",\n        "version": 9,\n        "description": {\n          "name": {\n            "en": "testTournamentName"\n          },\n          "desc": {\n            "en": ""\n        },\n        "notifications": {\n          "startingSoon": {\n            "enabled": true,\n            "pushId": 1,\n            "mail": {\n              "en": "d-86bc9796d49b45f8a1833c6ee6216c06"\n            }\n          },\n          "start": {\n            "enabled": true,\n            "pushId": 1,\n            "mail": {\n              "en": "d-86bc9796d49b45f8a1833c6ee6216c06"\n            }\n          },\n          "scorePassed": {\n            "enabled": true,\n            "pushId": 1,\n            "mail": {}\n          },\n          "endingSoon": {\n            "enabled": true,\n            "pushId": 1,\n            "mail": {\n              "en": "d-86bc9796d49b45f8a1833c6ee6216c06"\n            }\n          },\n          "complete": {\n            "enabled": true,\n            "pushId": 1,\n            "mail": {\n              "en": "d-86bc9796d49b45f8a1833c6ee6216c06"\n            }\n          }\n        },\n        "calcScript": "",\n        "postScript": "",\n        "customJson": {},\n        "payoutRules": [\n          {\n            "rank": {\n              "rankAbs": 1\n            },\n            "reward": {\n              "currency": {\n                "gems": 1\n              }\n            }\n          }\n        ],\n        "entryFee": {},\n        "createdAt": 1590674004863,\n        "updatedAt": 1590674295500\n      },\n      {\n        "tournamentCode": "uniqueTournamentCode",\n        "version": 1,\n        "description": {\n          "name": {\n            "en": "tFree"\n          },\n          "desc": {\n            "en": "Free tournament. Pays out for rankings: 1st, 2nd and top 10%. Push notifications for start and complete."\n          }\n        },\n        "notifications": {\n          "startingSoon": {\n            "enabled": false,\n            "pushId": null,\n            "mail": {}\n          },\n          "start": {\n            "enabled": true,\n            "pushId": 1,\n            "mail": {}\n          },\n          "scorePassed": {\n            "enabled": false,\n            "pushId": null,\n            "mail": {}\n          },\n          "endingSoon": {\n            "enabled": false,\n            "pushId": null,\n            "mail": {}\n          },\n          "complete": {\n            "enabled": true,\n            "pushId": 1,\n            "mail": {}\n          }\n        },\n        "calcScript": "",\n        "postScript": "",\n        "customJson": {},\n        "payoutRules": [\n          {\n            "rank": {\n              "rankAbs": 1\n            },\n            "reward": {\n              "experiencePoints": 10,\n              "currency": {\n                "coins": 100\n              }\n            }\n          },\n          {\n            "rank": {\n              "rankAbs": 2\n            },\n            "reward": {\n              "experiencePoints": 5,\n              "currency": {\n                "coins": 50\n              }\n            }\n          },\n          {\n            "rank": {\n              "rankToPercent": 10\n            },\n            "reward": {\n              "experiencePoints": 1,\n              "currency": {\n                "coins": 5\n              }\n            }\n          }\n        ],\n        "entryFee": {},\n        "createdAt": 1632511327924,\n        "updatedAt": 1632511327924\n      }\n    ]\n  },\n  "status": 200\n}\n'))),(0,r.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"optionsJson"),(0,r.kt)("td",{parentName:"tr",align:null},'Optional json to sort the list of tournament templates. Valid values for sort field are \\"ASCENDING\\" or \\"DESCENDING\\"; defaults to ASCENDING')))))}v.isMDXComponent=!0}}]);