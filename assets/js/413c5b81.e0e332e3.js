"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[93582],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>g});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(a),m=r,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return a?n.createElement(g,i(i({ref:t},c),{},{components:a})):n.createElement(g,i({ref:t},c))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},17212:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>y,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const o={},i="SysGetQuestPageOffset",s={unversionedId:"api/capi/gamification/sysgetquestpageoffset",id:"api/capi/gamification/sysgetquestpageoffset",title:"SysGetQuestPageOffset",description:"Overview",source:"@site/docs/api/2_capi/gamification/sysgetquestpageoffset.md",sourceDirName:"api/2_capi/gamification",slug:"/api/capi/gamification/sysgetquestpageoffset",permalink:"/braincloud-apiref/api/capi/gamification/sysgetquestpageoffset",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/gamification/sysgetquestpageoffset.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"SysGetQuestPage",permalink:"/braincloud-apiref/api/capi/gamification/sysgetquestpage"},next:{title:"SysReadMilestone",permalink:"/braincloud-apiref/api/capi/gamification/sysreadmilestone"}},l={},p=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},u=c("PartialServop"),d=c("BrowserWindow"),m=c("Tabs"),g=c("TabItem"),f={toc:p};function y(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sysgetquestpageoffset"},"SysGetQuestPageOffset"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json-doc"},'{\n  "status": 200,\n  "data": {\n    "context": "eyJzZWFyY2hDcml0ZXJpY...",\n    "results": {\n      "count": 5,\n      "page": 2,\n      "items": [\n        {\n          "questId": "QUEST_CRUSH52",\n          "questType": "unorderedMinimal",\n          "questData": "0",\n          "title": "Crush 50 Eggs",\n          "description": "This is an updated description",\n          "category": "mission",\n          "extraData": {\n            "difficulty": 1\n          },\n          "rewards": {\n            "experiencePoints": 1000\n          },\n          "createdAt": 1574802052796,\n          "updatedAt": 1574809351418,\n          "version": 2,\n          "tasks": []\n        },\n        {\n          "questId": "quest001",\n          "questType": "unorderedComplete",\n          "questData": null,\n          "title": "quest001",\n          "description": "",\n          "category": "misc",\n          "extraData": null,\n          "createdAt": 1574266600502,\n          "updatedAt": 1574266600502,\n          "version": 1,\n          "tasks": []\n        }\n      ],\n      "moreAfter": true,\n      "moreBefore": true\n    }\n  }\n}\n')),(0,r.kt)("p",null,"Retrieves the next/prev page of quests. "),(0,r.kt)("p",null,"See the ",(0,r.kt)("a",{parentName:"p",href:"/api/appendix/genericpagedqueries"},"Generic Paged Queries")," documentation for creating the context object."),(0,r.kt)(u,{service_name:"gamification",operation_name:"SYS_GET_QUEST_PAGE_OFFSET",mdxType:"PartialServop"}),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)(d,{mdxType:"BrowserWindow"},(0,r.kt)(m,{mdxType:"Tabs"},(0,r.kt)(g,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(g,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(g,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-objectivec"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(g,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(g,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(g,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cfscript"},'var context = {\n    "pagination": {\n        "rowsPerPage": 2,\n        "pageNumber": 1\n    },\n    "searchCriteria": {},\n    "sortCriteria": {\n        "questId": 1\n    }\n};\n\nvar gameficationProxy = bridge.getGamificationServiceProxy();\nvar questPage = gameficationProxy.sysGetQuestPage(context);\nvar encodedContext = "";\n\nif ( questPage.status == 200 ) {\n  if ( questPage.data.results.moreAfter == true ) {\n\n    //...\n\n    // Get the next page...\n    encodedContext = questPage.data.context;\n    questPage = gamificationProxy.sysGetQuestPageOffset(encodedContext, 1);\n    if ( questPage.status == 200 ) {\n\n      // Success!\n    \n    }\n  }\n\n}\n'))),(0,r.kt)(g,{value:"r",label:"Raw",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cfscript"},'var context = {\n    "pagination": {\n        "rowsPerPage": 2,\n        "pageNumber": 1\n    },\n    "searchCriteria": {},\n    "sortCriteria": {\n        "questId": 1\n    }\n};\n\nvar gameficationProxy = bridge.getGamificationServiceProxy();\nvar questPage = gameficationProxy.sysGetQuestPage(context);\nvar encodedContext = "";\n\nif ( questPage.status == 200 ) {\n  if ( questPage.data.results.moreAfter == true ) {\n\n    //...\n\n    // Get the next page...\n    encodedContext = questPage.data.context;\n    questPage = gamificationProxy.sysGetQuestPageOffset(encodedContext, 1);\n    if ( questPage.status == 200 ) {\n\n      // Success!\n    \n    }\n  }\n\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"JSON Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"encodedContext"),(0,r.kt)("td",{parentName:"tr",align:null},"The json context from the previous page request.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pageOffset"),(0,r.kt)("td",{parentName:"tr",align:null},"The positive or negative page offset to fetch. Uses the last page retrieved using the context string to determine a starting point.")))))}y.isMDXComponent=!0}}]);