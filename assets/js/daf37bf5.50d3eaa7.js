"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[36252],{3905:(e,r,a)=>{a.d(r,{Zo:()=>c,kt:()=>m});var t=a(67294);function n(e,r,a){return r in e?Object.defineProperty(e,r,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[r]=a,e}function o(e,r){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),a.push.apply(a,t)}return a}function d(e){for(var r=1;r<arguments.length;r++){var a=null!=arguments[r]?arguments[r]:{};r%2?o(Object(a),!0).forEach((function(r){n(e,r,a[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(a,r))}))}return e}function l(e,r){if(null==e)return{};var a,t,n=function(e,r){if(null==e)return{};var a,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],r.indexOf(a)>=0||(n[a]=e[a]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],r.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=t.createContext({}),s=function(e){var r=t.useContext(i),a=r;return e&&(a="function"==typeof e?e(r):d(d({},r),e)),a},c=function(e){var r=s(e.components);return t.createElement(i.Provider,{value:r},e.children)},p="mdxType",b={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(a),u=n,m=p["".concat(i,".").concat(u)]||p[u]||b[u]||o;return a?t.createElement(m,d(d({ref:r},c),{},{components:a})):t.createElement(m,d({ref:r},c))}));function m(e,r){var a=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=a.length,d=new Array(o);d[0]=u;var l={};for(var i in r)hasOwnProperty.call(r,i)&&(l[i]=r[i]);l.originalType=e,l[p]="string"==typeof e?e:n,d[1]=l;for(var s=2;s<o;s++)d[s]=a[s];return t.createElement.apply(null,d)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},91591:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>i,contentTitle:()=>d,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var t=a(87462),n=(a(67294),a(3905));const o={},d="GetGlobalLeaderboardPageByVersion",l={unversionedId:"api/capi/leaderboard/getgloballeaderboardpagebyversion",id:"api/capi/leaderboard/getgloballeaderboardpagebyversion",title:"GetGlobalLeaderboardPageByVersion",description:"Overview",source:"@site/docs/api/2_capi/leaderboard/getgloballeaderboardpagebyversion.md",sourceDirName:"api/2_capi/leaderboard",slug:"/api/capi/leaderboard/getgloballeaderboardpagebyversion",permalink:"/braincloud-apiref/api/capi/leaderboard/getgloballeaderboardpagebyversion",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/leaderboard/getgloballeaderboardpagebyversion.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1672193365,formattedLastUpdatedAt:"Dec 28, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"GetGlobalLeaderboardPage",permalink:"/braincloud-apiref/api/capi/leaderboard/getgloballeaderboardpage"},next:{title:"GetGlobalLeaderboardVersions",permalink:"/braincloud-apiref/api/capi/leaderboard/getgloballeaderboardversions"}},i={},s=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],c=e=>function(r){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",r)},p=c("PartialServop"),b=c("BrowserWindow"),u=c("Tabs"),m=c("TabItem"),v={toc:s};function g(e){let{components:r,...a}=e;return(0,n.kt)("wrapper",(0,t.Z)({},v,a,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"getgloballeaderboardpagebyversion"},"GetGlobalLeaderboardPageByVersion"),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"NOTE: The friend summary data is returned for each record in the leaderboard.")),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},'NOTE: "timeBeforeReset" is only returned when the requested version is also the active version.')),(0,n.kt)("p",null,"Method returns a page of global leaderboard results. By using a non-current version id, the user can retrieve a historical leaderboard."),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"See GetGlobalLeaderboardVersions method to retrieve the version id.")),(0,n.kt)(p,{service_name:"leaderboard",operation_name:"GET_GLOBAL_LEADERBOARD_PAGE",mdxType:"PartialServop"}),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)(b,{mdxType:"BrowserWindow"},(0,n.kt)(u,{mdxType:"Tabs"},(0,n.kt)(m,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'string leaderboardId = "default";\nSortOrder sortOrder = BrainCloudSocialLeaderboard.SortOrder.HIGH_TO_LOW;\nint startIndex = 0;\nint endIndex = 9;\nint versionId = -1;\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.LeaderboardService.GetGlobalLeaderboardPageByVersion(leaderboardId, sortOrder, startIndex, endIndex, versionId, successCallback, failureCallback);\n'))),(0,n.kt)(m,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *leaderboardId = "default";\nSortOrder sortOrder = HIGH_TO_LOW;\nint startIndex = 0;\nint endIndex = 9;\nint versionId = -1;\n_bc->getLeaderboardService()->getGlobalLeaderboardPageByVersion(leaderboardId, sortOrder, startIndex, endIndex, versionId, this);\n'))),(0,n.kt)(m,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *leaderboardId = @"default";\nSortOrder sortOrder = HIGH_TO_LOW;\nint startIndex = 0;\nint endIndex = 9;\nint versionId = -1;\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc leaderboardService] getGlobalLeaderboardPageByVersion:leaderboardId\n                  sortOrder:sortOrder\n                 startIndex:startIndex\n                   endIndex:endIndex\n                  versionId:versionId\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,n.kt)(m,{value:"java",label:"Java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'String leaderboardId = "default";\nSortOrder sortOrder = BrainCloudSocialLeaderboardService.SortOrder.HIGH_TO_LOW;\nint startIndex = 0;\nint endIndex = 9;\nint versionId = -1;\nthis; // implements IServerCallback\n\n_bc.getLeaderboardService().getGlobalLeaderboardPageByVersion(leaderboardId, sortOrder, startIndex, endIndex, versionId, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,n.kt)(m,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'var leaderboardId = "default";\nvar sortOrder = "HIGH_TO_LOW";\nvar startIndex = 0;\nvar endIndex = 9;\nvar versionId = -1;\n\n_bc.leaderboard.getGlobalLeaderboardPageByVersion(leaderboardId, sortOrder, startIndex, endIndex, versionId, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,n.kt)(m,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cfscript"},'var leaderboardId = "default";\nvar sort = "HIGH_TO_LOW";\nvar startIndex = 0;\nvar endIndex = 9;\nvar versionId = -1;\nvar leaderboardProxy = bridge.getLeaderboardServiceProxy();\n\nvar postResult = leaderboardProxy.getGlobalLeaderboardPageByVersion(leaderboardId, sort, startIndex, endIndex, versionId);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,n.kt)(m,{value:"r",label:"Raw",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "leaderboard",\n    "operation": "GET_GLOBAL_LEADERBOARD_PAGE",\n    "data": {\n        "leaderboardId": "default",\n        "sort": "HIGH_TO_LOW",\n        "startIndex": 0,\n        "endIndex": 9,\n        "versionId": -1\n    }\n}\n'))))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"JSON Response"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 200,\n    "data": {\n        "leaderboard": [\n            {\n                "playerId": "9073dff7-0df6-437e-9be6-39cd704dcoj4",\n                "score": 100,\n                "data": null,\n                "createdAt": 1401385959596,\n                "updatedAt": 1401385959596,\n                "index": 0,\n                "rank": 1,\n                "name": "",\n                "summaryFriendData": null,\n                "pictureUrl": null\n            },\n            {\n                "playerId": "7c107e9f-ab48-492d-a000-defec6237700",\n                "score": 10,\n                "data": null,\n                "rewarded": false,\n                "createdAt": 1401385898407,\n                "updatedAt": 1401385898407,\n                "index": 1,\n                "rank": 2,\n                "name": "",\n                "summaryFriendData": null,\n                "pictureUrl": null\n            }\n        ],\n        "leaderboardSize": 31,\n        "moreBefore": false,\n        "moreAfter": true,\n        "timeBeforeReset" : 588182412,\n        "server_time": 1395840957588\n    }\n}\n'))),(0,n.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"leaderboardId"),(0,n.kt)("td",{parentName:"tr",align:null},"The id of the leaderboard")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"sortOrder"),(0,n.kt)("td",{parentName:"tr",align:null},'Sort order of page. ("HIGH_TO_LOW" or "LOW_TO_HIGH")')),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"startIndex"),(0,n.kt)("td",{parentName:"tr",align:null},"The rank at which to start the page.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"endIndex"),(0,n.kt)("td",{parentName:"tr",align:null},"The rank at which to end the page.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"versionId"),(0,n.kt)("td",{parentName:"tr",align:null},"The historical version to retrieve.")))))}g.isMDXComponent=!0}}]);