"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[29769],{3905:(e,r,t)=>{t.d(r,{Zo:()=>f,kt:()=>m});var i=t(67294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,i,a=function(e,r){if(null==e)return{};var t,i,a={},n=Object.keys(e);for(i=0;i<n.length;i++)t=n[i],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)t=n[i],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=i.createContext({}),p=function(e){var r=i.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},f=function(e){var r=p(e.components);return i.createElement(l.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},c=i.forwardRef((function(e,r){var t=e.components,a=e.mdxType,n=e.originalType,l=e.parentName,f=s(e,["components","mdxType","originalType","parentName"]),u=p(t),c=a,m=u["".concat(l,".").concat(c)]||u[c]||d[c]||n;return t?i.createElement(m,o(o({ref:r},f),{},{components:t})):i.createElement(m,o({ref:r},f))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var n=t.length,o=new Array(n);o[0]=c;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<n;p++)o[p]=t[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}c.displayName="MDXCreateElement"},72901:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>n,metadata:()=>s,toc:()=>p});var i=t(87462),a=(t(67294),t(3905));const n={},o="Friend",s={unversionedId:"api/s2s/friend/index",id:"api/s2s/friend/index",title:"Friend",description:"Overview",source:"@site/docs/api/4_s2s/friend/index.md",sourceDirName:"api/4_s2s/friend",slug:"/api/s2s/friend/",permalink:"/braincloud-apiref/api/s2s/friend/",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/4_s2s/friend/index.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1672193365,formattedLastUpdatedAt:"Dec 28, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"SendEvent",permalink:"/braincloud-apiref/api/s2s/event/sendevent"},next:{title:"FindUsersByExactName",permalink:"/braincloud-apiref/api/s2s/friend/findusersbyexactname"}},l={},p=[{value:"Overview",id:"overview",level:2},{value:"API Summary",id:"api-summary",level:3},{value:"User Lookup",id:"user-lookup",level:3}],f=(u="DocCardList",function(e){return console.warn("Component "+u+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var u;const d={toc:p};function c(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,i.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"friend"},"Friend"),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Friends in brainCloud are other users (i.e. players) that you want to\nshare your user experience with. Friends may be existing connections\nfrom a social network (i.e. Facebook), or social connections that you make\nthat are specific to the app and managed by brainCloud."),(0,a.kt)("h3",{id:"api-summary"},"API Summary"),(0,a.kt)("h3",{id:"user-lookup"},"User Lookup"),(0,a.kt)("p",null,"By Universal ID:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/capi/friend/finduserbyexactuniversalid"},"FindUserByExactUniversalId")," - Retrieves profile information for the partial Universal ID matches of the specified text."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/capi/friend/findusersbyuniversalidstartingwith"},"FindUsersByUniversalIdStartingWith")," - Retrieves profile information for users whose universal ID starts with search text. Optional parameter: maxResults")),(0,a.kt)("p",null,"By Name (not recommended - slow!):"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/capi/friend/findusersbyexactname"},"FindUsersByExactName")," - Retrieves profile information for exactly matched user names. Optional parameter: maxResults"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/capi/friend/findusersbysubstrname"},"FindUsersBySubstrName")," - Retrieves profile information for partially matched user names. Optional parameter: maxResults"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/capi/friend/findusersbynamestartingwith"},"FindUsersByNameStartingWith")," - Retrieves profile information for users whose name starts with search text. Optional parameter: maxResults")),(0,a.kt)("p",null,"By Other Identity:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/capi/friend/getprofileinfoforcredential"},"GetProfileInfoForCredential")," - Retrieves profile information for the specified user."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/capi/friend/getprofileinfoforcredentialifexists"},"GetProfileInfoForCredentialIfExists")," - Retrieves profile information for the specified user. Silently fails"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/capi/friend/getprofileinfoforexternalauthid"},"GetProfileInfoForExternalAuthId")," - Retrieves profile information for the specified user."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/capi/friend/getprofileinfoforexternalauthidifexists"},"GetProfileInfoForExternalAuthIdIfExists")," - Retrieves profile information for the specified user. Silently fails")),(0,a.kt)("p",null,"Misc:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/capi/friend/findusersbyusersummary"},"FindUsersByUserSummary")," - Retrieves profile information based on the search criteria of the user summary data."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/capi/friend/getusersonlinestatus"},"GetUsersOnlineStatus")," - Get users online status."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/capi/friend/getexternalidforprofileid"},"GetExternalIdForProfileId")," - Retrieves the external ID for the specified user profile ID on the specified social platform."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/api/capi/friend/getsummarydataforprofileid"},"GetSummaryDataForProfileId")," - Retrieves summary information for the specified user profile ID.")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Note that friends APIs in S2S are disigned for user retrival purpose, it does not require the calling user (S2S session) to be a friend of the retrieved users.")),(0,a.kt)(f,{mdxType:"DocCardList"}))}c.isMDXComponent=!0}}]);