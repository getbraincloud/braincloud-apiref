"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[21303],{3905:(e,a,r)=>{r.d(a,{Zo:()=>i,kt:()=>m});var t=r(67294);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function o(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?o(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function s(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=t.createContext({}),c=function(e){var a=t.useContext(d),r=a;return e&&(r="function"==typeof e?e(a):l(l({},a),e)),r},i=function(e){var a=c(e.components);return t.createElement(d.Provider,{value:a},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},b=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,o=e.originalType,d=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),p=c(r),b=n,m=p["".concat(d,".").concat(b)]||p[b]||u[b]||o;return r?t.createElement(m,l(l({ref:a},i),{},{components:r})):t.createElement(m,l({ref:a},i))}));function m(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=b;var s={};for(var d in a)hasOwnProperty.call(a,d)&&(s[d]=a[d]);s.originalType=e,s[p]="string"==typeof e?e:n,l[1]=s;for(var c=2;c<o;c++)l[c]=r[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}b.displayName="MDXCreateElement"},90962:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>d,contentTitle:()=>l,default:()=>k,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var t=r(87462),n=(r(67294),r(3905));const o={},l="PostScoreToLeaderboard",s={unversionedId:"api/capi/leaderboard/postscoretoleaderboard",id:"api/capi/leaderboard/postscoretoleaderboard",title:"PostScoreToLeaderboard",description:"Overview",source:"@site/docs/api/2_capi/leaderboard/postscoretoleaderboard.md",sourceDirName:"api/2_capi/leaderboard",slug:"/api/capi/leaderboard/postscoretoleaderboard",permalink:"/braincloud-apiref/api/capi/leaderboard/postscoretoleaderboard",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/leaderboard/postscoretoleaderboard.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1672193365,formattedLastUpdatedAt:"Dec 28, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"PostScoreToGroupLeaderboard",permalink:"/braincloud-apiref/api/capi/leaderboard/postscoretogroupleaderboard"},next:{title:"PostScoreToLeaderboardOnBehalfOf",permalink:"/braincloud-apiref/api/capi/leaderboard/postscoretoleaderboardonbehalfof"}},d={},c=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],i=e=>function(a){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",a)},p=i("PartialServop"),u=i("BrowserWindow"),b=i("Tabs"),m=i("TabItem"),v={toc:c};function k(e){let{components:a,...r}=e;return(0,n.kt)("wrapper",(0,t.Z)({},v,r,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"postscoretoleaderboard"},"PostScoreToLeaderboard"),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"Post the players score to the given social leaderboard."),(0,n.kt)("p",null,"You can optionally send a user-defined json string of data with the posted score. This string could include information relevant to the posted score."),(0,n.kt)("p",null,"Note that the behavior of posting a score can be modified in the brainCloud portal. By default, the server will only keep the player's best score."),(0,n.kt)(p,{service_name:"leaderboard",operation_name:"POST_SCORE",mdxType:"PartialServop"}),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)(u,{mdxType:"BrowserWindow"},(0,n.kt)(b,{mdxType:"Tabs"},(0,n.kt)(m,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'string leaderboardId = "default";\nint score = 10;\nstring jsonOtherData = "{\\"nickname\\":\\"batman\\"}";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.LeaderboardService.PostScoreToLeaderboard(leaderboardId, score, jsonOtherData, successCallback, failureCallback);\n'))),(0,n.kt)(m,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *leaderboardId = "default";\nint score = 10;\nconst char *jsonOtherData = "{\\"nickname\\":\\"batman\\"}";\n_bc->getLeaderboardService()->postScoreToLeaderboard(leaderboardId, score, jsonOtherData, this);\n'))),(0,n.kt)(m,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *leaderboardId = @"default";\nint score = 10;\nNSString *jsonOtherData = @"{\\"nickname\\":\\"batman\\"}";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc leaderboardService] postScoreToLeaderboard:leaderboardId\n                      score:score\n              jsonOtherData:jsonOtherData\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,n.kt)(m,{value:"java",label:"Java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'String leaderboardId = "default";\nint score = 10;\nString jsonOtherData = "{\\"nickname\\":\\"batman\\"}";\nthis; // implements IServerCallback\n\n_bc.getLeaderboardService().postScoreToLeaderboard(leaderboardId, score, jsonOtherData, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,n.kt)(m,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'var leaderboardId = "default";\nvar score = 10;\nvar jsonOtherData = {\n    "nickname": "batman"\n};\n\n_bc.leaderboard.postScoreToLeaderboard(leaderboardId, score, jsonOtherData, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,n.kt)(m,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cfscript"},'var leaderboardId = "default";\nvar score = 10;\nvar jsonOtherData = {\n    "nickname": "batman"\n};\nvar leaderboardProxy = bridge.getLeaderboardServiceProxy();\n\nvar postResult = leaderboardProxy.postScoreToLeaderboard(leaderboardId, score, jsonOtherData);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,n.kt)(m,{value:"r",label:"Raw",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "leaderboard",\n    "operation": "POST_SCORE",\n    "data": {\n        "leaderboardId": "default",\n        "score": 10,\n        "data": {\n            "nickname": "batman"\n        }\n    }\n}\n'))))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"JSON Response"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 200,\n    "data": null\n}\n'))),(0,n.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"leaderboardId"),(0,n.kt)("td",{parentName:"tr",align:null},"The leaderboard to post to.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"score"),(0,n.kt)("td",{parentName:"tr",align:null},"The score to post.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"data"),(0,n.kt)("td",{parentName:"tr",align:null},"Optional user-defined data to post with the score.")))))}k.isMDXComponent=!0}}]);