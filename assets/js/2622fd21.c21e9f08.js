"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[77632],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),d=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=d(n),u=r,b=m["".concat(c,".").concat(u)]||m[u]||s[u]||o;return n?a.createElement(b,i(i({ref:t},p),{},{components:n})):a.createElement(b,i({ref:t},p))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},30350:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>k,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=n(87462),r=(n(67294),n(3905));const o={},i="MintNFTFromRedemptionCode",l={unversionedId:"api/capi/blockchain/mintnftfromredemptioncode",id:"api/capi/blockchain/mintnftfromredemptioncode",title:"MintNFTFromRedemptionCode",description:"Overview",source:"@site/docs/api/2_capi/blockchain/mintnftfromredemptioncode.md",sourceDirName:"api/2_capi/blockchain",slug:"/api/capi/blockchain/mintnftfromredemptioncode",permalink:"/braincloud-apiref/api/capi/blockchain/mintnftfromredemptioncode",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/blockchain/mintnftfromredemptioncode.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"GetUniqs",permalink:"/braincloud-apiref/api/capi/blockchain/getuniqs"},next:{title:"Chat",permalink:"/braincloud-apiref/api/capi/chat/"}},c={},d=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},m=p("PartialServop"),s=p("BrowserWindow"),u=p("Tabs"),b=p("TabItem"),f={toc:d};function k(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mintnftfromredemptioncode"},"MintNFTFromRedemptionCode"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Mints an NFT for the caller in response to the given redemption code."),(0,r.kt)(m,{service_name:"blockchain",operation_name:"MINT_NFT_FROM_REDEMPTION_CODE",mdxType:"PartialServop"}),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)(s,{mdxType:"BrowserWindow"},(0,r.kt)(u,{mdxType:"Tabs"},(0,r.kt)(b,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(b,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(b,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-objectivec"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(b,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(b,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(b,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cfscript"},'var integrationId = "default";\nvar redemptionCodeId = "a-redemptioncode-id";\nvar attempt = 1;\nvar codeType = "my-code-type";\nvar mintDataJson = {\n  "guarantee": "in-block",\n  "factoryId": 4,\n  "amount": 1,\n  "customData": "my custom data string"\n};\nvar blockchainProxy = bridge.getBlockchainServiceProxy();\n\nvar postResult = blockchainProxy.mintNFTFromRedemptionCode(integrationId, redemptionCodeId, attempt, codeType, mintDataJson);\nif (postResult.status == 200) {\n  // Success!\n}\n'))),(0,r.kt)(b,{value:"r",label:"Raw",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'{\n  "service": "blockchain",\n  "operation": "MINT_NFT_FROM_REDEMPTION_CODE",\n  "data":\n  {\n    "integrationId": "default",\n    "redemptionCodeId": "a-redemptioncode-id",\n    "attempt": 1,\n    "codeType": "my-code-type",\n    "mintDataJson": {\n      "guarantee": "in-block",\n      "factoryId": 4,\n      "amount": 1,\n      "customData": "my custom data string"\n    }\n  }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"JSON Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "success": true,\n    "response": {\n      "transaction_id": "__a_transaction_id__",\n      "processed": {\n        "id": "3f42fe4f892b04cda087247f0296b3bf93d16972ceff7a1509f9a6c8268e7df5",\n        "block_num": 12345678,\n        "block_time": "2022-05-10T15:29:27.500",\n        "producer_block_id": null,\n        "receipt": {\n          "status": "executed",\n          "cpu_usage_us": 648,\n          "net_usage_words": 425\n        },\n        "elapsed": 648,\n        "net_usage": 3400,\n        "scheduled": false,\n        "action_traces": [\n          {\n            "action_ordinal": 1,\n            "creator_action_ordinal": 0,\n            "closest_unnotified_ancestor_action_ordinal": 0,\n            "receipt": {\n              "receiver": "eosio.nft.ft",\n              "act_digest": "aaaabbbbccccdddd",\n              "global_sequence": 35962179,\n              "recv_sequence": 599,\n              "auth_sequence": [\n                [\n                  "ultra.nft.ft",\n                  444\n                ]\n              ],\n              "code_sequence": 1,\n              "abi_sequence": 1\n            },\n            "receiver": "eosio.nft.ft",\n            "act": {\n              "account": "eosio.nft.ft",\n              "name": "issue",\n              "authorization": [\n                {\n                  "actor": "ultra.nft.ft",\n                  "permission": "issue"\n                }\n              ],\n              "data": {\n                "issue": {\n                  "to": "vh1to2ko3wp4",\n                  "token_configs": [\n                    {\n                      "token_factory_id": 4,\n                      "amount": 1,\n                      "custom_data": "my custom data string"\n                    }\n                  ],\n                  "memo": "23713|a-redemptioncode-id|1|my-code-type"\n                }\n              },\n              "hex_data": "012345555012344"\n            },\n            "context_free": false,\n            "elapsed": 292,\n            "console": "",\n            "trx_id": "__a_transaction_id__",\n            "block_num": 12345678,\n            "block_time": "2022-05-10T15:29:27.500",\n            "producer_block_id": null,\n            "account_ram_deltas": [\n              {\n                "account": "eosio.nft.ft",\n                "delta": 136\n              }\n            ],\n            "except": null,\n            "error_code": null,\n            "inline_traces": []\n          }\n        ],\n        "account_ram_delta": null,\n        "except": null,\n        "error_code": null\n      }\n    }\n  },\n  "status": 200\n}\n'))),(0,r.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"integrationId"),(0,r.kt)("td",{parentName:"tr",align:null},"The blockchain integration id. Currently only 'default' is supported.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"redemptionCodeId"),(0,r.kt)("td",{parentName:"tr",align:null},"The internal id for the redemption code being redeemed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"attempt"),(0,r.kt)("td",{parentName:"tr",align:null},"The redemption attempt number.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"codeType"),(0,r.kt)("td",{parentName:"tr",align:null},"The type of redemption code being redeemed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mintDataJson"),(0,r.kt)("td",{parentName:"tr",align:null},"JSON object containing blockchain provider specific data for minting NFTs.")))))}k.isMDXComponent=!0}}]);