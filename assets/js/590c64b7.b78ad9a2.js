"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[6696],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>d});var s=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,s)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,s,n=function(e,t){if(null==e)return{};var a,s,n={},r=Object.keys(e);for(s=0;s<r.length;s++)a=r[s],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)a=r[s],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=s.createContext({}),c=function(e){var t=s.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return s.createElement(o.Provider,{value:t},e.children)},h="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},u=s.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),h=c(a),u=n,d=h["".concat(o,".").concat(u)]||h[u]||m[u]||r;return a?s.createElement(d,i(i({ref:t},p),{},{components:a})):s.createElement(d,i({ref:t},p))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[h]="string"==typeof e?e:n,i[1]=l;for(var c=2;c<r;c++)i[c]=a[c];return s.createElement.apply(null,i)}return s.createElement.apply(null,a)}u.displayName="MDXCreateElement"},73556:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var s=a(87462),n=(a(67294),a(3905));const r={},i="Chat",l={unversionedId:"api/s2s/chat/index",id:"api/s2s/chat/index",title:"Chat",description:"Overview",source:"@site/docs/api/4_s2s/chat/index.md",sourceDirName:"api/4_s2s/chat",slug:"/api/s2s/chat/",permalink:"/braincloud-apiref/api/s2s/chat/",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/4_s2s/chat/index.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1672193337,formattedLastUpdatedAt:"Dec 28, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Authenticate",permalink:"/braincloud-apiref/api/s2s/authentication/authenticate"},next:{title:"GetChannelId",permalink:"/braincloud-apiref/api/s2s/chat/getchannelid"}},o={},c=[{value:"Overview",id:"overview",level:2},{value:"Chat Service - S2s API",id:"chat-service---s2s-api",level:3},{value:"API Summary",id:"api-summary",level:3},{value:"ChatService",id:"chatservice",level:3}],p=(h="DocCardList",function(e){return console.warn("Component "+h+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",e)});var h;const m={toc:c};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,s.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"chat"},"Chat"),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Chat")," is a new service that enables real-time communication between end-users. It is available to apps that have ",(0,n.kt)("strong",{parentName:"p"},"brainCloud RTT")," enabled."),(0,n.kt)("p",null,"This page describes the Chat Service S2S API methods. For the client api, go to ",(0,n.kt)("a",{parentName:"p",href:"/api/capi/chat"},"Chat Service - Client API"),"."),(0,n.kt)("h3",{id:"chat-service---s2s-api"},"Chat Service - S2s API"),(0,n.kt)("p",null,"These API calls bypass channel membership / message ownership checks - and allow you to post messages from the ",(0,n.kt)("em",{parentName:"p"},"system")," (i.e. app) instead of from another end-user:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/s2s/chat/getchannelid"},"GetChannelId")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/s2s/chat/sysdeletechatmessage"},"SysDeleteChatMessage")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/s2s/chat/sysgetchannelinfo"},"SysGetChannelInfo")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/s2s/chat/sysgetchatmessage"},"SysGetChatMessage")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/s2s/chat/sysgetrecentchatmessages"},"SysGetRecentChatMessages")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/s2s/chat/syspostchatmessage"},"SysPostChatMessage")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/s2s/chat/syspostchatmessagesimple"},"SysPostChatMessageSimple")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/s2s/chat/sysupdatechatmessage"},"SysUpdateChatMessage"))),(0,n.kt)("h3",{id:"api-summary"},"API Summary"),(0,n.kt)("h3",{id:"chatservice"},"ChatService"),(0,n.kt)("p",null,"These API calls bypass channel membership / message ownership checks - and allow you to post messages from the ",(0,n.kt)("em",{parentName:"p"},"system")," (i.e. app) instead of from another end-user:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/s2s/chat/getchannelid"},"GetChannelId")," - Gets the channelId for the given \\<channelType",">"," and \\<channelSubId",">",'. Channel type must be one of "gl" or "gr".'),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/s2s/chat/syscreatechannel"},"SysCreateChannel"),' - Initializes a dynamic chat channel. Returns the channelId. Channel type must be "dy".'),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/s2s/chat/sysdeletechannel"},"SysDeleteChannel"),' - Deletes a dynamic chat channel. Channel type must be "dy". This will delete the chat history as well.'),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/s2s/chat/sysgetchannelinfo"},"SysGetChannelInfo")," - Gets description info and activity stats for channel \\<channelId",">",". Note that numMsgs and listeners only returned for non-global groups. Only callable for channels the user is a member of."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/s2s/chat/sysgetchatmessage"},"SysGetChatMessage")," - Gets a populated chat object (normally for editing)."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/s2s/chat/sysgetrecentchatmessages"},"SysGetRecentChatMessages")," - Get a list of \\<maxReturn",">"," messages from history of channel \\<channelId",">"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/s2s/chat/syspostchatmessage"},"SysPostChatMessage")," - Send a potentially rich chat message. \\<recordInHistory",">"," is optional and true by default. \\<fromJson",">",' is optional and can contain a "name" and/or "pic" entry.'),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/s2s/chat/syspostchatmessagesimple"},"SysPostChatMessageSimple")," - Send a simple-text message. \\<recordInHistory",">"," is optional and true by default. \\<fromJson",">",' is optional and can contain a "name" and/or "pic" entry.'),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/s2s/chat/sysupdatechatmessage"},"SysUpdateChatMessage")," - Update a chat message. \\<version",">"," must match the latest or pass -1 to bypass version check."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/api/s2s/chat/sysdeletechatmessage"},"SysDeleteChatMessage")," - Delete a chat message. \\<version",">"," must match the latest or pass -1 to bypass version check.")),(0,n.kt)(p,{mdxType:"DocCardList"}))}u.isMDXComponent=!0}}]);