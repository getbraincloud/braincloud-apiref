"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[92897],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>y});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},b=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),b=i,y=u["".concat(o,".").concat(b)]||u[b]||d[b]||r;return n?a.createElement(y,c(c({ref:t},s),{},{components:n})):a.createElement(y,c({ref:t},s))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,c=new Array(r);c[0]=b;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[u]="string"==typeof e?e:i,c[1]=l;for(var p=2;p<r;p++)c[p]=n[p];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},87449:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>k,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=n(87462),i=(n(67294),n(3905));const r={},c="AttachBlockchainIdentity",l={unversionedId:"api/capi/identity/attachblockchainidentity",id:"api/capi/identity/attachblockchainidentity",title:"AttachBlockchainIdentity",description:"Overview",source:"@site/docs/api/2_capi/identity/attachblockchainidentity.md",sourceDirName:"api/2_capi/identity",slug:"/api/capi/identity/attachblockchainidentity",permalink:"/braincloud-apiref/api/capi/identity/attachblockchainidentity",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/identity/attachblockchainidentity.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1672193365,formattedLastUpdatedAt:"Dec 28, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"AttachAppleIdentity",permalink:"/braincloud-apiref/api/capi/identity/attachappleidentity"},next:{title:"AttachEmailIdentity",permalink:"/braincloud-apiref/api/capi/identity/attachemailidentity"}},o={},p=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],s=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.kt)("div",t)},u=s("PartialServop"),d=s("BrowserWindow"),b=s("Tabs"),y=s("TabItem"),m={toc:p};function k(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"attachblockchainidentity"},"AttachBlockchainIdentity"),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,"Attaches the given block chain public key identity to the current profile."),(0,i.kt)(u,{service_name:"identity",operation_name:"ATTACH_BLOCKCHAIN_IDENTITY",mdxType:"PartialServop"}),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)(d,{mdxType:"BrowserWindow"},(0,i.kt)(b,{mdxType:"Tabs"},(0,i.kt)(y,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'string blockchainConfig = "config";\nstring publicKey = "xxx";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.IdentityService.AttachBlockchainIdentity(blockchainConfig, publicKey, successCallback, failureCallback);\n'))),(0,i.kt)(y,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *blockchainConfig = "config";\nconst char *publicKey = "xxx";\n_bc->getIdentityService()->attachBlockchainIdentity(blockchainConfig, publicKey, this);\n'))),(0,i.kt)(y,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *blockchainConfig = @"config";\nNSString *publicKey = @"xxx";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc identityService] attachBlockchainIdentity:blockchainConfig\n                  publicKey:publicKey\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,i.kt)(y,{value:"java",label:"Java",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'String blockchainConfig = "config";\nString publicKey = "xxx";\nthis; // implements IServerCallback\n\n_bc.getIdentityService().attachBlockchainIdentity(blockchainConfig, publicKey, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,i.kt)(y,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'var blockchainConfig = "config";\nvar publicKey = "xxx";\n\n_bc.identity.attachBlockchainIdentity(blockchainConfig, publicKey, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,i.kt)(y,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cfscript"},'var blockchainConfig = "config";\nvar publicKey = "xxx";\nvar identityProxy = bridge.getIdentityServiceProxy();\n\nvar postResult = identityProxy.attachBlockchainIdentity(blockchainConfig, publicKey);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,i.kt)(y,{value:"r",label:"Raw",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "identity",\n    "operation": "ATTACH_BLOCKCHAIN_IDENTITY",\n    "data": {\n        "blockchainConfig": "config",\n        "publicKey": "xxx"\n    }\n}\n'))))),(0,i.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"blockchainConfig"),(0,i.kt)("td",{parentName:"tr",align:null},"Identifies the block chain.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"publicKey"),(0,i.kt)("td",{parentName:"tr",align:null},"Block chain public key.")))))}k.isMDXComponent=!0}}]);