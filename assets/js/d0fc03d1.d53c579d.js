"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[33326],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>c});var r=a(67294);function p(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function n(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){p(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,p=function(e,t){if(null==e)return{};var a,r,p={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(p[a]=e[a]);return p}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(p[a]=e[a])}return p}var u=r.createContext({}),l=function(e){var t=r.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):n(n({},t),e)),a},s=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,p=e.mdxType,i=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=l(a),d=p,c=m["".concat(u,".").concat(d)]||m[d]||g[d]||i;return a?r.createElement(c,n(n({ref:t},s),{},{components:a})):r.createElement(c,n({ref:t},s))}));function c(e,t){var a=arguments,p=t&&t.mdxType;if("string"==typeof e||p){var i=a.length,n=new Array(i);n[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[m]="string"==typeof e?e:p,n[1]=o;for(var l=2;l<i;l++)n[l]=a[l];return r.createElement.apply(null,n)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},51773:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>n,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var r=a(87462),p=(a(67294),a(3905));const i={},n="Group",o={unversionedId:"api/capi/group/index",id:"api/capi/group/index",title:"Group",description:"Overview",source:"@site/docs/api/2_capi/group/index.md",sourceDirName:"api/2_capi/group",slug:"/api/capi/group/",permalink:"/braincloud-apiref/api/capi/group/",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/group/index.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1672193365,formattedLastUpdatedAt:"Dec 28, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"ReadGlobalStatsSubset",permalink:"/braincloud-apiref/api/capi/globalstats/readglobalstatssubset"},next:{title:"AcceptGroupInvitation",permalink:"/braincloud-apiref/api/capi/group/acceptgroupinvitation"}},u={},l=[{value:"Overview",id:"overview",level:2},{value:"API Summary",id:"api-summary",level:3},{value:"Group Management",id:"group-management",level:3},{value:"Group members",id:"group-members",level:3},{value:"Locating Groups",id:"locating-groups",level:3},{value:"Group entities",id:"group-entities",level:3},{value:"System calls",id:"system-calls",level:3}],s=(m="DocCardList",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,p.kt)("div",e)});var m;const g={toc:l};function d(e){let{components:t,...a}=e;return(0,p.kt)("wrapper",(0,r.Z)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"group"},"Group"),(0,p.kt)("h2",{id:"overview"},"Overview"),(0,p.kt)("p",null,"Groups are used to represent and manage a collection of brainCloud users. They are most commonly used to represent Teams in apps, and Clans in games."),(0,p.kt)("p",null,"Groups are designed as follows:"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"Groups consist of a collection of members (users)"),(0,p.kt)("li",{parentName:"ul"},"Groups have a name, a type, an id, and custom data"),(0,p.kt)("li",{parentName:"ul"},"Members are each assigned a role-based permission level: ",(0,p.kt)("inlineCode",{parentName:"li"},'"OWNER"'),", ",(0,p.kt)("inlineCode",{parentName:"li"},'"ADMIN"'),", or ",(0,p.kt)("inlineCode",{parentName:"li"},'"MEMBER"'),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"Groups have one (and only one) ",(0,p.kt)("inlineCode",{parentName:"li"},'"OWNER"'),". The OWNER of a group can add/remove members, and delete the group"),(0,p.kt)("li",{parentName:"ul"},"Groups can have multiple ",(0,p.kt)("inlineCode",{parentName:"li"},'"ADMIN"'),"s. ADMINs are like OWNERs, except that they cannot delete the group."),(0,p.kt)("li",{parentName:"ul"},"Any ",(0,p.kt)("inlineCode",{parentName:"li"},'"MEMBER"')," can edit group data"))),(0,p.kt)("li",{parentName:"ul"},"MEMBERs of a group can have custom ",(0,p.kt)("inlineCode",{parentName:"li"},"attributes")," associated with them (can be used for custom application roles, etc.)"),(0,p.kt)("li",{parentName:"ul"},"Users can be members of more than one group"),(0,p.kt)("li",{parentName:"ul"},"Users can be the owner of more than one group"),(0,p.kt)("li",{parentName:"ul"},"Groups can also have associated Entities (i.e. ",(0,p.kt)("inlineCode",{parentName:"li"},"GroupEntity"),")")),(0,p.kt)("p",null,"Groups are made up of the following attributes:"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,p.kt)("th",{parentName:"tr",align:null},"Description"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:null},"groupId"),(0,p.kt)("td",{parentName:"tr",align:null},"ID of the group")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:null},"ownerId"),(0,p.kt)("td",{parentName:"tr",align:null},"ProfileId of the end-user who owns the group")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:null},"name"),(0,p.kt)("td",{parentName:"tr",align:null},"Name of the group")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:null},"type"),(0,p.kt)("td",{parentName:"tr",align:null},"Type of group. This is a developer-defined type, that establishes some rules for the group.")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:null},"members"),(0,p.kt)("td",{parentName:"tr",align:null},"the members of the group")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:null},"pendingMembers"),(0,p.kt)("td",{parentName:"tr",align:null},"members who have been invited to the group, but have not yet accepted")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:null},"data"),(0,p.kt)("td",{parentName:"tr",align:null},"json-data associated with the group")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:null},"acl"),(0,p.kt)("td",{parentName:"tr",align:null},"controls visibility of data and members list for non-members")))),(0,p.kt)("p",null,"To create a group you must first configure a Group Type on the ",(0,p.kt)("a",{parentName:"p",href:"https://portal.braincloudservers.com/admin/dashboard#/development/group-types"},"Group Types page")," of the brainCloud portal."),(0,p.kt)("h3",{id:"api-summary"},"API Summary"),(0,p.kt)("h3",{id:"group-management"},"Group Management"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/creategroup"},"CreateGroup")," - create a group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/creategroupwithsummarydata"},"CreateGroupWithSummaryData")," - Create a group. "),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/deletegroup"},"DeleteGroup")," - delete the specified group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/incrementgroupdata"},"IncrementGroupData")," - increment numeric values in the group's data"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/readgroup"},"ReadGroup")," - read the specified group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/readgroupdata"},"ReadGroupData")," - read the data object of specified group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/setgroupopen"},"SetGroupOpen")," - set if user's can join the group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/updategroupacl"},"UpdateGroupAcl")," - update the acl permissions of the specified group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/updategroupname"},"UpdateGroupName")," - update the name of the specified group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/updategroupdata"},"UpdateGroupData")," - update the JSON data of the specified group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/updategroupsummarydata"},"UpdateGroupSummaryData")," - update a group's summary data")),(0,p.kt)("h3",{id:"group-members"},"Group members"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/addgroupmember"},"AddGroupMember")," - add a member to the group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/autojoingroup"},"AutoJoinGroup")," - auto-joins an open group that matches the criteria"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/autojoingroupmulti"},"AutoJoinGroupMulti")," - use when there are multiple group types to consider when auto-joining"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/cancelgroupinvitation"},"CancelGroupInvitation")," - cancel a previously sent invitation"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/invitegroupmember"},"InviteGroupMember")," - invite a member to the group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/joingroup"},"JoinGroup")," - join the specified group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/leavegroup"},"LeaveGroup")," - leave the specified group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/readgroupmembers"},"ReadGroupMembers")," - returns a list of the group's members"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/rejectgroupinvitation"},"RejectGroupInvitation")," - reject a group invitation"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/removegroupmember"},"RemoveGroupMember")," - remove the specified member from the group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/updategroupmember"},"UpdateGroupMember")," - update the group member's attributes")),(0,p.kt)("h3",{id:"locating-groups"},"Locating Groups"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/listgroupspage"},"ListGroupsPage")," - list first page of groups that match the specified query"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/listgroupspagebyoffset"},"ListGroupsPageByOffset")," - get next/prev page"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/listgroupswithmember"},"ListGroupsWithMember")," - list groups that include the specified member"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/getmygroups"},"GetMyGroups")," - return groups that the current user is a member of"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/getrandomgroupsmatching"},"GetRandomGroupsMatching")," - gets a list of randomly selected groups from the server")),(0,p.kt)("h3",{id:"group-entities"},"Group entities"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/creategroupentity"},"CreateGroupEntity")," - create an entity"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/deletegroupentity"},"DeleteGroupEntity")," - delete an entity"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/incrementgroupentitydata"},"IncrementGroupEntityData")," - increment numeric values in the entity's data"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/readgroupentitiespage"},"ReadGroupEntitiesPage")," - returns a list of entities that match the query"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/readgroupentitiespagebyoffset"},"ReadGroupEntitiesPageByOffset")," - get next/prev page"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/readgroupentity"},"ReadGroupEntity")," - reads the specified entity"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/updategroupentitydata"},"UpdateGroupEntityData")," - updates the specified entity"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/updategroupentityacl"},"UpdateGroupEntityAcl")," - Update the acl settings for a group entity, enforcing ownership.")),(0,p.kt)("h3",{id:"system-calls"},"System calls"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysaddgroupmember"},"SysAddGroupMember")," - add a user as a member to the group, bypassing ownership/ACL checks. Optional parameters: role OR attributes."),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/syschangegrouptype"},"SysChangeGroupType")," - changes the group type"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/syscreategroup"},"SysCreateGroup")," - create a group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/syscreategroupentity"},"SysCreateGroupEntity")," - create an entity in the group with no owner"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysdeletegroup"},"SysDeleteGroup")," - delete a group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysdeletegroupentity"},"SysDeleteGroupEntity")," - delete an entity in the group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysgetrandomgroupsmatching"},"SysGetRandomGroupsMatching")," - Gets a list of up to maxReturn randomly selected groups from the server based on the where condition, bypassing ownership/ACL checks"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysincrementgroupdata"},"SysIncrementGroupData")," - partial increment of group data field items. Partial set of items incremented as specified"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysincrementgroupentitydata"},"SysIncrementGroupEntityData")," - partial increment of group entity data field items. Partial set of items incremented as specified"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysisgroupmember"},"SysIsGroupMember")," - Verifies if user is a group member and returns information about group member, bypassing ownership/ACL checks"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/syslistgroupspage"},"SysListGroupsPage")," - retrieve a page of group summary information based on the specified context"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/syslistgroupspagebyoffset"},"SysListGroupsPageByOffset")," - retrieve a page of group summary information based on the encoded context and specified page offset"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysreadgroup"},"SysReadGroup")," - retrieve information about the group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysreadgroupdata"},"SysReadGroupData")," - retrieve a group's data object"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysreadgroupentitiespage"},"SysReadGroupEntitiesPage")," - retrieve a page of group entity information based on the specified context"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysreadgroupentitiespagebyoffset"},"SysReadGroupEntitiesPageByOffset")," - retrieve a page of group entity information based on the encoded context and specified page offset"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysreadgroupentity"},"SysReadGroupEntity")," - read an entity in the group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysreadgroupmembers"},"SysReadGroupMembers")," - read all members in the group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysremovegroupmember"},"SysRemoveGroupMember")," - Remove a member from the group, bypassing group ownership/ACL checks."),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/syssetgroupopen"},"SysSetGroupOpen")," - Set whether a group is open (true) or closed (false)"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysupdategroupacl"},"SysUpdateGroupAcl")," - update a group's access conditions"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysupdategroupdata"},"SysUpdateGroupData")," - update a group's data"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysupdategroupentitydata"},"SysUpdateGroupEntityData")," - update the data for a group entity"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysupdategroupmember"},"SysUpdateGroupMember")," - update a member of the group"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysupdategroupname"},"SysUpdateGroupName")," - update a group's name"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysupdategroupsummarydata"},"SysUpdateGroupSummaryData")," - update a group's summary data"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"/api/capi/group/sysupdategroupentityacl"},"SysUpdateGroupEntityAcl")," - Update the acl settings for a group entity, bypassing ownership/ACL checks.")),(0,p.kt)(s,{mdxType:"DocCardList"}))}d.isMDXComponent=!0}}]);