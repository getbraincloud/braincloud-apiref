"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[11244],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>b});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),s=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),c=s(a),m=n,b=c["".concat(i,".").concat(m)]||c[m]||u[m]||l;return a?r.createElement(b,o(o({ref:t},p),{},{components:a})):r.createElement(b,o({ref:t},p))}));function b(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=m;var d={};for(var i in t)hasOwnProperty.call(t,i)&&(d[i]=t[i]);d.originalType=e,d[c]="string"==typeof e?e:n,o[1]=d;for(var s=2;s<l;s++)o[s]=a[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},84362:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>y,frontMatter:()=>l,metadata:()=>d,toc:()=>s});var r=a(87462),n=(a(67294),a(3905));const l={},o="SysMoveFolder",d={unversionedId:"api/s2s/globalfile/sysmovefolder",id:"api/s2s/globalfile/sysmovefolder",title:"SysMoveFolder",description:"Overview",source:"@site/docs/api/4_s2s/globalfile/sysmovefolder.md",sourceDirName:"api/4_s2s/globalfile",slug:"/api/s2s/globalfile/sysmovefolder",permalink:"/braincloud-apiref/api/s2s/globalfile/sysmovefolder",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/4_s2s/globalfile/sysmovefolder.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1672193337,formattedLastUpdatedAt:"Dec 28, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"SysLookupFolder",permalink:"/braincloud-apiref/api/s2s/globalfile/syslookupfolder"},next:{title:"SysMoveGlobalFile",permalink:"/braincloud-apiref/api/s2s/globalfile/sysmoveglobalfile"}},i={},s=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",t)},c=p("PartialServop"),u=p("BrowserWindow"),m=p("Tabs"),b=p("TabItem"),v={toc:s};function y(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},v,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"sysmovefolder"},"SysMoveFolder"),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-objective_c"},"// S2S call: to view example, switch to the Cloud Code or Raw tab.\n")),(0,n.kt)("p",null,"Move a folder (and its contents). Returns the updated directory tree."),(0,n.kt)(c,{service_name:"globalFileV3",operation_name:"SYS_MOVE_FOLDER",mdxType:"PartialServop"}),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)(u,{mdxType:"BrowserWindow"},(0,n.kt)(m,{mdxType:"Tabs"},(0,n.kt)(b,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"// S2S call: to view example, switch to the Cloud Code or Raw tab.\n"))),(0,n.kt)(b,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},"// S2S call: to view example, switch to the Cloud Code or Raw tab.\n"))),(0,n.kt)(b,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-objectivec"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,n.kt)(b,{value:"java",label:"Java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"// S2S call: to view example, switch to the Cloud Code or Raw tab.\n"))),(0,n.kt)(b,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"// S2S call: to view example, switch to the Cloud Code or Raw tab.\n"))),(0,n.kt)(b,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cfscript"},'var globalFileProxy = bridge.getGlobalFileV3ServiceProxy();\n\nvar treeId = "56b1c593-92d2-4e49-a997-0e493111d7b2";\nvar treeVersion = 4;\nvar newCloudPath = "xaudio/yyy";\nvar updatedName = "tempdir";\nvar createInterimDirectories = true;\n\nvar postResult = globalFileProxy.sysMoveFolder(\n    treeId, treeVersion, newCloudPath, updatedName, createInterimDirectories );\n\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,n.kt)(b,{value:"r",label:"Raw",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "globalFileV3",\n    "operation": "SYS_GET_GLOBAL_CDN_URL",\n    "data": {\n        "treeId": "56b1c593-92d2-4e49-a997-0e493111d7b2",\n        "treeVersion": 4,\n        "newCloudPath": "xaudio/yyy",\n        "updatedName": "tempdir",\n        "createInterimDirectories": true\n    }\n}\n'))))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"JSON Response"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 200,\n    "data": {\n        "globalTree": {\n            "tree": [\n                {\n                    "treeId": "2188e9cf-27fa-4a33-8d06-3306f9a74bf8",\n                    "name": "art",\n                    "type": "Folder",\n                    "desc": "Folder for art assets",\n                    "children": null\n                },\n                {\n                    "treeId": "146cce63-da7a-40c7-bd57-5b5f81607523",\n                    "name": "audio",\n                    "type": "Folder",\n                    "desc": "For audio files",\n                    "children": [\n                        {\n                            "treeId": "1330b5c1-5af4-46d9-820e-c0de1c109366",\n                            "name": "xxx",\n                            "type": "Folder",\n                            "desc": null,\n                            "children": null\n                        }\n                    ]\n                },\n                {\n                    "treeId": "4a98c288-e1ab-4cb8-bdf4-66f7d4ea0739",\n                    "name": "xaudio",\n                    "type": "Folder",\n                    "desc": "",\n                    "children": [\n                        {\n                            "treeId": "02888d60-3caa-4b9a-b9b0-9d8eac5d410d",\n                            "name": "yyy",\n                            "type": "Folder",\n                            "desc": "",\n                            "children": [\n                                {\n                                    "treeId": "56b1c593-92d2-4e49-a997-0e493111d7b2",\n                                    "name": "tempdir",\n                                    "type": "Folder",\n                                    "desc": "Seeing how multilevel works",\n                                    "children": null\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ],\n            "treeVersion": 5\n        }\n    }\n}\n'))),(0,n.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"treeId"),(0,n.kt)("td",{parentName:"tr",align:null},"The id of the folder to move")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"treeVersion"),(0,n.kt)("td",{parentName:"tr",align:null},"Current tree version")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"newCloudPath"),(0,n.kt)("td",{parentName:"tr",align:null},"New path to move the folder to")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"updatedName"),(0,n.kt)("td",{parentName:"tr",align:null},"Updated name for the folder")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"createInterimDirectories"),(0,n.kt)("td",{parentName:"tr",align:null},"Create any sub-folders that don't already exist in ",(0,n.kt)("inlineCode",{parentName:"td"},"newCloudPath")," ?")))))}y.isMDXComponent=!0}}]);