"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[83477],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>k});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(r),m=a,k=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return r?n.createElement(k,l(l({ref:t},u),{},{components:r})):n.createElement(k,l({ref:t},u))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},73048:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>b,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const i={},l="AuthenticateTwitter",o={unversionedId:"api/wrapper/authenticatetwitter",id:"api/wrapper/authenticatetwitter",title:"AuthenticateTwitter",description:"Overview",source:"@site/docs/api/1_wrapper/authenticatetwitter.md",sourceDirName:"api/1_wrapper",slug:"/api/wrapper/authenticatetwitter",permalink:"/braincloud-apiref/api/wrapper/authenticatetwitter",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/1_wrapper/authenticatetwitter.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1673042992,formattedLastUpdatedAt:"Jan 6, 2023",frontMatter:{},sidebar:"apiSidebar",previous:{title:"AuthenticateSteam",permalink:"/braincloud-apiref/api/wrapper/authenticatesteam"},next:{title:"AuthenticateUltra",permalink:"/braincloud-apiref/api/wrapper/authenticateultra"}},s={},c=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Status Codes",id:"status-codes",level:3},{value:"Method Parameters",id:"method-parameters",level:2}],u=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",t)},d=u("PartialServop"),p=u("BrowserWindow"),m=u("Tabs"),k=u("TabItem"),h={toc:c};function b(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},h,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"authenticatetwitter"},"AuthenticateTwitter"),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Authenticate the user using a Twitter user ID, authentication token, and secret from Twitter."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"Make sure you've initialized the brainCloud wrapper before authenticating.")),(0,a.kt)(d,{service_name:"authenticationV2",operation_name:"AUTHENTICATE",mdxType:"PartialServop"}),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)(p,{mdxType:"BrowserWindow"},(0,a.kt)(m,{mdxType:"Tabs"},(0,a.kt)(k,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'string twitterId = "userTwitterId";\nstring token = "userAuthToken";\nstring secret = "secretFromTwitterApi";\nbool forceCreate = true;\n    \nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("[Authenticate Success] {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("[Authenticate Failed] {0}  {1}  {2}", status, code, error));\n};\n_bc.AuthenticateTwitter(\n    twitterId, token, secret, forceCreate,\n    successCallback, failureCallback);\n'))),(0,a.kt)(k,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'const char* twitterId = "userTwitterId";\nconst char* token = "userAuthToken";\nconst char* secret = "secretFromTwitterApi";\n\n_bc->authenticateTwitter(\n    twitterId, token, secret, true, this);\n'))),(0,a.kt)(k,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString* twitterId = @"userTwitterId";\nNSString* token = @"userAuthToken";\nNSString* secret = @"secretFromTwitterApi";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[_bc authenticateTwitter:userID\n                      token:token\n                     secret:secret\n                forceCreate:true\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,a.kt)(k,{value:"java",label:"Java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'String twitterId = "userTwitterId";\nString token = "userAuthToken";\nString secret = "secretFromTwitterApi";\nboolean forceCreate = true;\nthis; // implements IServerCallback\n\n_bc.authenticateTwitter(\n    twitterId, token, secret, forceCreate, this);\n'))),(0,a.kt)(k,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'var twitterId = "userTwitterId";\nvar token = "userAuthToken";\nvar secret = "secretFromTwitterApi";\nvar forceCreate = true;\n\n_bc.authenticateTwitter(twitterId, token, secret, forceCreate, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,a.kt)(k,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'var twitterId = "userTwitterId";\nvar token = "userAuthToken";\nvar secret = "secretFromTwitterApi";\nvar forceCreate = true;\n\n_bc.authenticateTwitter(twitterId, token, secret, forceCreate, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,a.kt)(k,{value:"r",label:"Raw",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'var twitterId = "userTwitterId";\nvar token = "userAuthToken";\nvar secret = "secretFromTwitterApi";\nvar forceCreate = true;\n\n_bc.authenticateTwitter(twitterId, token, secret, forceCreate, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))))),(0,a.kt)("details",null,(0,a.kt)("summary",null,"JSON Response"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 200,\n    "data": {\n        "vcPurchased": 0,\n        "xpCapped": false,\n        "experiencePoints": 230,\n        "sent_events": [\n        ],\n        "playerSessionExpiry": 1200,\n        "playerName": "Jimmy",\n        "vcClaimed": 0,\n        "parentProfileId": null,\n        "rewards": {\n            "rewardDetails": {},\n            "rewards": {},\n            "currency": {}\n        },\n        "loginCount": 23,\n        "server_time": 1445545791711,\n        "experienceLevel": 0,\n        "entities": [\n        ],\n        "incoming_events": [\n        ],\n        "currency": {\n            "gold": {\n                "purchased": 0,\n                "balance": 0,\n                "consumed": 0,\n                "awarded": 0\n            }\n        },\n        "statistics": {\n            "deaths": 0,\n            "kills": 0\n        },\n        "abTestingId": 78,\n        "id": "47037fc9-ca7b-4f61-a71f-e5a37b0e8a03",\n        "sessionId": "bg6qf38p2btl0o825s99385nd1",\n        "profileId": "47037fc9-ca7b-4f61-a71f-e5a37b0e8a03",\n        "newUser": "false"\n    }\n}\n'))),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Common Error Code"),(0,a.kt)("h3",{id:"status-codes"},"Status Codes"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Code"),(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"40206"),(0,a.kt)("td",{parentName:"tr",align:null},"MISSING_IDENTITY_ERROR"),(0,a.kt)("td",{parentName:"tr",align:null},"The identity does not exist on the server and ",(0,a.kt)("inlineCode",{parentName:"td"},"forceCreate")," was ",(0,a.kt)("inlineCode",{parentName:"td"},"false")," ","[and a ",(0,a.kt)("inlineCode",{parentName:"td"},"profileId")," was provided - otherwise 40208 would have been returned]",". Will also occur when ",(0,a.kt)("inlineCode",{parentName:"td"},"forceCreate")," is ",(0,a.kt)("inlineCode",{parentName:"td"},"true")," and a saved ","[but un-associated]"," ",(0,a.kt)("inlineCode",{parentName:"td"},"profileId")," is provided. The error handler should reset the stored profile id (if there is one) and re-authenticate, setting ",(0,a.kt)("inlineCode",{parentName:"td"},"forceCreate")," to ",(0,a.kt)("inlineCode",{parentName:"td"},"true")," to create a new account. ",(0,a.kt)("strong",{parentName:"td"},"A common cause of this error is deleting the user's account via the Design Portal."))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"40207"),(0,a.kt)("td",{parentName:"tr",align:null},"SWITCHING_PROFILES"),(0,a.kt)("td",{parentName:"tr",align:null},"Indicates that the identity credentials are valid, and the saved ",(0,a.kt)("inlineCode",{parentName:"td"},"profileId")," is valid, but the identity is not associated with the provided ",(0,a.kt)("inlineCode",{parentName:"td"},"profileId"),". This may indicate that the user wants to switch accounts in the app. Often an app will pop-up a dialog confirming that the user wants to switch accounts, and then reset the stored ",(0,a.kt)("inlineCode",{parentName:"td"},"profileId")," and call authenticate again.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"40208"),(0,a.kt)("td",{parentName:"tr",align:null},"MISSING_PROFILE_ERROR"),(0,a.kt)("td",{parentName:"tr",align:null},"Returned when the identity cannot be located, no ",(0,a.kt)("inlineCode",{parentName:"td"},"profileId")," is provided, and ",(0,a.kt)("inlineCode",{parentName:"td"},"forceCreate")," is false. The normal response is to call Authenticate again with ",(0,a.kt)("inlineCode",{parentName:"td"},"forceCreate")," set to ",(0,a.kt)("inlineCode",{parentName:"td"},"true"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"40217"),(0,a.kt)("td",{parentName:"tr",align:null},"UNKNOWN_AUTH_ERROR"),(0,a.kt)("td",{parentName:"tr",align:null},"An unknown error has occurred during authentication.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"40307"),(0,a.kt)("td",{parentName:"tr",align:null},"TOKEN_DOES_NOT_MATCH_USER"),(0,a.kt)("td",{parentName:"tr",align:null},"The user credentials are invalid (i.e. bad Twitter userId / token / secret). May also indicate that Twitter integration is not properly configured."))))),(0,a.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"userId"),(0,a.kt)("td",{parentName:"tr",align:null},"String representation of Twitter user ID")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"token"),(0,a.kt)("td",{parentName:"tr",align:null},"The authentication token derived via the Twitter APIs")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"secret"),(0,a.kt)("td",{parentName:"tr",align:null},"The secret given when attempting to link with Twitter")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"forceCreate"),(0,a.kt)("td",{parentName:"tr",align:null},"Should a new profile be created for this user if the account does not exist?")))))}b.isMDXComponent=!0}}]);