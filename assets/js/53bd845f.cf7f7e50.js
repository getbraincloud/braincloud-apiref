"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[4576],{3905:(n,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>b});var a=t(67294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},o=Object.keys(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var s=a.createContext({}),u=function(n){var e=a.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},p=function(n){var e=u(n.components);return a.createElement(s.Provider,{value:e},n.children)},d="mdxType",c={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,o=n.originalType,s=n.parentName,p=l(n,["components","mdxType","originalType","parentName"]),d=u(t),m=r,b=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return t?a.createElement(b,i(i({ref:e},p),{},{components:t})):a.createElement(b,i({ref:e},p))}));function b(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=n,l[d]="string"==typeof n?n:r,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},85641:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=t(87462),r=(t(67294),t(3905));const o={},i="SysEditTournamentTemplate",l={unversionedId:"api/capi/tournament/sysedittournamenttemplate",id:"api/capi/tournament/sysedittournamenttemplate",title:"SysEditTournamentTemplate",description:"Overview",source:"@site/docs/api/2_capi/tournament/sysedittournamenttemplate.md",sourceDirName:"api/2_capi/tournament",slug:"/api/capi/tournament/sysedittournamenttemplate",permalink:"/braincloud-apiref/api/capi/tournament/sysedittournamenttemplate",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/tournament/sysedittournamenttemplate.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"SysEditDivisionSetConfig",permalink:"/braincloud-apiref/api/capi/tournament/syseditdivisionsetconfig"},next:{title:"SysListDivisionSetConfigs",permalink:"/braincloud-apiref/api/capi/tournament/syslistdivisionsetconfigs"}},s={},u=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],p=n=>function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)},d=p("PartialServop"),c=p("BrowserWindow"),m=p("Tabs"),b=p("TabItem"),y={toc:u};function f(n){let{components:e,...t}=n;return(0,r.kt)("wrapper",(0,a.Z)({},y,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sysedittournamenttemplate"},"SysEditTournamentTemplate"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Creates a new tournament template."),(0,r.kt)(d,{service_name:"tournament",operation_name:"SYS_EDIT_TOURNAMENT_TEMPLATE",mdxType:"PartialServop"}),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)(c,{mdxType:"BrowserWindow"},(0,r.kt)(m,{mdxType:"Tabs"},(0,r.kt)(b,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(b,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(b,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-objectivec"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(b,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(b,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// Cloud Code only. To view example, switch to the Cloud Code tab\n"))),(0,r.kt)(b,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cfscript"},'var tournamentCode = "uniqueTournamentCode";\nvar configJson = {         \n      "tournamentCode": "uniqueTournamentCode",\n      "configJson": {\n        "description": {\n          "name": {\n              "en": "tFree"\n          },\n          "desc": {\n              "en": "Free tournament. Pays out for rankings: 1st, 2nd and top 10%. Push notifications for start and complete."\n          }\n        },\n        "notifications": {\n          "startingSoon": {\n              "enabled": false,\n              "pushId": null,\n              "mail": {}\n          },\n          "start": {\n              "enabled": true,\n              "pushId": 2,\n              "mail": {}\n          },\n          "scorePassed": {\n              "enabled": false,\n              "pushId": null,\n              "mail": {}\n          },\n          "endingSoon": {\n              "enabled": false,\n              "pushId": null,\n              "mail": {}\n          },\n          "complete": {\n              "enabled": true,\n              "pushId": 3,\n              "mail": {}\n          }\n        },\n        "calcScript": "",\n        "postScript": "",\n        "customJson": {},\n        "payoutRules": [\n          {\n              "reward": {\n                "experiencePoints": 10,\n                "currency": {\n                    "coins": 100\n                }\n              },\n              "rank": {\n                "rankAbs": 1\n              }\n          },\n          {\n              "reward": {\n                "experiencePoints": 5,\n                "currency": {\n                    "coins": 50\n                }\n              },\n              "rank": {\n                "rankAbs": 2\n              }\n          },\n          {\n              "reward": {\n                "experiencePoints": 1,\n                "currency": {\n                    "coins": 5\n                }\n              },\n              "rank": {\n                "rankToPercent": 10\n              }\n          }\n        ],\n        "entryFee": {}\n      }\n    };\n\nvar version = 1;\nvar applyChangesToLiveLeaderboards = false;\nvar tournamentProxy = bridge.getTournamentServiceProxy();\n\nvar postResult = tournamentProxy.sysEditTournamentTemplate(tournamentCode, configJson, version, applyChangesToLiveLeaderboards);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,r.kt)(b,{value:"r",label:"Raw",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "tournament",\n    "operation": "SYS_EDIT_TOURNAMENT_TEMPLATE",\n    "data": {\n    "tournamentCode": "uniqueTournamentCode",\n    "configJson": {\n      "description": {\n        "name": {\n            "en": "tFree"\n        },\n        "desc": {\n            "en": "Free tournament. Pays out for rankings: 1st, 2nd and top 10%. Push notifications for start and complete."\n        }\n      },\n      "notifications": {\n        "startingSoon": {\n            "enabled": false,\n            "pushId": null,\n            "mail": {}\n        },\n        "start": {\n            "enabled": true,\n            "pushId": 2,\n            "mail": {}\n        },\n        "scorePassed": {\n            "enabled": false,\n            "pushId": null,\n            "mail": {}\n        },\n        "endingSoon": {\n            "enabled": false,\n            "pushId": null,\n            "mail": {}\n        },\n        "complete": {\n            "enabled": true,\n            "pushId": 3,\n            "mail": {}\n        }\n      },\n      "calcScript": "",\n      "postScript": "",\n      "customJson": {},\n      "payoutRules": [\n        {\n            "reward": {\n              "experiencePoints": 10,\n              "currency": {\n                  "coins": 100\n              }\n            },\n            "rank": {\n              "rankAbs": 1\n            }\n        },\n        {\n            "reward": {\n              "experiencePoints": 5,\n              "currency": {\n                  "coins": 50\n              }\n            },\n            "rank": {\n              "rankAbs": 2\n            }\n        },\n        {\n            "reward": {\n              "experiencePoints": 1,\n              "currency": {\n                  "coins": 5\n              }\n            },\n            "rank": {\n              "rankToPercent": 10\n            }\n        }\n      ],\n      "entryFee": {}\n    },\n    "version": -1,\n    "applyChangesToLiveLeaderboards": false\n    }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"JSON Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "gameId": "23782",\n    "tournamentCode": "uniqueTournamentCode",\n    "version": 1,\n    "description": {\n      "name": {\n        "en": "tFree"\n      },\n      "desc": {\n        "en": "Free tournament. Pays out for rankings: 1st, 2nd and top 10%. Push notifications for start and complete."\n      }\n    },\n    "notifications": {\n      "startingSoon": {\n        "enabled": false,\n        "pushId": null,\n        "mail": {}\n      },\n      "start": {\n        "enabled": true,\n        "pushId": 2,\n        "mail": {}\n      },\n      "scorePassed": {\n        "enabled": false,\n        "pushId": null,\n        "mail": {}\n      },\n      "endingSoon": {\n        "enabled": false,\n        "pushId": null,\n        "mail": {}\n      },\n      "complete": {\n        "enabled": true,\n        "pushId": 3,\n        "mail": {}\n      }\n    },\n    "calcScript": "",\n    "postScript": "",\n    "customJson": {},\n    "payoutRules": [\n      {\n        "rank": {\n          "rankAbs": 1\n        },\n        "reward": {\n          "experiencePoints": 10,\n          "currency": {\n            "coins": 100\n          }\n        }\n      },\n      {\n        "rank": {\n          "rankAbs": 2\n        },\n        "reward": {\n          "experiencePoints": 5,\n          "currency": {\n            "coins": 50\n          }\n        }\n      },\n      {\n        "rank": {\n          "rankToPercent": 10\n        },\n        "reward": {\n          "experiencePoints": 1,\n          "currency": {\n            "coins": 5\n          }\n        }\n      }\n    ],\n    "entryFee": {},\n    "createdAt": 1632511327924,\n    "updatedAt": 1632511327924\n  },\n  "status": 200\n}\n'))),(0,r.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tournamentCode"),(0,r.kt)("td",{parentName:"tr",align:null},"The unique tournament code to assign to the template")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"configJson"),(0,r.kt)("td",{parentName:"tr",align:null},"Configuration data defining the tournament template")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"version"),(0,r.kt)("td",{parentName:"tr",align:null},"Current version number of tournament template to update, use -1 to disable version checking")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"applyChangesToLiveLeaderboards"),(0,r.kt)("td",{parentName:"tr",align:null},"If true, forces updates to all leaderboards with current version referencing that tournament code to set the new tournament template version. If false, new tournament template version is picked up on the leaderboards' next rotation.")))))}f.isMDXComponent=!0}}]);