"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[96054],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>v});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,v=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(v,o(o({ref:t},p),{},{components:n})):a.createElement(v,o({ref:t},p))}));function v(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},76636:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const i={},o="UpdateSingleton",s={unversionedId:"api/capi/customentity/updatesingleton",id:"api/capi/customentity/updatesingleton",title:"UpdateSingleton",description:"Overview",source:"@site/docs/api/2_capi/customentity/updatesingleton.md",sourceDirName:"api/2_capi/customentity",slug:"/api/capi/customentity/updatesingleton",permalink:"/braincloud-apiref/api/capi/customentity/updatesingleton",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/customentity/updatesingleton.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"UpdateEntityFieldsSharded",permalink:"/braincloud-apiref/api/capi/customentity/updateentityfieldssharded"},next:{title:"UpdateSingletonFields",permalink:"/braincloud-apiref/api/capi/customentity/updatesingletonfields"}},l={},c=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],p=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},u=p("PartialServop"),d=p("BrowserWindow"),m=p("Tabs"),v=p("TabItem"),y={toc:c};function g(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"updatesingleton"},"UpdateSingleton"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Updates the singleton owned by the user for the specified custom entity type on the server, creating the singleton if it does not exist. This operation results in the owned singleton's data being completely replaced by the passed in JSON object."),(0,r.kt)(u,{service_name:"customEntity",operation_name:"UPDATE_SINGLETON",mdxType:"PartialServop"}),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)(d,{mdxType:"BrowserWindow"},(0,r.kt)(m,{mdxType:"Tabs"},(0,r.kt)(v,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'string entityType = "athletes";\nint version = 1;\nstring dataJson = "{\\"firstName\\":\\"Super\\",\\"surName\\":\\"Star\\",\\"position\\":\\"defense\\",\\"goals\\":3,\\"assists\\":5}";\nstring acl = "{\\"other\\":1}";\nint timeToLive = null;\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.CustomEntityService.UpdateSingleton(entityType, version, dataJson, acl, timeToLive, successCallback, failureCallback);\n'))),(0,r.kt)(v,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *entityType = "athletes";\nint version = 1;\nconst char *dataJson = "{\\"firstName\\":\\"Super\\",\\"surName\\":\\"Star\\",\\"position\\":\\"defense\\",\\"goals\\":3,\\"assists\\":5}";\nconst char *acl = "{\\"other\\":1}";\nint timeToLive = null;\n_bc->getCustomEntityService()->updateSingleton(entityType, version, dataJson, acl, timeToLive, this);\n'))),(0,r.kt)(v,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *entityType = @"athletes";\nint version = 1;\nNSString *dataJson = "{\\"firstName\\":\\"Super\\",\\"surName\\":\\"Star\\",\\"position\\":\\"defense\\",\\"goals\\":3,\\"assists\\":5}";\nNSString *acl = "{\\"other\\":1}";\nint timeToLive = null;\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc customEntityService] updateSingleton:entityType\n                    version:version\n                   dataJson:dataJson\n                        acl:acl\n                 timeToLive:timeToLive\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,r.kt)(v,{value:"java",label:"Java",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'String entityType = "athletes";\nint version = 1;\nString dataJson = "{\\"firstName\\":\\"Super\\",\\"surName\\":\\"Star\\",\\"position\\":\\"defense\\",\\"goals\\":3,\\"assists\\":5}";\nString acl = "{\\"other\\":1}";\nint timeToLive = null;\nthis; // implements IServerCallback\n\n_bc.getCustomEntityService().updateSingleton(entityType, version, dataJson, acl, timeToLive, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,r.kt)(v,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'var entityType = "athletes";\nvar version = 1;\nvar dataJson = {\n  "firstName": "Super",\n  "surName": "Star",\n  "position": "forward",\n  "goals": 3,\n  "assists": 5\n};\nvar acl = {\n  "other": 1\n};\nvar timeToLive = null;\n\n_bc.customEntity.updateSingleton(entityType, version, dataJson, acl, timeToLive, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,r.kt)(v,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cfscript"},'var entityType = "athletes";\nvar version = 1;\nvar dataJson = {\n  "firstName": "Super",\n  "surName": "Star",\n  "position": "defense",\n  "goals": 3,\n  "assists": 5\n};\nvar acl = {\n  "other": 1\n};\nvar timeToLive = null;\nvar customEntityProxy = bridge.getCustomEntityServiceProxy();\n\nvar postResult = customEntityProxy.updateSingleton(entityType, version, dataJson, acl, timeToLive);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,r.kt)(v,{value:"r",label:"Raw",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-r"},'{\n    "service": "customEntity",\n    "operation": "UPDATE_SINGLETON",\n    "data": {\n        "entityType": "athletes",\n        "version": 1,\n        "dataJson": {\n            "firstName": "Super",\n            "surName": "Star",\n            "position": "defense",\n            "goals": 3,\n            "assists": 5\n        },\n        "acl": {\n      "other": 1\n    },\n        "timeToLive": null\n    }\n}\n'))))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"JSON Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "timeToLive": null,\n    "version": 2,\n    "expiresAt": null,\n    "updatedAt": 1591820239028\n  },\n  "status": 200\n}\n'))),(0,r.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"entityType"),(0,r.kt)("td",{parentName:"tr",align:null},"The type of custom entity singleton to create/update. Custom entity type must have option isOwned set to true.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"version"),(0,r.kt)("td",{parentName:"tr",align:null},"Version of the custom entity singleton being updated.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"dataJson"),(0,r.kt)("td",{parentName:"tr",align:null},"The singleton entity's custom field data, as JSON.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"acl"),(0,r.kt)("td",{parentName:"tr",align:null},"The singleton entity's Access Control List as an object. A null ACL implies default permissions which make the entity readable by others.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"timeToLive"),(0,r.kt)("td",{parentName:"tr",align:null},"The duration of time, in milliseconds, the singleton custom entity should live before being expired. Null indicates never expires. Value of -1 indicates no change for updates.")))))}g.isMDXComponent=!0}}]);