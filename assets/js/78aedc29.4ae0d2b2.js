"use strict";(self.webpackChunkdocusauruns_ts=self.webpackChunkdocusauruns_ts||[]).push([[5117],{3905:(t,e,a)=>{a.d(e,{Zo:()=>p,kt:()=>d});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function s(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?s(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},s=Object.keys(t);for(r=0;r<s.length;r++)a=s[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(r=0;r<s.length;r++)a=s[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var o=r.createContext({}),c=function(t){var e=r.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},p=function(t){var e=c(t.components);return r.createElement(o.Provider,{value:e},t.children)},u="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},b=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,s=t.originalType,o=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),u=c(a),b=n,d=u["".concat(o,".").concat(b)]||u[b]||m[b]||s;return a?r.createElement(d,l(l({ref:e},p),{},{components:a})):r.createElement(d,l({ref:e},p))}));function d(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var s=a.length,l=new Array(s);l[0]=b;var i={};for(var o in e)hasOwnProperty.call(e,o)&&(i[o]=e[o]);i.originalType=t,i[u]="string"==typeof t?t:n,l[1]=i;for(var c=2;c<s;c++)l[c]=a[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}b.displayName="MDXCreateElement"},97233:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>v,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=a(87462),n=(a(67294),a(3905));const s={},l="IncrementGlobalStats",i={unversionedId:"api/capi/globalstats/incrementglobalstats",id:"api/capi/globalstats/incrementglobalstats",title:"IncrementGlobalStats",description:"Overview",source:"@site/docs/api/2_capi/globalstats/incrementglobalstats.md",sourceDirName:"api/2_capi/globalstats",slug:"/api/capi/globalstats/incrementglobalstats",permalink:"/braincloud-apiref/api/capi/globalstats/incrementglobalstats",draft:!1,editUrl:"https://github.com/getbraincloud/braincloud-apiref/tree/main/docs/api/2_capi/globalstats/incrementglobalstats.md",tags:[],version:"current",lastUpdatedBy:"jasonl",lastUpdatedAt:1671809255,formattedLastUpdatedAt:"Dec 23, 2022",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Global Statistics",permalink:"/braincloud-apiref/api/capi/globalstats/"},next:{title:"ProcessStatistics",permalink:"/braincloud-apiref/api/capi/globalstats/processstatistics"}},o={},c=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Method Parameters",id:"method-parameters",level:2}],p=t=>function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",e)},u=p("PartialServop"),m=p("BrowserWindow"),b=p("Tabs"),d=p("TabItem"),g={toc:c};function v(t){let{components:e,...a}=t;return(0,n.kt)("wrapper",(0,r.Z)({},g,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"incrementglobalstats"},"IncrementGlobalStats"),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"Atomically increment (or decrement) global statistics. Global statistics are defined through the brainCloud portal."),(0,n.kt)("p",null,"StatisticsData like"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},'{ "stat1" : 10, "stat2" : -5.5 }')),(0,n.kt)("p",null,"would increment stat1 by 10 and decrement stat2 by 5.5. For the full statistics grammar see the ",(0,n.kt)("a",{parentName:"p",href:"/api/appendix/statisticsgrammar"},"statistics grammar section"),"."),(0,n.kt)("p",null,"There are many more complex operations supported such as"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},'{ "stat1" : "INC_TO_LIMIT#9#30" }')),(0,n.kt)("p",null,"which increments stat1 by 9 up to a limit of 30."),(0,n.kt)(u,{service_name:"globalGameStatistics",operation_name:"UPDATE_INCREMENT",mdxType:"PartialServop"}),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)(m,{mdxType:"BrowserWindow"},(0,n.kt)(b,{mdxType:"Tabs"},(0,n.kt)(d,{value:"csharp",label:"C#",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'string statistics = "{\\"PLAYER_COUNT\\":1}";\nSuccessCallback successCallback = (response, cbObject) =>\n{\n    Debug.Log(string.Format("Success | {0}", response));\n};\nFailureCallback failureCallback = (status, code, error, cbObject) =>\n{\n    Debug.Log(string.Format("Failed | {0}  {1}  {2}", status, code, error));\n};\n\n_bc.GlobalStatisticsService.IncrementGlobalStats(statistics, successCallback, failureCallback);\n'))),(0,n.kt)(d,{value:"cpp",label:"C++",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cpp"},'const char *statistics = "{\\"PLAYER_COUNT\\":1}";\n\n_bc->getGlobalStatisticsService()->incrementGlobalStats(statistics, this);\n'))),(0,n.kt)(d,{value:"objectivec",label:"Objective-C",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-objectivec"},'NSString *statistics = @"{\\"PLAYER_COUNT\\":1}";\nBCCompletionBlock successBlock;      // define callback\nBCErrorCompletionBlock failureBlock; // define callback\n\n[[_bc globalStatisticsService] incrementGlobalStats:statistics\n            completionBlock:successBlock\n       errorCompletionBlock:failureBlock\n                   cbObject:nil];\n'))),(0,n.kt)(d,{value:"java",label:"Java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},'String statistics = "{\\"PLAYER_COUNT\\":1}";\nthis; // implements IServerCallback\n\n_bc.getGlobalStatisticsService().incrementGlobalStats(statistics, this);\n\npublic void serverCallback(ServiceName serviceName, ServiceOperation serviceOperation, JSONObject jsonData)\n{\n    System.out.print(String.format("Success | %s", jsonData.toString()));\n}\npublic void serverError(ServiceName serviceName, ServiceOperation serviceOperation, int statusCode, int reasonCode, String jsonError)\n{\n    System.out.print(String.format("Failed | %d %d %s", statusCode,  reasonCode, jsonError.toString()));\n}\n'))),(0,n.kt)(d,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},'var statistics = {\n    "PLAYER_COUNT": 1\n};\n\n_bc.globalStatistics.incrementGlobalStats(statistics, result =>\n{\n    var status = result.status;\n    console.log(status + " : " + JSON.stringify(result, null, 2));\n});\n'))),(0,n.kt)(d,{value:"cfs",label:"Cloud Code",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cfscript"},'var statistics = {\n    "PLAYER_COUNT": 1\n};\nvar globalStatisticsProxy = bridge.getGlobalStatisticsServiceProxy();\n\nvar postResult = globalStatisticsProxy.incrementGlobalStats(statistics);\nif (postResult.status == 200) {\n    // Success!\n}\n'))),(0,n.kt)(d,{value:"r",label:"Raw",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-cfscript"},'var statistics = {\n    "PLAYER_COUNT": 1\n};\nvar globalStatisticsProxy = bridge.getGlobalStatisticsServiceProxy();\n\nvar postResult = globalStatisticsProxy.incrementGlobalStats(statistics);\nif (postResult.status == 200) {\n    // Success!\n}\n'))))),(0,n.kt)("details",null,(0,n.kt)("summary",null,"JSON Response"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 200,\n    "data": {\n        "statistics": {\n            "PLAYER_COUNT": 16\n        }\n    }\n}\n'))),(0,n.kt)("h2",{id:"method-parameters"},"Method Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"statistics"),(0,n.kt)("td",{parentName:"tr",align:null},"A collection containing the statistics to increment")))))}v.isMDXComponent=!0}}]);